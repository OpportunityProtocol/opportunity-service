{
    "CONTROL": {
        "contractName": "Controllable",
        "abi": [
          {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/elijahhampton/git/opportunity-core/src/contracts/control/Controllable.sol\":\"Controllable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/elijahhampton/git/opportunity-core/src/contracts/control/Controllable.sol\":{\"keccak256\":\"0x2b616e0eae728ab0b2733946afc99c001a24aff86cabee94471ffc958da33b8e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e9f8be8287296be60a9b46589b4b1fbf35fb0af50e6c4d107be19358fe4a93d\",\"dweb:/ipfs/QmVXyxkpJT6JDCZPRWzZ2yzmuBEgMvWqQCrMgV7FazdAde\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/MarketLib.sol\":{\"keccak256\":\"0x353918e0f71cbe7e131a3fd49986393588497e042b8aa0eea26ebea905ece310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be10f8229d7e9184d1831fde2ed369de0232fa19a1f06cb662aa4942f7661918\",\"dweb:/ipfs/QmPbX7YYB3RFn38RxRXETNiuupmvG657TdfN3P2a3hb3yJ\"]}},\"version\":1}",
        "bytecode": "0x6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603f80605d6000396000f3fe6080604052600080fdfea2646970667358221220509702b161f8bf2c525674ce38ed76cf629e564f1693a4c869031daaca64a31d64736f6c63430008000033",
        "deployedBytecode": "0x6080604052600080fdfea2646970667358221220509702b161f8bf2c525674ce38ed76cf629e564f1693a4c869031daaca64a31d64736f6c63430008000033",
        "immutableReferences": {},
        "generatedSources": [],
        "deployedGeneratedSources": [],
        "sourceMap": "96:870:2:-:0;;;164:62;;;;;;;;;;208:10;188:17;;:30;;;;;;;;;;;;;;;;;;96:870;;;;;;",
        "deployedSourceMap": "96:870:2:-:0;;;;;",
        "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../libraries/MarketLib.sol\";\n\ncontract Controllable {\n    address private _globalController;\n\n    constructor() {\n        _globalController = msg.sender;\n     }\n\n     modifier onlyGlobalController(address requester) {\n         require(requester == _globalController);\n         _;\n     }\n\n     modifier onlyDefaultMarkets(MarketLib.MarketType marketType) {\n         require(marketType == MarketLib.MarketType.DEFAULT);\n        _;\n     }\n\n     modifier onlyCustomMarkets(MarketLib.MarketType marketType) {\n          require(marketType == MarketLib.MarketType.CREATED);\n         _;\n     }\n\n     modifier onlyNotPausedState(MarketLib.MarketStatus marketStatus) {\n         require(marketStatus != MarketLib.MarketStatus.PAUSED);\n         _;\n     }\n\n      modifier onlyPausedState(MarketLib.MarketStatus marketStatus) {\n         require(marketStatus == MarketLib.MarketStatus.ACTIVE);\n         _;\n     }\n\n}",
        "sourcePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/control/Controllable.sol",
        "ast": {
          "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/control/Controllable.sol",
          "exportedSymbols": {
            "Controllable": [
              176
            ],
            "MarketLib": [
              769
            ]
          },
          "id": 177,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 91,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:2"
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/MarketLib.sol",
              "file": "../libraries/MarketLib.sol",
              "id": 92,
              "nodeType": "ImportDirective",
              "scope": 177,
              "sourceUnit": 770,
              "src": "58:36:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 176,
              "linearizedBaseContracts": [
                176
              ],
              "name": "Controllable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_globalController",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "124:33:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "124:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "178:48:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 97,
                            "name": "_globalController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "188:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 98,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "208:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "208:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "188:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 101,
                        "nodeType": "ExpressionStatement",
                        "src": "188:30:2"
                      }
                    ]
                  },
                  "id": 103,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "175:2:2"
                  },
                  "returnParameters": {
                    "id": 96,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "178:0:2"
                  },
                  "scope": 176,
                  "src": "164:62:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 114,
                    "nodeType": "Block",
                    "src": "282:70:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 108,
                                "name": "requester",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105,
                                "src": "301:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 109,
                                "name": "_globalController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 94,
                                "src": "314:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "301:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 107,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "293:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "293:39:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 112,
                        "nodeType": "ExpressionStatement",
                        "src": "293:39:2"
                      },
                      {
                        "id": 113,
                        "nodeType": "PlaceholderStatement",
                        "src": "343:1:2"
                      }
                    ]
                  },
                  "id": 115,
                  "name": "onlyGlobalController",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 106,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 105,
                        "mutability": "mutable",
                        "name": "requester",
                        "nodeType": "VariableDeclaration",
                        "scope": 115,
                        "src": "263:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 104,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "263:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "262:19:2"
                  },
                  "src": "233:119:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 129,
                    "nodeType": "Block",
                    "src": "420:81:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_MarketType_$765",
                                "typeString": "enum MarketLib.MarketType"
                              },
                              "id": 125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 121,
                                "name": "marketType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 118,
                                "src": "439:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MarketType_$765",
                                  "typeString": "enum MarketLib.MarketType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 122,
                                    "name": "MarketLib",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 769,
                                    "src": "453:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_MarketLib_$769_$",
                                      "typeString": "type(library MarketLib)"
                                    }
                                  },
                                  "id": 123,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MarketType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 765,
                                  "src": "453:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_MarketType_$765_$",
                                    "typeString": "type(enum MarketLib.MarketType)"
                                  }
                                },
                                "id": 124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "DEFAULT",
                                "nodeType": "MemberAccess",
                                "src": "453:28:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MarketType_$765",
                                  "typeString": "enum MarketLib.MarketType"
                                }
                              },
                              "src": "439:42:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 120,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "431:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "431:51:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 127,
                        "nodeType": "ExpressionStatement",
                        "src": "431:51:2"
                      },
                      {
                        "id": 128,
                        "nodeType": "PlaceholderStatement",
                        "src": "492:1:2"
                      }
                    ]
                  },
                  "id": 130,
                  "name": "onlyDefaultMarkets",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 118,
                        "mutability": "mutable",
                        "name": "marketType",
                        "nodeType": "VariableDeclaration",
                        "scope": 130,
                        "src": "387:31:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MarketType_$765",
                          "typeString": "enum MarketLib.MarketType"
                        },
                        "typeName": {
                          "id": 117,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 116,
                            "name": "MarketLib.MarketType",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 765,
                            "src": "387:20:2"
                          },
                          "referencedDeclaration": 765,
                          "src": "387:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketType_$765",
                            "typeString": "enum MarketLib.MarketType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "386:33:2"
                  },
                  "src": "359:142:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 144,
                    "nodeType": "Block",
                    "src": "568:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_MarketType_$765",
                                "typeString": "enum MarketLib.MarketType"
                              },
                              "id": 140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 136,
                                "name": "marketType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 133,
                                "src": "588:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MarketType_$765",
                                  "typeString": "enum MarketLib.MarketType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 137,
                                    "name": "MarketLib",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 769,
                                    "src": "602:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_MarketLib_$769_$",
                                      "typeString": "type(library MarketLib)"
                                    }
                                  },
                                  "id": 138,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MarketType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 765,
                                  "src": "602:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_MarketType_$765_$",
                                    "typeString": "type(enum MarketLib.MarketType)"
                                  }
                                },
                                "id": 139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "CREATED",
                                "nodeType": "MemberAccess",
                                "src": "602:28:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MarketType_$765",
                                  "typeString": "enum MarketLib.MarketType"
                                }
                              },
                              "src": "588:42:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 135,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "580:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "580:51:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 142,
                        "nodeType": "ExpressionStatement",
                        "src": "580:51:2"
                      },
                      {
                        "id": 143,
                        "nodeType": "PlaceholderStatement",
                        "src": "642:1:2"
                      }
                    ]
                  },
                  "id": 145,
                  "name": "onlyCustomMarkets",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "marketType",
                        "nodeType": "VariableDeclaration",
                        "scope": 145,
                        "src": "535:31:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MarketType_$765",
                          "typeString": "enum MarketLib.MarketType"
                        },
                        "typeName": {
                          "id": 132,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 131,
                            "name": "MarketLib.MarketType",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 765,
                            "src": "535:20:2"
                          },
                          "referencedDeclaration": 765,
                          "src": "535:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketType_$765",
                            "typeString": "enum MarketLib.MarketType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "534:33:2"
                  },
                  "src": "508:143:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 159,
                    "nodeType": "Block",
                    "src": "723:85:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_MarketStatus_$768",
                                "typeString": "enum MarketLib.MarketStatus"
                              },
                              "id": 155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 151,
                                "name": "marketStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 148,
                                "src": "742:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MarketStatus_$768",
                                  "typeString": "enum MarketLib.MarketStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 152,
                                    "name": "MarketLib",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 769,
                                    "src": "758:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_MarketLib_$769_$",
                                      "typeString": "type(library MarketLib)"
                                    }
                                  },
                                  "id": 153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MarketStatus",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 768,
                                  "src": "758:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_MarketStatus_$768_$",
                                    "typeString": "type(enum MarketLib.MarketStatus)"
                                  }
                                },
                                "id": 154,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "PAUSED",
                                "nodeType": "MemberAccess",
                                "src": "758:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MarketStatus_$768",
                                  "typeString": "enum MarketLib.MarketStatus"
                                }
                              },
                              "src": "742:45:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 150,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "734:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "734:54:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 157,
                        "nodeType": "ExpressionStatement",
                        "src": "734:54:2"
                      },
                      {
                        "id": 158,
                        "nodeType": "PlaceholderStatement",
                        "src": "799:1:2"
                      }
                    ]
                  },
                  "id": 160,
                  "name": "onlyNotPausedState",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 149,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 148,
                        "mutability": "mutable",
                        "name": "marketStatus",
                        "nodeType": "VariableDeclaration",
                        "scope": 160,
                        "src": "686:35:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MarketStatus_$768",
                          "typeString": "enum MarketLib.MarketStatus"
                        },
                        "typeName": {
                          "id": 147,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 146,
                            "name": "MarketLib.MarketStatus",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 768,
                            "src": "686:22:2"
                          },
                          "referencedDeclaration": 768,
                          "src": "686:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketStatus_$768",
                            "typeString": "enum MarketLib.MarketStatus"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "685:37:2"
                  },
                  "src": "658:150:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "878:85:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_MarketStatus_$768",
                                "typeString": "enum MarketLib.MarketStatus"
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 166,
                                "name": "marketStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 163,
                                "src": "897:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MarketStatus_$768",
                                  "typeString": "enum MarketLib.MarketStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 167,
                                    "name": "MarketLib",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 769,
                                    "src": "913:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_MarketLib_$769_$",
                                      "typeString": "type(library MarketLib)"
                                    }
                                  },
                                  "id": 168,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MarketStatus",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 768,
                                  "src": "913:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_MarketStatus_$768_$",
                                    "typeString": "type(enum MarketLib.MarketStatus)"
                                  }
                                },
                                "id": 169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ACTIVE",
                                "nodeType": "MemberAccess",
                                "src": "913:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MarketStatus_$768",
                                  "typeString": "enum MarketLib.MarketStatus"
                                }
                              },
                              "src": "897:45:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 165,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "889:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "889:54:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 172,
                        "nodeType": "ExpressionStatement",
                        "src": "889:54:2"
                      },
                      {
                        "id": 173,
                        "nodeType": "PlaceholderStatement",
                        "src": "954:1:2"
                      }
                    ]
                  },
                  "id": 175,
                  "name": "onlyPausedState",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 163,
                        "mutability": "mutable",
                        "name": "marketStatus",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "841:35:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MarketStatus_$768",
                          "typeString": "enum MarketLib.MarketStatus"
                        },
                        "typeName": {
                          "id": 162,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 161,
                            "name": "MarketLib.MarketStatus",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 768,
                            "src": "841:22:2"
                          },
                          "referencedDeclaration": 768,
                          "src": "841:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketStatus_$768",
                            "typeString": "enum MarketLib.MarketStatus"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "840:37:2"
                  },
                  "src": "816:147:2",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 177,
              "src": "96:870:2"
            }
          ],
          "src": "33:933:2"
        },
        "legacyAST": {
          "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/control/Controllable.sol",
          "exportedSymbols": {
            "Controllable": [
              176
            ],
            "MarketLib": [
              769
            ]
          },
          "id": 177,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 91,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:2"
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/MarketLib.sol",
              "file": "../libraries/MarketLib.sol",
              "id": 92,
              "nodeType": "ImportDirective",
              "scope": 177,
              "sourceUnit": 770,
              "src": "58:36:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 176,
              "linearizedBaseContracts": [
                176
              ],
              "name": "Controllable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_globalController",
                  "nodeType": "VariableDeclaration",
                  "scope": 176,
                  "src": "124:33:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "124:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "178:48:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 97,
                            "name": "_globalController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "188:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 98,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "208:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "208:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "188:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 101,
                        "nodeType": "ExpressionStatement",
                        "src": "188:30:2"
                      }
                    ]
                  },
                  "id": 103,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 95,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "175:2:2"
                  },
                  "returnParameters": {
                    "id": 96,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "178:0:2"
                  },
                  "scope": 176,
                  "src": "164:62:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 114,
                    "nodeType": "Block",
                    "src": "282:70:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 108,
                                "name": "requester",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105,
                                "src": "301:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 109,
                                "name": "_globalController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 94,
                                "src": "314:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "301:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 107,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "293:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "293:39:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 112,
                        "nodeType": "ExpressionStatement",
                        "src": "293:39:2"
                      },
                      {
                        "id": 113,
                        "nodeType": "PlaceholderStatement",
                        "src": "343:1:2"
                      }
                    ]
                  },
                  "id": 115,
                  "name": "onlyGlobalController",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 106,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 105,
                        "mutability": "mutable",
                        "name": "requester",
                        "nodeType": "VariableDeclaration",
                        "scope": 115,
                        "src": "263:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 104,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "263:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "262:19:2"
                  },
                  "src": "233:119:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 129,
                    "nodeType": "Block",
                    "src": "420:81:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_MarketType_$765",
                                "typeString": "enum MarketLib.MarketType"
                              },
                              "id": 125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 121,
                                "name": "marketType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 118,
                                "src": "439:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MarketType_$765",
                                  "typeString": "enum MarketLib.MarketType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 122,
                                    "name": "MarketLib",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 769,
                                    "src": "453:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_MarketLib_$769_$",
                                      "typeString": "type(library MarketLib)"
                                    }
                                  },
                                  "id": 123,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MarketType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 765,
                                  "src": "453:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_MarketType_$765_$",
                                    "typeString": "type(enum MarketLib.MarketType)"
                                  }
                                },
                                "id": 124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "DEFAULT",
                                "nodeType": "MemberAccess",
                                "src": "453:28:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MarketType_$765",
                                  "typeString": "enum MarketLib.MarketType"
                                }
                              },
                              "src": "439:42:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 120,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "431:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "431:51:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 127,
                        "nodeType": "ExpressionStatement",
                        "src": "431:51:2"
                      },
                      {
                        "id": 128,
                        "nodeType": "PlaceholderStatement",
                        "src": "492:1:2"
                      }
                    ]
                  },
                  "id": 130,
                  "name": "onlyDefaultMarkets",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 118,
                        "mutability": "mutable",
                        "name": "marketType",
                        "nodeType": "VariableDeclaration",
                        "scope": 130,
                        "src": "387:31:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MarketType_$765",
                          "typeString": "enum MarketLib.MarketType"
                        },
                        "typeName": {
                          "id": 117,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 116,
                            "name": "MarketLib.MarketType",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 765,
                            "src": "387:20:2"
                          },
                          "referencedDeclaration": 765,
                          "src": "387:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketType_$765",
                            "typeString": "enum MarketLib.MarketType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "386:33:2"
                  },
                  "src": "359:142:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 144,
                    "nodeType": "Block",
                    "src": "568:83:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_MarketType_$765",
                                "typeString": "enum MarketLib.MarketType"
                              },
                              "id": 140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 136,
                                "name": "marketType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 133,
                                "src": "588:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MarketType_$765",
                                  "typeString": "enum MarketLib.MarketType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 137,
                                    "name": "MarketLib",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 769,
                                    "src": "602:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_MarketLib_$769_$",
                                      "typeString": "type(library MarketLib)"
                                    }
                                  },
                                  "id": 138,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MarketType",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 765,
                                  "src": "602:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_MarketType_$765_$",
                                    "typeString": "type(enum MarketLib.MarketType)"
                                  }
                                },
                                "id": 139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "CREATED",
                                "nodeType": "MemberAccess",
                                "src": "602:28:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MarketType_$765",
                                  "typeString": "enum MarketLib.MarketType"
                                }
                              },
                              "src": "588:42:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 135,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "580:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "580:51:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 142,
                        "nodeType": "ExpressionStatement",
                        "src": "580:51:2"
                      },
                      {
                        "id": 143,
                        "nodeType": "PlaceholderStatement",
                        "src": "642:1:2"
                      }
                    ]
                  },
                  "id": 145,
                  "name": "onlyCustomMarkets",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "marketType",
                        "nodeType": "VariableDeclaration",
                        "scope": 145,
                        "src": "535:31:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MarketType_$765",
                          "typeString": "enum MarketLib.MarketType"
                        },
                        "typeName": {
                          "id": 132,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 131,
                            "name": "MarketLib.MarketType",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 765,
                            "src": "535:20:2"
                          },
                          "referencedDeclaration": 765,
                          "src": "535:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketType_$765",
                            "typeString": "enum MarketLib.MarketType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "534:33:2"
                  },
                  "src": "508:143:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 159,
                    "nodeType": "Block",
                    "src": "723:85:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_MarketStatus_$768",
                                "typeString": "enum MarketLib.MarketStatus"
                              },
                              "id": 155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 151,
                                "name": "marketStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 148,
                                "src": "742:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MarketStatus_$768",
                                  "typeString": "enum MarketLib.MarketStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 152,
                                    "name": "MarketLib",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 769,
                                    "src": "758:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_MarketLib_$769_$",
                                      "typeString": "type(library MarketLib)"
                                    }
                                  },
                                  "id": 153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MarketStatus",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 768,
                                  "src": "758:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_MarketStatus_$768_$",
                                    "typeString": "type(enum MarketLib.MarketStatus)"
                                  }
                                },
                                "id": 154,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "PAUSED",
                                "nodeType": "MemberAccess",
                                "src": "758:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MarketStatus_$768",
                                  "typeString": "enum MarketLib.MarketStatus"
                                }
                              },
                              "src": "742:45:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 150,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "734:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "734:54:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 157,
                        "nodeType": "ExpressionStatement",
                        "src": "734:54:2"
                      },
                      {
                        "id": 158,
                        "nodeType": "PlaceholderStatement",
                        "src": "799:1:2"
                      }
                    ]
                  },
                  "id": 160,
                  "name": "onlyNotPausedState",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 149,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 148,
                        "mutability": "mutable",
                        "name": "marketStatus",
                        "nodeType": "VariableDeclaration",
                        "scope": 160,
                        "src": "686:35:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MarketStatus_$768",
                          "typeString": "enum MarketLib.MarketStatus"
                        },
                        "typeName": {
                          "id": 147,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 146,
                            "name": "MarketLib.MarketStatus",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 768,
                            "src": "686:22:2"
                          },
                          "referencedDeclaration": 768,
                          "src": "686:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketStatus_$768",
                            "typeString": "enum MarketLib.MarketStatus"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "685:37:2"
                  },
                  "src": "658:150:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "878:85:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_MarketStatus_$768",
                                "typeString": "enum MarketLib.MarketStatus"
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 166,
                                "name": "marketStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 163,
                                "src": "897:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MarketStatus_$768",
                                  "typeString": "enum MarketLib.MarketStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 167,
                                    "name": "MarketLib",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 769,
                                    "src": "913:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_MarketLib_$769_$",
                                      "typeString": "type(library MarketLib)"
                                    }
                                  },
                                  "id": 168,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MarketStatus",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 768,
                                  "src": "913:22:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_MarketStatus_$768_$",
                                    "typeString": "type(enum MarketLib.MarketStatus)"
                                  }
                                },
                                "id": 169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ACTIVE",
                                "nodeType": "MemberAccess",
                                "src": "913:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_MarketStatus_$768",
                                  "typeString": "enum MarketLib.MarketStatus"
                                }
                              },
                              "src": "897:45:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 165,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "889:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "889:54:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 172,
                        "nodeType": "ExpressionStatement",
                        "src": "889:54:2"
                      },
                      {
                        "id": 173,
                        "nodeType": "PlaceholderStatement",
                        "src": "954:1:2"
                      }
                    ]
                  },
                  "id": 175,
                  "name": "onlyPausedState",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 163,
                        "mutability": "mutable",
                        "name": "marketStatus",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "841:35:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MarketStatus_$768",
                          "typeString": "enum MarketLib.MarketStatus"
                        },
                        "typeName": {
                          "id": 162,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 161,
                            "name": "MarketLib.MarketStatus",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 768,
                            "src": "841:22:2"
                          },
                          "referencedDeclaration": 768,
                          "src": "841:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketStatus_$768",
                            "typeString": "enum MarketLib.MarketStatus"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "840:37:2"
                  },
                  "src": "816:147:2",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 177,
              "src": "96:870:2"
            }
          ],
          "src": "33:933:2"
        },
        "compiler": {
          "name": "solc",
          "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
        },
        "networks": {
          "5777": {
            "events": {},
            "links": {},
            "address": "0xB6f17481Bad938157B237c5352832838B72612CC",
            "transactionHash": "0x677892d94d22ed6d53982a8404e0983dfc8ebe1b5f7576a264e99fcf6853657d"
          }
        },
        "schemaVersion": "3.4.1",
        "updatedAt": "2021-05-18T01:40:26.882Z",
        "networkType": "ethereum",
        "devdoc": {
          "kind": "dev",
          "methods": {},
          "version": 1
        },
        "userdoc": {
          "kind": "user",
          "methods": {},
          "version": 1
        }
      },
    "DISPUTE": {
        "contractName": "Dispute",
        "abi": [
          {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_submitter",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_aggressor",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_relationship",
                "type": "address"
              }
            ],
            "name": "DisputeCreated",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_submitter",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_aggressor",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "_relationship",
                "type": "address"
              }
            ],
            "name": "DisputeResolved",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "submitter",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "aggressor",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "relationship",
                "type": "address"
              }
            ],
            "name": "createDispute",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "submitter",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "aggressor",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "relationship",
                "type": "address"
              }
            ],
            "name": "endDispute",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_submitter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_aggressor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_relationship\",\"type\":\"address\"}],\"name\":\"DisputeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_submitter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_aggressor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_relationship\",\"type\":\"address\"}],\"name\":\"DisputeResolved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aggressor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relationship\",\"type\":\"address\"}],\"name\":\"createDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aggressor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"relationship\",\"type\":\"address\"}],\"name\":\"endDispute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/elijahhampton/git/opportunity-core/src/contracts/dispute/Dispute.sol\":\"Dispute\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/elijahhampton/git/opportunity-core/src/contracts/dispute/Dispute.sol\":{\"keccak256\":\"0xe7fcf3abe0dfb5134489697bdd456348c7cbe1a7acd6c77bcde1acac230ca66f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec76f06a860d0042c62b95068f5e99a44fb2299a360d567cbacc5c4606fbbab\",\"dweb:/ipfs/QmU8PM7XogTw25aQvb8FSbYAUdBAFhHp8Az3ZUuVckWRyz\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/MultiPartyOwneable.sol\":{\"keccak256\":\"0xd1d42422d6ffaeb158c712c1f1efb97880ad716880dba6b704399b48004e0a3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c61237ee05c824381dcb3b4df8c4c0eb8d9b58ad9c75e262233db0f98c94d6d6\",\"dweb:/ipfs/QmYpYUe7tWzg8yZdCV8FwMhJGJJ2iRbZwXPL4nxgD6kbqM\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkExchange.sol\":{\"keccak256\":\"0x42fa5a787763e08f658484517bcaeee46a5bcd0ac64c6da10b4e827d4bef2da0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2732ae081f2d674595c1968d517bab3f281c7b9e9d1de3b778f641903e53cf44\",\"dweb:/ipfs/QmZYgbEnhA5QBVAzqQ7o8fckGhkNFTnNx8rXmQWXc7Jscn\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkRelationship.sol\":{\"keccak256\":\"0x7050dca7e6bfd46461ce14f25784ffae2f2abe3d21dcd3bfbf509f5e4e67ed07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dd162acf34eed7a85660c388f12f41453ad5ee4fd5efdc50c36a00ed9a2c13c\",\"dweb:/ipfs/QmUz4xEBzSst7KVPyu39c3MDK5JbjtA5MvoJHipeELtxVp\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/Evaluation.sol\":{\"keccak256\":\"0xf2825b061136ece59f2f45b05dac7c0d1fd03b3a7bc267440ec78bc212bd36b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebd01f95d61a48dc61d0edec2d17c4106631732059ad7ebd0f88a5b41bd4ab3e\",\"dweb:/ipfs/QmYtiK47cr8duutw5dshpgXp5ETVvUgphpEx7H4RZqhsJC\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/StringUtils.sol\":{\"keccak256\":\"0x3fc98303be9aee1317ca29e93af1ec2f88568c1e526ff23899d464544f060ad6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412e266b655dc10c2fa8f874abda2933ed02636c367ca09c16d5cd8a978d8c04\",\"dweb:/ipfs/QmaXjqt1PL8pYNss2VyZiX78L4HJxWGA6T7RXWvodKcyYG\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/User.sol\":{\"keccak256\":\"0xf6f53b1360419296f37489d8c13a44e39d4178ccccfa14622de3445fe7e19879\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c5b2b5863f94d493b767babd8103d215e76423a999ad0ffc7c2432a653c868b\",\"dweb:/ipfs/QmZfU9BLvZWEaeZ8DZ84c3auojacifiYrUhKRchcyTZqy7\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/user/UserSummary.sol\":{\"keccak256\":\"0xb3fa76490c1bec2631ad5303be5e1d1469d20124d0079625b02cec8b5fdf8cd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e6f7b8e1e127674d1500ad521be17605fff6a408f6afab7820a59d24dfba6c9\",\"dweb:/ipfs/QmTN7MiedKQrm9c1gQEAHETjbQj1rGPqGSTPZ8x2qJ2knn\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/user/interface/IUserSummary.sol\":{\"keccak256\":\"0x1a9ccc700d2445a01522e75a8892f3479f5ec1019e1a7cc82648735602d6979d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd5568a290b9c71ff0ff74a1d02bc72f02bf9fa4a731baf615beab7717965e1e\",\"dweb:/ipfs/QmQPomdhm1baBVYmvdVqCZ8GJrauZ6c7FD31NUTnrPDnwa\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0x0bf0f9c9bfdea4be5d7dc3f1fccf177de0a5e7da51f96bfe5923af8ad1961a39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://475920b50f6082a8d87a140cc5528bfc98c1f3efb8e2c367f93a1e482cea24a6\",\"dweb:/ipfs/QmVEUrKPdy3vgPjjzsikKLETUBFRo6uKbrgn2zeaJt7Mcu\"]},\"@openzeppelin/contracts/utils/escrow/Escrow.sol\":{\"keccak256\":\"0xb2c66acf7d749744db1c038889794253757d471a113290e4bb1a600246166943\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60668976b064a434caef3ede6dce89744f2d18cc8ede8610706579fe4a03fba0\",\"dweb:/ipfs/QmPUnpLdjFgGrNhuMjvBz7Grn2gMrRWisAYPrn8YZVn99k\"]},\"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":{\"keccak256\":\"0xc4f3f7ac87e9debc037109ec57e4a2ca54fce83a76fbc10564a53b9ab1d63858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e451867af8f28ceed99f440f14819a8cf0fdaadb1e438272aff451ec7ce3b8f3\",\"dweb:/ipfs/QmebxoF1a7deWTjzyg82bygFzrQHFMFZnQxenShv2zB6AC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
        "bytecode": "0x608060405234801561001057600080fd5b50610242806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634b29f5841461003b578063d54462e214610057575b600080fd5b61005560048036038101906100509190610174565b610073565b005b610071600480360381019061006c9190610174565b6100e9565b005b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fef5004fbc727a394eb47673cbdd28b705c06c6ad39410b806484757c2d1fd35460405160405180910390a4505050565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fcf0e0bbcefb39042e5649899e2165be4139caf7059547be7faf2cecf03fc753b60405160405180910390a4505050565b60008135905061016e816101f5565b92915050565b60008060006060848603121561018957600080fd5b60006101978682870161015f565b93505060206101a88682870161015f565b92505060406101b98682870161015f565b9150509250925092565b60006101ce826101d5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101fe816101c3565b811461020957600080fd5b5056fea2646970667358221220948d86af57ca224513c3bac86e8e485682a057d71e2a026bba58446c839b481164736f6c63430008000033",
        "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80634b29f5841461003b578063d54462e214610057575b600080fd5b61005560048036038101906100509190610174565b610073565b005b610071600480360381019061006c9190610174565b6100e9565b005b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fef5004fbc727a394eb47673cbdd28b705c06c6ad39410b806484757c2d1fd35460405160405180910390a4505050565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fcf0e0bbcefb39042e5649899e2165be4139caf7059547be7faf2cecf03fc753b60405160405180910390a4505050565b60008135905061016e816101f5565b92915050565b60008060006060848603121561018957600080fd5b60006101978682870161015f565b93505060206101a88682870161015f565b92505060406101b98682870161015f565b9150509250925092565b60006101ce826101d5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101fe816101c3565b811461020957600080fd5b5056fea2646970667358221220948d86af57ca224513c3bac86e8e485682a057d71e2a026bba58446c839b481164736f6c63430008000033",
        "immutableReferences": {},
        "generatedSources": [],
        "deployedGeneratedSources": [
          {
            "ast": {
              "nodeType": "YulBlock",
              "src": "0:1069:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "59:87:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "69:29:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "91:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "78:12:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "78:20:25"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "69:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "134:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "107:26:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "107:33:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "107:33:25"
                      }
                    ]
                  },
                  "name": "abi_decode_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "37:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "45:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "53:5:25",
                      "type": ""
                    }
                  ],
                  "src": "7:139:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "252:452:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "298:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "307:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "310:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "300:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "300:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "300:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "273:7:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "282:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "269:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "269:23:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "294:2:25",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "265:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "265:32:25"
                        },
                        "nodeType": "YulIf",
                        "src": "262:2:25"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "324:117:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "339:15:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "353:1:25",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "343:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "368:63:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "403:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "414:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "423:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "378:20:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "378:53:25"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "368:6:25"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "451:118:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "466:16:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "480:2:25",
                              "type": "",
                              "value": "32"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "470:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "496:63:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "531:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "542:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "527:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "527:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "551:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "506:20:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "506:53:25"
                            },
                            "variableNames": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "496:6:25"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "579:118:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "594:16:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "608:2:25",
                              "type": "",
                              "value": "64"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "598:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "624:63:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "659:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "670:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "655:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "655:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "679:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "634:20:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "634:53:25"
                            },
                            "variableNames": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "624:6:25"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_addresst_addresst_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "206:9:25",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "217:7:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "229:6:25",
                      "type": ""
                    },
                    {
                      "name": "value1",
                      "nodeType": "YulTypedName",
                      "src": "237:6:25",
                      "type": ""
                    },
                    {
                      "name": "value2",
                      "nodeType": "YulTypedName",
                      "src": "245:6:25",
                      "type": ""
                    }
                  ],
                  "src": "152:552:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "755:51:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "765:35:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "794:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_uint160",
                            "nodeType": "YulIdentifier",
                            "src": "776:17:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "776:24:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "765:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "737:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "747:7:25",
                      "type": ""
                    }
                  ],
                  "src": "710:96:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "857:81:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "867:65:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "882:5:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "889:42:25",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "878:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "878:54:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "867:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_uint160",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "839:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "849:7:25",
                      "type": ""
                    }
                  ],
                  "src": "812:126:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "987:79:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1044:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1053:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1056:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1046:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1046:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1046:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1010:5:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "1035:5:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_address",
                                    "nodeType": "YulIdentifier",
                                    "src": "1017:17:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1017:24:25"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "1007:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1007:35:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "1000:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1000:43:25"
                        },
                        "nodeType": "YulIf",
                        "src": "997:2:25"
                      }
                    ]
                  },
                  "name": "validator_revert_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "980:5:25",
                      "type": ""
                    }
                  ],
                  "src": "944:122:25"
                }
              ]
            },
            "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
            "id": 25,
            "language": "Yul",
            "name": "#utility.yul"
          }
        ],
        "sourceMap": "102:595:3:-:0;;;125:16;;;;;;;;;;102:595;;;;;;",
        "deployedSourceMap": "102:595:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;374:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;538:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;374:159;513:12;476:50;;502:9;476:50;;491:9;476:50;;;;;;;;;;;;374:159;;;:::o;538:157::-;675:12;637:51;;664:9;637:51;;653:9;637:51;;;;;;;;;;;;538:157;;;:::o;7:139:25:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:552::-;;;;294:2;282:9;273:7;269:23;265:32;262:2;;;310:1;307;300:12;262:2;353:1;378:53;423:7;414:6;403:9;399:22;378:53;:::i;:::-;368:63;;324:117;480:2;506:53;551:7;542:6;531:9;527:22;506:53;:::i;:::-;496:63;;451:118;608:2;634:53;679:7;670:6;659:9;655:22;634:53;:::i;:::-;624:63;;579:118;252:452;;;;;:::o;710:96::-;;776:24;794:5;776:24;:::i;:::-;765:35;;755:51;;;:::o;812:126::-;;889:42;882:5;878:54;867:65;;857:81;;;:::o;944:122::-;1017:24;1035:5;1017:24;:::i;:::-;1010:5;1007:35;997:2;;1056:1;1053;1046:12;997:2;987:79;:::o",
        "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../exchange/WorkRelationship.sol\";\n\ncontract Dispute {\n    constructor() {}\n    event DisputeCreated(address indexed _submitter, address indexed _aggressor, address indexed _relationship);\n    event DisputeResolved(address indexed _submitter, address indexed _aggressor, address indexed _relationship);\n\n    function createDispute(address submitter, address aggressor, address relationship) external {\n        DisputeCreated(submitter, aggressor, relationship);\n    }\n    function endDispute(address submitter, address aggressor, address relationship) external {\n        DisputeResolved(submitter, aggressor, relationship);\n    }\n}",
        "sourcePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/dispute/Dispute.sol",
        "ast": {
          "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/dispute/Dispute.sol",
          "exportedSymbols": {
            "Address": [
              2205
            ],
            "ConditionalEscrow": [
              2263
            ],
            "Context": [
              2228
            ],
            "Dispute": [
              232
            ],
            "Escrow": [
              2363
            ],
            "Evaluation": [
              760
            ],
            "IUserSummary": [
              1707
            ],
            "MultiPartyOwneable": [
              363
            ],
            "Ownable": [
              1817
            ],
            "RefundEscrow": [
              2542
            ],
            "SafeMath": [
              2854
            ],
            "StringUtils": [
              1010
            ],
            "User": [
              1030
            ],
            "UserSummary": [
              1567
            ],
            "WorkExchange": [
              556
            ],
            "WorkRelationship": [
              742
            ]
          },
          "id": 233,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 178,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:3"
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkRelationship.sol",
              "file": "../exchange/WorkRelationship.sol",
              "id": 179,
              "nodeType": "ImportDirective",
              "scope": 233,
              "sourceUnit": 743,
              "src": "58:42:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 232,
              "linearizedBaseContracts": [
                232
              ],
              "name": "Dispute",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 182,
                    "nodeType": "Block",
                    "src": "139:2:3",
                    "statements": []
                  },
                  "id": 183,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "136:2:3"
                  },
                  "returnParameters": {
                    "id": 181,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "139:0:3"
                  },
                  "scope": 232,
                  "src": "125:16:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 191,
                  "name": "DisputeCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 190,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_submitter",
                        "nodeType": "VariableDeclaration",
                        "scope": 191,
                        "src": "167:26:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "167:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_aggressor",
                        "nodeType": "VariableDeclaration",
                        "scope": 191,
                        "src": "195:26:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "195:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 189,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_relationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 191,
                        "src": "223:29:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "223:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "166:87:3"
                  },
                  "src": "146:108:3"
                },
                {
                  "anonymous": false,
                  "id": 199,
                  "name": "DisputeResolved",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 193,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_submitter",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "281:26:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "281:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 195,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_aggressor",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "309:26:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "309:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_relationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "337:29:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "337:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "280:87:3"
                  },
                  "src": "259:109:3"
                },
                {
                  "body": {
                    "id": 214,
                    "nodeType": "Block",
                    "src": "466:67:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 209,
                              "name": "submitter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 201,
                              "src": "491:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 210,
                              "name": "aggressor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "502:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 211,
                              "name": "relationship",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 205,
                              "src": "513:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 208,
                            "name": "DisputeCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "476:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "476:50:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 213,
                        "nodeType": "ExpressionStatement",
                        "src": "476:50:3"
                      }
                    ]
                  },
                  "functionSelector": "4b29f584",
                  "id": 215,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createDispute",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 206,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "submitter",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "397:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "397:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "aggressor",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "416:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "416:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "relationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "435:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "435:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "396:60:3"
                  },
                  "returnParameters": {
                    "id": 207,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "466:0:3"
                  },
                  "scope": 232,
                  "src": "374:159:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 230,
                    "nodeType": "Block",
                    "src": "627:68:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 225,
                              "name": "submitter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "653:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 226,
                              "name": "aggressor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "664:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 227,
                              "name": "relationship",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "675:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 224,
                            "name": "DisputeResolved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 199,
                            "src": "637:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "637:51:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 229,
                        "nodeType": "ExpressionStatement",
                        "src": "637:51:3"
                      }
                    ]
                  },
                  "functionSelector": "d54462e2",
                  "id": 231,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "endDispute",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 222,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "submitter",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "558:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "558:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "aggressor",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "577:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "577:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "relationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "596:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "596:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "557:60:3"
                  },
                  "returnParameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "627:0:3"
                  },
                  "scope": 232,
                  "src": "538:157:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 233,
              "src": "102:595:3"
            }
          ],
          "src": "33:664:3"
        },
        "legacyAST": {
          "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/dispute/Dispute.sol",
          "exportedSymbols": {
            "Address": [
              2205
            ],
            "ConditionalEscrow": [
              2263
            ],
            "Context": [
              2228
            ],
            "Dispute": [
              232
            ],
            "Escrow": [
              2363
            ],
            "Evaluation": [
              760
            ],
            "IUserSummary": [
              1707
            ],
            "MultiPartyOwneable": [
              363
            ],
            "Ownable": [
              1817
            ],
            "RefundEscrow": [
              2542
            ],
            "SafeMath": [
              2854
            ],
            "StringUtils": [
              1010
            ],
            "User": [
              1030
            ],
            "UserSummary": [
              1567
            ],
            "WorkExchange": [
              556
            ],
            "WorkRelationship": [
              742
            ]
          },
          "id": 233,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 178,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:3"
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkRelationship.sol",
              "file": "../exchange/WorkRelationship.sol",
              "id": 179,
              "nodeType": "ImportDirective",
              "scope": 233,
              "sourceUnit": 743,
              "src": "58:42:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 232,
              "linearizedBaseContracts": [
                232
              ],
              "name": "Dispute",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 182,
                    "nodeType": "Block",
                    "src": "139:2:3",
                    "statements": []
                  },
                  "id": 183,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "136:2:3"
                  },
                  "returnParameters": {
                    "id": 181,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "139:0:3"
                  },
                  "scope": 232,
                  "src": "125:16:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 191,
                  "name": "DisputeCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 190,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_submitter",
                        "nodeType": "VariableDeclaration",
                        "scope": 191,
                        "src": "167:26:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "167:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_aggressor",
                        "nodeType": "VariableDeclaration",
                        "scope": 191,
                        "src": "195:26:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "195:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 189,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_relationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 191,
                        "src": "223:29:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 188,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "223:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "166:87:3"
                  },
                  "src": "146:108:3"
                },
                {
                  "anonymous": false,
                  "id": 199,
                  "name": "DisputeResolved",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 193,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_submitter",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "281:26:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "281:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 195,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_aggressor",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "309:26:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "309:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_relationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "337:29:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "337:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "280:87:3"
                  },
                  "src": "259:109:3"
                },
                {
                  "body": {
                    "id": 214,
                    "nodeType": "Block",
                    "src": "466:67:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 209,
                              "name": "submitter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 201,
                              "src": "491:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 210,
                              "name": "aggressor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "502:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 211,
                              "name": "relationship",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 205,
                              "src": "513:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 208,
                            "name": "DisputeCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "476:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "476:50:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 213,
                        "nodeType": "ExpressionStatement",
                        "src": "476:50:3"
                      }
                    ]
                  },
                  "functionSelector": "4b29f584",
                  "id": 215,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createDispute",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 206,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "submitter",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "397:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "397:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "aggressor",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "416:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "416:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "relationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "435:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "435:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "396:60:3"
                  },
                  "returnParameters": {
                    "id": 207,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "466:0:3"
                  },
                  "scope": 232,
                  "src": "374:159:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 230,
                    "nodeType": "Block",
                    "src": "627:68:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 225,
                              "name": "submitter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "653:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 226,
                              "name": "aggressor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "664:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 227,
                              "name": "relationship",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "675:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 224,
                            "name": "DisputeResolved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 199,
                            "src": "637:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "637:51:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 229,
                        "nodeType": "ExpressionStatement",
                        "src": "637:51:3"
                      }
                    ]
                  },
                  "functionSelector": "d54462e2",
                  "id": 231,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "endDispute",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 222,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "submitter",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "558:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "558:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "aggressor",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "577:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "577:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "relationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "596:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "596:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "557:60:3"
                  },
                  "returnParameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "627:0:3"
                  },
                  "scope": 232,
                  "src": "538:157:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 233,
              "src": "102:595:3"
            }
          ],
          "src": "33:664:3"
        },
        "compiler": {
          "name": "solc",
          "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
        },
        "networks": {
          "5777": {
            "events": {},
            "links": {},
            "address": "0x53de683E1f3E4Ff30B4CbDF64fF36E08fA815Ab1",
            "transactionHash": "0xeccc7d499bec1ae7ca4f11d50457920d4a05434d407a77dab237077bae415564"
          }
        },
        "schemaVersion": "3.4.1",
        "updatedAt": "2021-05-18T01:40:26.880Z",
        "networkType": "ethereum",
        "devdoc": {
          "kind": "dev",
          "methods": {},
          "version": 1
        },
        "userdoc": {
          "kind": "user",
          "methods": {},
          "version": 1
        }
      },
    "WORK_EXCHANGE":{
        "contractName": "WorkExchange",
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address payable",
                "name": "requesterBeneficiary",
                "type": "address"
              },
              {
                "internalType": "address payable",
                "name": "workerBeneficiary",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "isTimeLocked",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousWorker",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newWorker",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "RequesterSentPayment",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "requesterAddress",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "workerBeneficiary",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "workExchangeAddress",
                "type": "address"
              }
            ],
            "name": "WorkExchangeEnded",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "requesterAddress",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "workerBeneficiary",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "workExchangeAddress",
                "type": "address"
              }
            ],
            "name": "WorkExchangeStarted",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "WorkerSentSolution",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newWorker",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "worker",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address payable",
                "name": "payee",
                "type": "address"
              }
            ],
            "name": "sendPaymentAsRequester",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address payable",
                "name": "payee",
                "type": "address"
              }
            ],
            "name": "sendPaymentAsWorker",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "withdrawAsRequester",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "withdrawAsWorker",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "balanceRequester",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "balanceWorker",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"requesterBeneficiary\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"workerBeneficiary\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isTimeLocked\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousWorker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWorker\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RequesterSentPayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requesterAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"workerBeneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"workExchangeAddress\",\"type\":\"address\"}],\"name\":\"WorkExchangeEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requesterAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"workerBeneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"workExchangeAddress\",\"type\":\"address\"}],\"name\":\"WorkExchangeStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"WorkerSentSolution\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"balanceRequester\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceWorker\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"sendPaymentAsRequester\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"sendPaymentAsWorker\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWorker\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAsRequester\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAsWorker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"worker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceRequester()\":{\"returns\":{\"_0\":\"the balance\"}},\"balanceWorker()\":{\"returns\":{\"_0\":\"the balance\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"worker()\":{\"details\":\"Returns the address of the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceRequester()\":{\"notice\":\"Checks balance available to withdraw\"},\"balanceWorker()\":{\"notice\":\"Checks balance available to withdraw\"},\"sendPaymentAsRequester(address)\":{\"notice\":\"Receives payments from customers\"},\"sendPaymentAsWorker(address)\":{\"notice\":\"Receives payments from customers\"},\"withdrawAsRequester()\":{\"notice\":\"Withdraw funds to wallet\"},\"withdrawAsWorker()\":{\"notice\":\"Withdraw funds to wallet\"}},\"notice\":\"The Work Exchange contract acts as an escrow for the stake from both parties as well as facilitates the exchange of contracts between to users.  A WorkExchange is created everytime a user enters into a new deal or contract. Note: Created for every job acceptance.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkExchange.sol\":\"WorkExchange\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/MultiPartyOwneable.sol\":{\"keccak256\":\"0xd1d42422d6ffaeb158c712c1f1efb97880ad716880dba6b704399b48004e0a3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c61237ee05c824381dcb3b4df8c4c0eb8d9b58ad9c75e262233db0f98c94d6d6\",\"dweb:/ipfs/QmYpYUe7tWzg8yZdCV8FwMhJGJJ2iRbZwXPL4nxgD6kbqM\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkExchange.sol\":{\"keccak256\":\"0x42fa5a787763e08f658484517bcaeee46a5bcd0ac64c6da10b4e827d4bef2da0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2732ae081f2d674595c1968d517bab3f281c7b9e9d1de3b778f641903e53cf44\",\"dweb:/ipfs/QmZYgbEnhA5QBVAzqQ7o8fckGhkNFTnNx8rXmQWXc7Jscn\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0x0bf0f9c9bfdea4be5d7dc3f1fccf177de0a5e7da51f96bfe5923af8ad1961a39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://475920b50f6082a8d87a140cc5528bfc98c1f3efb8e2c367f93a1e482cea24a6\",\"dweb:/ipfs/QmVEUrKPdy3vgPjjzsikKLETUBFRo6uKbrgn2zeaJt7Mcu\"]},\"@openzeppelin/contracts/utils/escrow/Escrow.sol\":{\"keccak256\":\"0xb2c66acf7d749744db1c038889794253757d471a113290e4bb1a600246166943\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60668976b064a434caef3ede6dce89744f2d18cc8ede8610706579fe4a03fba0\",\"dweb:/ipfs/QmPUnpLdjFgGrNhuMjvBz7Grn2gMrRWisAYPrn8YZVn99k\"]},\"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":{\"keccak256\":\"0xc4f3f7ac87e9debc037109ec57e4a2ca54fce83a76fbc10564a53b9ab1d63858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e451867af8f28ceed99f440f14819a8cf0fdaadb1e438272aff451ec7ce3b8f3\",\"dweb:/ipfs/QmebxoF1a7deWTjzyg82bygFzrQHFMFZnQxenShv2zB6AC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
        "bytecode": "0x60806040523480156200001157600080fd5b5060405162002f5338038062002f53833981810160405281019062000037919062000374565b8160006200004a6200033060201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050826040516200015b9062000338565b62000167919062000409565b604051809103906000f08015801562000184573d6000803e3d6000fd5b50600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081604051620001d49062000338565b620001e0919062000409565b604051809103906000f080158015620001fd573d6000803e3d6000fd5b50600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f4dc5f0070db7372507a32b040d6e05e71b6aef1067ae5203e2ffefa98ca4cac2306040516200031f9190620003ec565b60405180910390a3505050620004ae565b600033905090565b611abf806200149483390190565b60008151905062000357816200047a565b92915050565b6000815190506200036e8162000494565b92915050565b6000806000606084860312156200038a57600080fd5b60006200039a8682870162000346565b9350506020620003ad8682870162000346565b9250506040620003c0868287016200035d565b9150509250925092565b620003d5816200043a565b82525050565b620003e68162000426565b82525050565b6000602082019050620004036000830184620003db565b92915050565b6000602082019050620004206000830184620003ca565b92915050565b600062000433826200045a565b9050919050565b600062000447826200045a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b62000485816200043a565b81146200049157600080fd5b50565b6200049f816200044e565b8114620004ab57600080fd5b50565b610fd680620004be6000396000f3fe6080604052600436106100915760003560e01c80638428dccc116100595780638428dccc146101365780638da5cb5b1461015257806398da87b41461017d578063b48691e014610194578063f2fde38b146101bf57610091565b806303f5d25b146100965780634d547ada146100ad5780636628c1d1146100d85780637053e7e0146100f4578063715018a61461011f575b600080fd5b3480156100a257600080fd5b506100ab6101e8565b005b3480156100b957600080fd5b506100c26102e8565b6040516100cf9190610e3a565b60405180910390f35b6100f260048036038101906100ed9190610d43565b610312565b005b34801561010057600080fd5b5061010961044a565b6040516101169190610eab565b60405180910390f35b34801561012b57600080fd5b50610134610617565b005b610150600480360381019061014b9190610d43565b610754565b005b34801561015e57600080fd5b5061016761088c565b6040516101749190610e3a565b60405180910390f35b34801561018957600080fd5b506101926108b5565b005b3480156101a057600080fd5b506101a96109b5565b6040516101b69190610eab565b60405180910390f35b3480156101cb57600080fd5b506101e660048036038101906101e19190610d1a565b610b82565b005b6101f0610cbe565b73ffffffffffffffffffffffffffffffffffffffff1661020e61088c565b73ffffffffffffffffffffffffffffffffffffffff1614610264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025b90610e8b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102ce57600080fd5b505af11580156102e2573d6000803e3d6000fd5b50505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61031a610cbe565b73ffffffffffffffffffffffffffffffffffffffff1661033861088c565b73ffffffffffffffffffffffffffffffffffffffff161461038e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038590610e8b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff1660e01b81526004016103e99190610e70565b600060405180830381600087803b15801561040357600080fd5b505af1158015610417573d6000803e3d6000fd5b505050507f7a15267f0526551b50e6c288544c1ac87f16e7837002acfb601cf247ec718d4e60405160405180910390a150565b6000610454610cbe565b73ffffffffffffffffffffffffffffffffffffffff1661047261088c565b73ffffffffffffffffffffffffffffffffffffffff16146104c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bf90610e8b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3a9db1a600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338af3eed6040518163ffffffff1660e01b815260040160206040518083038186803b15801561056e57600080fd5b505afa158015610582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a69190610d6c565b6040518263ffffffff1660e01b81526004016105c29190610e55565b60206040518083038186803b1580156105da57600080fd5b505afa1580156105ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106129190610d95565b905090565b61061f6102e8565b73ffffffffffffffffffffffffffffffffffffffff1661063d6102e8565b73ffffffffffffffffffffffffffffffffffffffff1614610693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068a90610e8b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61075c610cbe565b73ffffffffffffffffffffffffffffffffffffffff1661077a61088c565b73ffffffffffffffffffffffffffffffffffffffff16146107d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c790610e8b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff1660e01b815260040161082b9190610e70565b600060405180830381600087803b15801561084557600080fd5b505af1158015610859573d6000803e3d6000fd5b505050507fb24b6304585135966b8217241802ddd6fe969a26cc5f252ebe153be87a6c007a60405160405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6108bd610cbe565b73ffffffffffffffffffffffffffffffffffffffff166108db61088c565b73ffffffffffffffffffffffffffffffffffffffff1614610931576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092890610e8b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561099b57600080fd5b505af11580156109af573d6000803e3d6000fd5b50505050565b60006109bf610cbe565b73ffffffffffffffffffffffffffffffffffffffff166109dd61088c565b73ffffffffffffffffffffffffffffffffffffffff1614610a33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2a90610e8b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3a9db1a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338af3eed6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ad957600080fd5b505afa158015610aed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b119190610d6c565b6040518263ffffffff1660e01b8152600401610b2d9190610e55565b60206040518083038186803b158015610b4557600080fd5b505afa158015610b59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7d9190610d95565b905090565b610b8a610cbe565b73ffffffffffffffffffffffffffffffffffffffff16610ba861088c565b73ffffffffffffffffffffffffffffffffffffffff1614610bfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf590610e8b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600081359050610cd581610f5b565b92915050565b600081359050610cea81610f72565b92915050565b600081519050610cff81610f72565b92915050565b600081519050610d1481610f89565b92915050565b600060208284031215610d2c57600080fd5b6000610d3a84828501610cc6565b91505092915050565b600060208284031215610d5557600080fd5b6000610d6384828501610cdb565b91505092915050565b600060208284031215610d7e57600080fd5b6000610d8c84828501610cf0565b91505092915050565b600060208284031215610da757600080fd5b6000610db584828501610d05565b91505092915050565b610dc781610f25565b82525050565b610dd681610ee9565b82525050565b610de581610ed7565b82525050565b6000610df8602083610ec6565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b610e3481610f1b565b82525050565b6000602082019050610e4f6000830184610ddc565b92915050565b6000602082019050610e6a6000830184610dbe565b92915050565b6000602082019050610e856000830184610dcd565b92915050565b60006020820190508181036000830152610ea481610deb565b9050919050565b6000602082019050610ec06000830184610e2b565b92915050565b600082825260208201905092915050565b6000610ee282610efb565b9050919050565b6000610ef482610efb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610f3082610f37565b9050919050565b6000610f4282610f49565b9050919050565b6000610f5482610efb565b9050919050565b610f6481610ed7565b8114610f6f57600080fd5b50565b610f7b81610ee9565b8114610f8657600080fd5b50565b610f9281610f1b565b8114610f9d57600080fd5b5056fea26469706673582212207c142497a860f391e45ca391f5d88521ed141cfef4b173a4508c522055441b0c64736f6c6343000800003360a06040523480156200001157600080fd5b5060405162001abf38038062001abf833981810160405281019062000037919062000209565b600062000049620001ea60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200015a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000151906200029d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250506000600260006101000a81548160ff02191690836002811115620001de577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550506200031e565b600033905090565b600081519050620002038162000304565b92915050565b6000602082840312156200021c57600080fd5b60006200022c84828501620001f2565b91505092915050565b600062000244602d83620002bf565b91507f526566756e64457363726f773a2062656e65666963696172792069732074686560008301527f207a65726f2061646472657373000000000000000000000000000000000000006020830152604082019050919050565b60006020820190508181036000830152620002b88162000235565b9050919050565b600082825260208201905092915050565b6000620002dd82620002e4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200030f81620002d0565b81146200031b57600080fd5b50565b60805160601c6117826200033d600039600061027501526117826000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101825780639af6549a146101ad578063c19d93fb146101c4578063e3a9db1a146101ef578063f2fde38b1461022c578063f340fa0114610255576100a7565b806338af3eed146100ac57806343d726d6146100d757806351cff8d9146100ee578063685ca19414610117578063715018a6146101545780638c52dc411461016b575b600080fd5b3480156100b857600080fd5b506100c1610271565b6040516100ce919061142f565b60405180910390f35b3480156100e357600080fd5b506100ec610299565b005b3480156100fa57600080fd5b5061011560048036038101906101109190611027565b61044d565b005b34801561012357600080fd5b5061013e60048036038101906101399190610ffe565b6104a1565b60405161014b919061144a565b60405180910390f35b34801561016057600080fd5b50610169610525565b005b34801561017757600080fd5b5061018061065f565b005b34801561018e57600080fd5b50610197610814565b6040516101a49190611414565b60405180910390f35b3480156101b957600080fd5b506101c261083d565b005b3480156101d057600080fd5b506101d9610928565b6040516101e69190611465565b60405180910390f35b3480156101fb57600080fd5b5061021660048036038101906102119190610ffe565b61093f565b60405161022391906115a0565b60405180910390f35b34801561023857600080fd5b50610253600480360381019061024e9190610ffe565b610988565b005b61026f600480360381019061026a9190610ffe565b610b31565b005b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6102a1610bf7565b73ffffffffffffffffffffffffffffffffffffffff166102bf610814565b73ffffffffffffffffffffffffffffffffffffffff1614610315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030c90611560565b60405180910390fd5b6000600281111561034f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610357610928565b600281111561038f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146103cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c690611540565b60405180910390fd5b60028060006101000a81548160ff0219169083600281111561041a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f60405160405180910390a1565b610456816104a1565b610495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048c90611520565b60405180910390fd5b61049e81610bff565b50565b6000600160028111156104dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6104e5610928565b600281111561051d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b149050919050565b61052d610bf7565b73ffffffffffffffffffffffffffffffffffffffff1661054b610814565b73ffffffffffffffffffffffffffffffffffffffff16146105a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059890611560565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610667610bf7565b73ffffffffffffffffffffffffffffffffffffffff16610685610814565b73ffffffffffffffffffffffffffffffffffffffff16146106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d290611560565b60405180910390fd5b60006002811115610715577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61071d610928565b6002811115610755577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078c90611580565b60405180910390fd5b6001600260006101000a81548160ff021916908360028111156107e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600280811115610876577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61087e610928565b60028111156108b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed90611480565b60405180910390fd5b61092647610902610271565b73ffffffffffffffffffffffffffffffffffffffff16610d7f90919063ffffffff16565b565b6000600260009054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610990610bf7565b73ffffffffffffffffffffffffffffffffffffffff166109ae610814565b73ffffffffffffffffffffffffffffffffffffffff1614610a04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fb90611560565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6b906114a0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006002811115610b6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610b73610928565b6002811115610bab577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610beb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be290611500565b60405180910390fd5b610bf481610e73565b50565b600033905090565b610c07610bf7565b73ffffffffffffffffffffffffffffffffffffffff16610c25610814565b73ffffffffffffffffffffffffffffffffffffffff1614610c7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7290611560565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d2d818373ffffffffffffffffffffffffffffffffffffffff16610d7f90919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d582604051610d7391906115a0565b60405180910390a25050565b80471015610dc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db9906114e0565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610de8906113ff565b60006040518083038185875af1925050503d8060008114610e25576040519150601f19603f3d011682016040523d82523d6000602084013e610e2a565b606091505b5050905080610e6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e65906114c0565b60405180910390fd5b505050565b610e7b610bf7565b73ffffffffffffffffffffffffffffffffffffffff16610e99610814565b73ffffffffffffffffffffffffffffffffffffffff1614610eef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee690611560565b60405180910390fd5b600034905080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f3f91906115d7565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c482604051610fc891906115a0565b60405180910390a25050565b600081359050610fe38161171e565b92915050565b600081359050610ff881611735565b92915050565b60006020828403121561101057600080fd5b600061101e84828501610fd4565b91505092915050565b60006020828403121561103957600080fd5b600061104784828501610fe9565b91505092915050565b6110598161163f565b82525050565b6110688161162d565b82525050565b61107781611651565b82525050565b6110868161169a565b82525050565b60006110996038836115c6565b91507f526566756e64457363726f773a2062656e65666963696172792063616e206f6e60008301527f6c79207769746864726177207768696c6520636c6f73656400000000000000006020830152604082019050919050565b60006110ff6026836115c6565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611165603a836115c6565b91507f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008301527f6563697069656e74206d617920686176652072657665727465640000000000006020830152604082019050919050565b60006111cb601d836115c6565b91507f416464726573733a20696e73756666696369656e742062616c616e63650000006000830152602082019050919050565b600061120b602b836115c6565b91507f526566756e64457363726f773a2063616e206f6e6c79206465706f736974207760008301527f68696c65206163746976650000000000000000000000000000000000000000006020830152604082019050919050565b60006112716033836115c6565b91507f436f6e646974696f6e616c457363726f773a207061796565206973206e6f742060008301527f616c6c6f77656420746f207769746864726177000000000000000000000000006020830152604082019050919050565b60006112d76029836115c6565b91507f526566756e64457363726f773a2063616e206f6e6c7920636c6f73652077686960008301527f6c652061637469766500000000000000000000000000000000000000000000006020830152604082019050919050565b600061133d6020836115c6565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600061137d6000836115bb565b9150600082019050919050565b60006113976032836115c6565b91507f526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726560008301527f66756e6473207768696c652061637469766500000000000000000000000000006020830152604082019050919050565b6113f981611690565b82525050565b600061140a82611370565b9150819050919050565b6000602082019050611429600083018461105f565b92915050565b60006020820190506114446000830184611050565b92915050565b600060208201905061145f600083018461106e565b92915050565b600060208201905061147a600083018461107d565b92915050565b600060208201905081810360008301526114998161108c565b9050919050565b600060208201905081810360008301526114b9816110f2565b9050919050565b600060208201905081810360008301526114d981611158565b9050919050565b600060208201905081810360008301526114f9816111be565b9050919050565b60006020820190508181036000830152611519816111fe565b9050919050565b6000602082019050818103600083015261153981611264565b9050919050565b60006020820190508181036000830152611559816112ca565b9050919050565b6000602082019050818103600083015261157981611330565b9050919050565b600060208201905081810360008301526115998161138a565b9050919050565b60006020820190506115b560008301846113f0565b92915050565b600081905092915050565b600082825260208201905092915050565b60006115e282611690565b91506115ed83611690565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611622576116216116ac565b5b828201905092915050565b600061163882611670565b9050919050565b600061164a82611670565b9050919050565b60008115159050919050565b600081905061166b8261170a565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116a58261165d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061171b5761171a6116db565b5b50565b6117278161162d565b811461173257600080fd5b50565b61173e8161163f565b811461174957600080fd5b5056fea264697066735822122078d3b2feccc4b4f33ca351bc6e8859bd4b8e9943dd6565520d837640b03983e564736f6c63430008000033",
        "deployedBytecode": "0x6080604052600436106100915760003560e01c80638428dccc116100595780638428dccc146101365780638da5cb5b1461015257806398da87b41461017d578063b48691e014610194578063f2fde38b146101bf57610091565b806303f5d25b146100965780634d547ada146100ad5780636628c1d1146100d85780637053e7e0146100f4578063715018a61461011f575b600080fd5b3480156100a257600080fd5b506100ab6101e8565b005b3480156100b957600080fd5b506100c26102e8565b6040516100cf9190610e3a565b60405180910390f35b6100f260048036038101906100ed9190610d43565b610312565b005b34801561010057600080fd5b5061010961044a565b6040516101169190610eab565b60405180910390f35b34801561012b57600080fd5b50610134610617565b005b610150600480360381019061014b9190610d43565b610754565b005b34801561015e57600080fd5b5061016761088c565b6040516101749190610e3a565b60405180910390f35b34801561018957600080fd5b506101926108b5565b005b3480156101a057600080fd5b506101a96109b5565b6040516101b69190610eab565b60405180910390f35b3480156101cb57600080fd5b506101e660048036038101906101e19190610d1a565b610b82565b005b6101f0610cbe565b73ffffffffffffffffffffffffffffffffffffffff1661020e61088c565b73ffffffffffffffffffffffffffffffffffffffff1614610264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025b90610e8b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102ce57600080fd5b505af11580156102e2573d6000803e3d6000fd5b50505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61031a610cbe565b73ffffffffffffffffffffffffffffffffffffffff1661033861088c565b73ffffffffffffffffffffffffffffffffffffffff161461038e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038590610e8b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff1660e01b81526004016103e99190610e70565b600060405180830381600087803b15801561040357600080fd5b505af1158015610417573d6000803e3d6000fd5b505050507f7a15267f0526551b50e6c288544c1ac87f16e7837002acfb601cf247ec718d4e60405160405180910390a150565b6000610454610cbe565b73ffffffffffffffffffffffffffffffffffffffff1661047261088c565b73ffffffffffffffffffffffffffffffffffffffff16146104c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bf90610e8b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3a9db1a600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338af3eed6040518163ffffffff1660e01b815260040160206040518083038186803b15801561056e57600080fd5b505afa158015610582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a69190610d6c565b6040518263ffffffff1660e01b81526004016105c29190610e55565b60206040518083038186803b1580156105da57600080fd5b505afa1580156105ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106129190610d95565b905090565b61061f6102e8565b73ffffffffffffffffffffffffffffffffffffffff1661063d6102e8565b73ffffffffffffffffffffffffffffffffffffffff1614610693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068a90610e8b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61075c610cbe565b73ffffffffffffffffffffffffffffffffffffffff1661077a61088c565b73ffffffffffffffffffffffffffffffffffffffff16146107d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c790610e8b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff1660e01b815260040161082b9190610e70565b600060405180830381600087803b15801561084557600080fd5b505af1158015610859573d6000803e3d6000fd5b505050507fb24b6304585135966b8217241802ddd6fe969a26cc5f252ebe153be87a6c007a60405160405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6108bd610cbe565b73ffffffffffffffffffffffffffffffffffffffff166108db61088c565b73ffffffffffffffffffffffffffffffffffffffff1614610931576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092890610e8b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561099b57600080fd5b505af11580156109af573d6000803e3d6000fd5b50505050565b60006109bf610cbe565b73ffffffffffffffffffffffffffffffffffffffff166109dd61088c565b73ffffffffffffffffffffffffffffffffffffffff1614610a33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2a90610e8b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3a9db1a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338af3eed6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ad957600080fd5b505afa158015610aed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b119190610d6c565b6040518263ffffffff1660e01b8152600401610b2d9190610e55565b60206040518083038186803b158015610b4557600080fd5b505afa158015610b59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7d9190610d95565b905090565b610b8a610cbe565b73ffffffffffffffffffffffffffffffffffffffff16610ba861088c565b73ffffffffffffffffffffffffffffffffffffffff1614610bfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf590610e8b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600081359050610cd581610f5b565b92915050565b600081359050610cea81610f72565b92915050565b600081519050610cff81610f72565b92915050565b600081519050610d1481610f89565b92915050565b600060208284031215610d2c57600080fd5b6000610d3a84828501610cc6565b91505092915050565b600060208284031215610d5557600080fd5b6000610d6384828501610cdb565b91505092915050565b600060208284031215610d7e57600080fd5b6000610d8c84828501610cf0565b91505092915050565b600060208284031215610da757600080fd5b6000610db584828501610d05565b91505092915050565b610dc781610f25565b82525050565b610dd681610ee9565b82525050565b610de581610ed7565b82525050565b6000610df8602083610ec6565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b610e3481610f1b565b82525050565b6000602082019050610e4f6000830184610ddc565b92915050565b6000602082019050610e6a6000830184610dbe565b92915050565b6000602082019050610e856000830184610dcd565b92915050565b60006020820190508181036000830152610ea481610deb565b9050919050565b6000602082019050610ec06000830184610e2b565b92915050565b600082825260208201905092915050565b6000610ee282610efb565b9050919050565b6000610ef482610efb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610f3082610f37565b9050919050565b6000610f4282610f49565b9050919050565b6000610f5482610efb565b9050919050565b610f6481610ed7565b8114610f6f57600080fd5b50565b610f7b81610ee9565b8114610f8657600080fd5b50565b610f9281610f1b565b8114610f9d57600080fd5b5056fea26469706673582212207c142497a860f391e45ca391f5d88521ed141cfef4b173a4508c522055441b0c64736f6c63430008000033",
        "immutableReferences": {},
        "generatedSources": [
          {
            "ast": {
              "nodeType": "YulBlock",
              "src": "0:2406:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "78:88:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "88:22:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "103:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "97:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "97:13:25"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "88:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "154:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_address_payable",
                            "nodeType": "YulIdentifier",
                            "src": "119:34:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "119:41:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "119:41:25"
                      }
                    ]
                  },
                  "name": "abi_decode_t_address_payable_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "56:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "64:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "72:5:25",
                      "type": ""
                    }
                  ],
                  "src": "7:159:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "232:77:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "242:22:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "257:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "251:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "251:13:25"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "242:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "297:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_bool",
                            "nodeType": "YulIdentifier",
                            "src": "273:23:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "273:30:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "273:30:25"
                      }
                    ]
                  },
                  "name": "abi_decode_t_bool_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "210:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "218:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "226:5:25",
                      "type": ""
                    }
                  ],
                  "src": "172:137:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "439:498:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "485:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "494:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "497:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "487:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "487:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "487:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "460:7:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "469:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "456:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "456:23:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "481:2:25",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "452:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "452:32:25"
                        },
                        "nodeType": "YulIf",
                        "src": "449:2:25"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "511:136:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "526:15:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "540:1:25",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "530:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "555:82:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "609:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "620:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "605:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "605:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "629:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address_payable_fromMemory",
                                "nodeType": "YulIdentifier",
                                "src": "565:39:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "565:72:25"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "555:6:25"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "657:137:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "672:16:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "686:2:25",
                              "type": "",
                              "value": "32"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "676:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "702:82:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "756:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "767:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "752:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "752:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "776:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address_payable_fromMemory",
                                "nodeType": "YulIdentifier",
                                "src": "712:39:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "712:72:25"
                            },
                            "variableNames": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "702:6:25"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "804:126:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "819:16:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "833:2:25",
                              "type": "",
                              "value": "64"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "823:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "849:71:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "892:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "903:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "888:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "888:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "912:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_bool_fromMemory",
                                "nodeType": "YulIdentifier",
                                "src": "859:28:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "859:61:25"
                            },
                            "variableNames": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "849:6:25"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_address_payablet_address_payablet_bool_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "393:9:25",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "404:7:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "416:6:25",
                      "type": ""
                    },
                    {
                      "name": "value1",
                      "nodeType": "YulTypedName",
                      "src": "424:6:25",
                      "type": ""
                    },
                    {
                      "name": "value2",
                      "nodeType": "YulTypedName",
                      "src": "432:6:25",
                      "type": ""
                    }
                  ],
                  "src": "315:622:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1024:61:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1041:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1072:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_address_payable",
                                "nodeType": "YulIdentifier",
                                "src": "1046:25:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1046:32:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1034:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1034:45:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1034:45:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1012:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "1019:3:25",
                      "type": ""
                    }
                  ],
                  "src": "943:142:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1156:53:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1173:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1196:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "1178:17:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1178:24:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1166:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1166:37:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1166:37:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_address_to_t_address_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1144:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "1151:3:25",
                      "type": ""
                    }
                  ],
                  "src": "1091:118:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1313:124:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1323:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1335:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1346:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1331:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1331:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1323:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1403:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1416:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1427:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1412:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1412:17:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_address_to_t_address_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "1359:43:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1359:71:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1359:71:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "1285:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "1297:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "1308:4:25",
                      "type": ""
                    }
                  ],
                  "src": "1215:222:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1557:140:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1567:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1579:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1590:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1575:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1575:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1567:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1663:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1676:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1687:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1672:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1672:17:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "1603:59:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1603:87:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1603:87:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "1529:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "1541:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "1552:4:25",
                      "type": ""
                    }
                  ],
                  "src": "1443:254:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1748:51:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1758:35:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1787:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_uint160",
                            "nodeType": "YulIdentifier",
                            "src": "1769:17:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1769:24:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "1758:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1730:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "1740:7:25",
                      "type": ""
                    }
                  ],
                  "src": "1703:96:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1858:51:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1868:35:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1897:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_uint160",
                            "nodeType": "YulIdentifier",
                            "src": "1879:17:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1879:24:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "1868:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_address_payable",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1840:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "1850:7:25",
                      "type": ""
                    }
                  ],
                  "src": "1805:104:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1957:48:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1967:32:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1992:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "1985:6:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1985:13:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "1978:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1978:21:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "1967:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_bool",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1939:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "1949:7:25",
                      "type": ""
                    }
                  ],
                  "src": "1915:90:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2056:81:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2066:65:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2081:5:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2088:42:25",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2077:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2077:54:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "2066:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_uint160",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2038:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "2048:7:25",
                      "type": ""
                    }
                  ],
                  "src": "2011:126:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2194:87:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2259:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2268:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2271:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2261:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2261:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2261:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2217:5:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "2250:5:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_address_payable",
                                    "nodeType": "YulIdentifier",
                                    "src": "2224:25:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2224:32:25"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "2214:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2214:43:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "2207:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2207:51:25"
                        },
                        "nodeType": "YulIf",
                        "src": "2204:2:25"
                      }
                    ]
                  },
                  "name": "validator_revert_t_address_payable",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2187:5:25",
                      "type": ""
                    }
                  ],
                  "src": "2143:138:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2327:76:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2381:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2390:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2393:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2383:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2383:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2383:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2350:5:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "2372:5:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_bool",
                                    "nodeType": "YulIdentifier",
                                    "src": "2357:14:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2357:21:25"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "2347:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2347:32:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "2340:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2340:40:25"
                        },
                        "nodeType": "YulIf",
                        "src": "2337:2:25"
                      }
                    ]
                  },
                  "name": "validator_revert_t_bool",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2320:5:25",
                      "type": ""
                    }
                  ],
                  "src": "2287:116:25"
                }
              ]
            },
            "contents": "{\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_address_payablet_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
            "id": 25,
            "language": "Yul",
            "name": "#utility.yul"
          }
        ],
        "deployedGeneratedSources": [
          {
            "ast": {
              "nodeType": "YulBlock",
              "src": "0:5435:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "59:87:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "69:29:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "91:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "78:12:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "78:20:25"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "69:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "134:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "107:26:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "107:33:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "107:33:25"
                      }
                    ]
                  },
                  "name": "abi_decode_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "37:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "45:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "53:5:25",
                      "type": ""
                    }
                  ],
                  "src": "7:139:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "212:95:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "222:29:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "244:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "231:12:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "231:20:25"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "222:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "295:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_address_payable",
                            "nodeType": "YulIdentifier",
                            "src": "260:34:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:41:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:41:25"
                      }
                    ]
                  },
                  "name": "abi_decode_t_address_payable",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "190:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "198:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "206:5:25",
                      "type": ""
                    }
                  ],
                  "src": "152:155:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "384:88:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "394:22:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "409:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "403:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "403:13:25"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "394:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "460:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_address_payable",
                            "nodeType": "YulIdentifier",
                            "src": "425:34:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "425:41:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "425:41:25"
                      }
                    ]
                  },
                  "name": "abi_decode_t_address_payable_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "362:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "370:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "378:5:25",
                      "type": ""
                    }
                  ],
                  "src": "313:159:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "541:80:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "551:22:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "566:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "560:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "560:13:25"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "551:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "609:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_uint256",
                            "nodeType": "YulIdentifier",
                            "src": "582:26:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "582:33:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "582:33:25"
                      }
                    ]
                  },
                  "name": "abi_decode_t_uint256_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "519:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "527:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "535:5:25",
                      "type": ""
                    }
                  ],
                  "src": "478:143:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "693:196:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "739:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "748:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "751:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "741:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "741:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "741:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "714:7:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "723:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "710:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "710:23:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "735:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "706:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "706:32:25"
                        },
                        "nodeType": "YulIf",
                        "src": "703:2:25"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "765:117:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "780:15:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "794:1:25",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "784:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "809:63:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "844:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "855:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "840:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "840:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "864:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "819:20:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "819:53:25"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "809:6:25"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "663:9:25",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "674:7:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "686:6:25",
                      "type": ""
                    }
                  ],
                  "src": "627:262:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "969:204:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1015:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1024:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1027:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1017:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1017:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1017:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "990:7:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "999:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "986:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "986:23:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1011:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "982:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "982:32:25"
                        },
                        "nodeType": "YulIf",
                        "src": "979:2:25"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "1041:125:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1056:15:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1070:1:25",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "1060:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1085:71:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1128:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "1139:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1124:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1124:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1148:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address_payable",
                                "nodeType": "YulIdentifier",
                                "src": "1095:28:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1095:61:25"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1085:6:25"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_address_payable",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "939:9:25",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "950:7:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "962:6:25",
                      "type": ""
                    }
                  ],
                  "src": "895:278:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1264:215:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1310:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1319:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1322:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1312:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1312:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1312:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1285:7:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1294:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "1281:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1281:23:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1306:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "1277:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1277:32:25"
                        },
                        "nodeType": "YulIf",
                        "src": "1274:2:25"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "1336:136:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1351:15:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1365:1:25",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "1355:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1380:82:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1434:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "1445:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1430:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1430:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1454:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address_payable_fromMemory",
                                "nodeType": "YulIdentifier",
                                "src": "1390:39:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1390:72:25"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1380:6:25"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_address_payable_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "1234:9:25",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "1245:7:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "1257:6:25",
                      "type": ""
                    }
                  ],
                  "src": "1179:300:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1562:207:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1608:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1617:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1620:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1610:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1610:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1610:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1583:7:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1592:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "1579:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1579:23:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1604:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "1575:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1575:32:25"
                        },
                        "nodeType": "YulIf",
                        "src": "1572:2:25"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "1634:128:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1649:15:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1663:1:25",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "1653:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1678:74:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1724:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "1735:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1720:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1720:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1744:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_uint256_fromMemory",
                                "nodeType": "YulIdentifier",
                                "src": "1688:31:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1688:64:25"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1678:6:25"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_uint256_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "1532:9:25",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "1543:7:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "1555:6:25",
                      "type": ""
                    }
                  ],
                  "src": "1485:284:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1848:74:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1865:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1909:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "convert_t_address_payable_to_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "1870:38:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1870:45:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1858:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1858:58:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1858:58:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1836:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "1843:3:25",
                      "type": ""
                    }
                  ],
                  "src": "1775:147:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2009:61:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2026:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2057:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_address_payable",
                                "nodeType": "YulIdentifier",
                                "src": "2031:25:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2031:32:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2019:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2019:45:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2019:45:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1997:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "2004:3:25",
                      "type": ""
                    }
                  ],
                  "src": "1928:142:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2141:53:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2158:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2181:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "2163:17:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2163:24:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2151:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2151:37:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2151:37:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_address_to_t_address_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2129:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "2136:3:25",
                      "type": ""
                    }
                  ],
                  "src": "2076:118:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2346:184:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2356:74:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2422:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2427:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "2363:58:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2363:67:25"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2356:3:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2451:3:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2456:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2447:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2447:11:25"
                            },
                            {
                              "kind": "string",
                              "nodeType": "YulLiteral",
                              "src": "2460:34:25",
                              "type": "",
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2440:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2440:55:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2440:55:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2505:19:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2516:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2521:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2512:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2512:12:25"
                        },
                        "variableNames": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2505:3:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "2334:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "2342:3:25",
                      "type": ""
                    }
                  ],
                  "src": "2200:330:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2601:53:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2618:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2641:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "2623:17:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2623:24:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2611:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2611:37:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2611:37:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2589:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "2596:3:25",
                      "type": ""
                    }
                  ],
                  "src": "2536:118:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2758:124:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2768:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2780:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2791:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2776:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2776:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2768:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2848:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "2861:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2872:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2857:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2857:17:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_address_to_t_address_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "2804:43:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2804:71:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2804:71:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "2730:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "2742:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "2753:4:25",
                      "type": ""
                    }
                  ],
                  "src": "2660:222:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2994:132:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3004:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3016:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3027:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3012:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3012:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3004:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3092:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3105:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3116:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3101:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3101:17:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "3040:51:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3040:79:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3040:79:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "2966:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "2978:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "2989:4:25",
                      "type": ""
                    }
                  ],
                  "src": "2888:238:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3246:140:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3256:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3268:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3279:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3264:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3264:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3256:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3352:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3365:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3376:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3361:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3361:17:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "3292:59:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3292:87:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3292:87:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "3218:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "3230:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "3241:4:25",
                      "type": ""
                    }
                  ],
                  "src": "3132:254:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3563:248:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3573:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3585:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3596:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3581:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3581:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3573:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3620:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3631:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3616:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3616:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3639:4:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3645:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "3635:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3635:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3609:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3609:47:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3609:47:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3665:139:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "3799:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "3673:124:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3673:131:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3665:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "3543:9:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "3558:4:25",
                      "type": ""
                    }
                  ],
                  "src": "3392:419:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3915:124:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3925:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3937:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3948:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3933:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3933:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3925:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4005:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "4018:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4029:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4014:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4014:17:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "3961:43:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3961:71:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3961:71:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "3887:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "3899:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "3910:4:25",
                      "type": ""
                    }
                  ],
                  "src": "3817:222:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4141:73:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4158:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "4163:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4151:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4151:19:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4151:19:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4179:29:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4198:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4203:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4194:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4194:14:25"
                        },
                        "variableNames": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulIdentifier",
                            "src": "4179:11:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4113:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4118:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulTypedName",
                      "src": "4129:11:25",
                      "type": ""
                    }
                  ],
                  "src": "4045:169:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4265:51:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4275:35:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "4304:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_uint160",
                            "nodeType": "YulIdentifier",
                            "src": "4286:17:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4286:24:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "4275:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4247:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "4257:7:25",
                      "type": ""
                    }
                  ],
                  "src": "4220:96:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4375:51:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4385:35:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "4414:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_uint160",
                            "nodeType": "YulIdentifier",
                            "src": "4396:17:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4396:24:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "4385:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_address_payable",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4357:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "4367:7:25",
                      "type": ""
                    }
                  ],
                  "src": "4322:104:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4477:81:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4487:65:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "4502:5:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4509:42:25",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "4498:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4498:54:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "4487:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_uint160",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4459:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "4469:7:25",
                      "type": ""
                    }
                  ],
                  "src": "4432:126:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4609:32:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4619:16:25",
                        "value": {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "4630:5:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "4619:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_uint256",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4591:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "4601:7:25",
                      "type": ""
                    }
                  ],
                  "src": "4564:77:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4715:66:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4725:50:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "4769:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "convert_t_uint160_to_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "4738:30:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4738:37:25"
                        },
                        "variableNames": [
                          {
                            "name": "converted",
                            "nodeType": "YulIdentifier",
                            "src": "4725:9:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "convert_t_address_payable_to_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4695:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "converted",
                      "nodeType": "YulTypedName",
                      "src": "4705:9:25",
                      "type": ""
                    }
                  ],
                  "src": "4647:134:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4847:66:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4857:50:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "4901:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "convert_t_uint160_to_t_uint160",
                            "nodeType": "YulIdentifier",
                            "src": "4870:30:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4870:37:25"
                        },
                        "variableNames": [
                          {
                            "name": "converted",
                            "nodeType": "YulIdentifier",
                            "src": "4857:9:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "convert_t_uint160_to_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4827:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "converted",
                      "nodeType": "YulTypedName",
                      "src": "4837:9:25",
                      "type": ""
                    }
                  ],
                  "src": "4787:126:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4979:53:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4989:37:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "5020:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_uint160",
                            "nodeType": "YulIdentifier",
                            "src": "5002:17:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5002:24:25"
                        },
                        "variableNames": [
                          {
                            "name": "converted",
                            "nodeType": "YulIdentifier",
                            "src": "4989:9:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "convert_t_uint160_to_t_uint160",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4959:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "converted",
                      "nodeType": "YulTypedName",
                      "src": "4969:9:25",
                      "type": ""
                    }
                  ],
                  "src": "4919:113:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5081:79:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5138:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5147:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5150:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5140:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5140:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5140:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "5104:5:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "5129:5:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_address",
                                    "nodeType": "YulIdentifier",
                                    "src": "5111:17:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5111:24:25"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "5101:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5101:35:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "5094:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5094:43:25"
                        },
                        "nodeType": "YulIf",
                        "src": "5091:2:25"
                      }
                    ]
                  },
                  "name": "validator_revert_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5074:5:25",
                      "type": ""
                    }
                  ],
                  "src": "5038:122:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5217:87:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5282:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5291:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5294:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5284:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5284:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5284:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "5240:5:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "5273:5:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_address_payable",
                                    "nodeType": "YulIdentifier",
                                    "src": "5247:25:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5247:32:25"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "5237:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5237:43:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "5230:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5230:51:25"
                        },
                        "nodeType": "YulIf",
                        "src": "5227:2:25"
                      }
                    ]
                  },
                  "name": "validator_revert_t_address_payable",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5210:5:25",
                      "type": ""
                    }
                  ],
                  "src": "5166:138:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5353:79:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5410:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5419:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5422:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5412:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5412:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5412:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "5376:5:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "5401:5:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_uint256",
                                    "nodeType": "YulIdentifier",
                                    "src": "5383:17:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5383:24:25"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "5373:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5373:35:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "5366:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5366:43:25"
                        },
                        "nodeType": "YulIf",
                        "src": "5363:2:25"
                      }
                    ]
                  },
                  "name": "validator_revert_t_uint256",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5346:5:25",
                      "type": ""
                    }
                  ],
                  "src": "5310:122:25"
                }
              ]
            },
            "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
            "id": 25,
            "language": "Yul",
            "name": "#utility.yul"
          }
        ],
        "sourceMap": "500:2483:5:-:0;;;1066:507;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1189:17;1125::4;1145:12;:10;;;:12;;:::i;:::-;1125:32;;1176:9;1167:6;;:18;;;;;;;;;;;;;;;;;;1205:9;1195:7;;:19;;;;;;;;;;;;;;;;;;1263:7;;;;;;;;;;;1230:41;;1259:1;1230:41;;;;;;;;;;;;1083:195;;1299:20:5::1;1282:38;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1263:16;;:57;;;;;;;;;;;;;;;;;;1363:17;1346:35;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1330:13;;:51;;;;;;;;;;;;;;;;;;1412:20;1392:17;;:40;;;;;;;;;;;;;;;;;;1459:17;1442:14;;:34;;;;;;;;;;;;;;;;;;1533:17;1491:75;;1511:20;1491:75;;;1560:4;1491:75;;;;;;:::i;:::-;;;;;;;;1066:507:::0;;;500:2483;;586:96:20;639:7;665:10;658:17;;586:96;:::o;500:2483:5:-;;;;;;;;:::o;7:159:25:-;;103:6;97:13;88:22;;119:41;154:5;119:41;:::i;:::-;78:88;;;;:::o;172:137::-;;257:6;251:13;242:22;;273:30;297:5;273:30;:::i;:::-;232:77;;;;:::o;315:622::-;;;;481:2;469:9;460:7;456:23;452:32;449:2;;;497:1;494;487:12;449:2;540:1;565:72;629:7;620:6;609:9;605:22;565:72;:::i;:::-;555:82;;511:136;686:2;712:72;776:7;767:6;756:9;752:22;712:72;:::i;:::-;702:82;;657:137;833:2;859:61;912:7;903:6;892:9;888:22;859:61;:::i;:::-;849:71;;804:126;439:498;;;;;:::o;943:142::-;1046:32;1072:5;1046:32;:::i;:::-;1041:3;1034:45;1024:61;;:::o;1091:118::-;1178:24;1196:5;1178:24;:::i;:::-;1173:3;1166:37;1156:53;;:::o;1215:222::-;;1346:2;1335:9;1331:18;1323:26;;1359:71;1427:1;1416:9;1412:17;1403:6;1359:71;:::i;:::-;1313:124;;;;:::o;1443:254::-;;1590:2;1579:9;1575:18;1567:26;;1603:87;1687:1;1676:9;1672:17;1663:6;1603:87;:::i;:::-;1557:140;;;;:::o;1703:96::-;;1769:24;1787:5;1769:24;:::i;:::-;1758:35;;1748:51;;;:::o;1805:104::-;;1879:24;1897:5;1879:24;:::i;:::-;1868:35;;1858:51;;;:::o;1915:90::-;;1992:5;1985:13;1978:21;1967:32;;1957:48;;;:::o;2011:126::-;;2088:42;2081:5;2077:54;2066:65;;2056:81;;;:::o;2143:138::-;2224:32;2250:5;2224:32;:::i;:::-;2217:5;2214:43;2204:2;;2271:1;2268;2261:12;2204:2;2194:87;:::o;2287:116::-;2357:21;2372:5;2357:21;:::i;:::-;2350:5;2347:32;2337:2;;2393:1;2390;2383:12;2337:2;2327:76;:::o;500:2483:5:-;;;;;;;",
        "deployedSourceMap": "500:2483:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2079:105;;;;;;;;;;;;;:::i;:::-;;1515:87:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1635:168:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2676:144;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2352:148:4;;;;;;;;;;;;;:::i;:::-;;1865:160:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1354:85:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2238:99:5;;;;;;;;;;;;;:::i;:::-;;2430:153;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2649:378:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2079:105:5;1740:12:4;:10;:12::i;:::-;1729:23;;:7;:5;:7::i;:::-;:23;;;1721:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2139:16:5::1;;;;;;;;;;;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2079:105::o:0;1515:87:4:-;1562:7;1588;;;;;;;;;;;1581:14;;1515:87;:::o;1635:168:5:-;1740:12:4;:10;:12::i;:::-;1729:23;;:7;:5;:7::i;:::-;:23;;;1721:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1727:16:5::1;;;;;;;;;;;:25;;;1753:5;1727:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1774:22;;;;;;;;;;1635:168:::0;:::o;2676:144::-;2734:7;1740:12:4;:10;:12::i;:::-;1729:23;;:7;:5;:7::i;:::-;:23;;;1721:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2760:13:5::1;;;;;;;;;;;:24;;;2785:13;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2760:53;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2753:60;;2676:144:::0;:::o;2352:148:4:-;1947:8;:6;:8::i;:::-;1935:20;;:8;:6;:8::i;:::-;:20;;;1927:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2460:1:::1;2422:41;;2443:7;;;;;;;;;;;2422:41;;;;;;;;;;;;2491:1;2473:7;;:20;;;;;;;;;;;;;;;;;;2352:148::o:0;1865:160:5:-;1740:12:4;:10;:12::i;:::-;1729:23;;:7;:5;:7::i;:::-;:23;;;1721:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1954:13:5::1;;;;;;;;;;;:22;;;1977:5;1954:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1998:20;;;;;;;;;;1865:160:::0;:::o;1354:85:4:-;1400:7;1426:6;;;;;;;;;;;1419:13;;1354:85;:::o;2238:99:5:-;1740:12:4;:10;:12::i;:::-;1729:23;;:7;:5;:7::i;:::-;:23;;;1721:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2295:13:5::1;;;;;;;;;;;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2238:99::o:0;2430:153::-;2491:7;1740:12:4;:10;:12::i;:::-;1729:23;;:7;:5;:7::i;:::-;:23;;;1721:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2517:16:5::1;;;;;;;;;;;:27;;;2545:16;;;;;;;;;;;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2517:59;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2510:66;;2430:153:::0;:::o;2649:378:4:-;1740:12;:10;:12::i;:::-;1729:23;;:7;:5;:7::i;:::-;:23;;;1721:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2981:9:::1;2951:40;;2972:7;;;;;;;;;;;2951:40;;;;;;;;;;;;3011:9;3001:7;;:19;;;;;;;;;;;;;;;;;;2649:378:::0;:::o;586:96:20:-;639:7;665:10;658:17;;586:96;:::o;7:139:25:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:155::-;;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;212:95;;;;:::o;313:159::-;;409:6;403:13;394:22;;425:41;460:5;425:41;:::i;:::-;384:88;;;;:::o;478:143::-;;566:6;560:13;551:22;;582:33;609:5;582:33;:::i;:::-;541:80;;;;:::o;627:262::-;;735:2;723:9;714:7;710:23;706:32;703:2;;;751:1;748;741:12;703:2;794:1;819:53;864:7;855:6;844:9;840:22;819:53;:::i;:::-;809:63;;765:117;693:196;;;;:::o;895:278::-;;1011:2;999:9;990:7;986:23;982:32;979:2;;;1027:1;1024;1017:12;979:2;1070:1;1095:61;1148:7;1139:6;1128:9;1124:22;1095:61;:::i;:::-;1085:71;;1041:125;969:204;;;;:::o;1179:300::-;;1306:2;1294:9;1285:7;1281:23;1277:32;1274:2;;;1322:1;1319;1312:12;1274:2;1365:1;1390:72;1454:7;1445:6;1434:9;1430:22;1390:72;:::i;:::-;1380:82;;1336:136;1264:215;;;;:::o;1485:284::-;;1604:2;1592:9;1583:7;1579:23;1575:32;1572:2;;;1620:1;1617;1610:12;1572:2;1663:1;1688:64;1744:7;1735:6;1724:9;1720:22;1688:64;:::i;:::-;1678:74;;1634:128;1562:207;;;;:::o;1775:147::-;1870:45;1909:5;1870:45;:::i;:::-;1865:3;1858:58;1848:74;;:::o;1928:142::-;2031:32;2057:5;2031:32;:::i;:::-;2026:3;2019:45;2009:61;;:::o;2076:118::-;2163:24;2181:5;2163:24;:::i;:::-;2158:3;2151:37;2141:53;;:::o;2200:330::-;;2363:67;2427:2;2422:3;2363:67;:::i;:::-;2356:74;;2460:34;2456:1;2451:3;2447:11;2440:55;2521:2;2516:3;2512:12;2505:19;;2346:184;;;:::o;2536:118::-;2623:24;2641:5;2623:24;:::i;:::-;2618:3;2611:37;2601:53;;:::o;2660:222::-;;2791:2;2780:9;2776:18;2768:26;;2804:71;2872:1;2861:9;2857:17;2848:6;2804:71;:::i;:::-;2758:124;;;;:::o;2888:238::-;;3027:2;3016:9;3012:18;3004:26;;3040:79;3116:1;3105:9;3101:17;3092:6;3040:79;:::i;:::-;2994:132;;;;:::o;3132:254::-;;3279:2;3268:9;3264:18;3256:26;;3292:87;3376:1;3365:9;3361:17;3352:6;3292:87;:::i;:::-;3246:140;;;;:::o;3392:419::-;;3596:2;3585:9;3581:18;3573:26;;3645:9;3639:4;3635:20;3631:1;3620:9;3616:17;3609:47;3673:131;3799:4;3673:131;:::i;:::-;3665:139;;3563:248;;;:::o;3817:222::-;;3948:2;3937:9;3933:18;3925:26;;3961:71;4029:1;4018:9;4014:17;4005:6;3961:71;:::i;:::-;3915:124;;;;:::o;4045:169::-;;4163:6;4158:3;4151:19;4203:4;4198:3;4194:14;4179:29;;4141:73;;;;:::o;4220:96::-;;4286:24;4304:5;4286:24;:::i;:::-;4275:35;;4265:51;;;:::o;4322:104::-;;4396:24;4414:5;4396:24;:::i;:::-;4385:35;;4375:51;;;:::o;4432:126::-;;4509:42;4502:5;4498:54;4487:65;;4477:81;;;:::o;4564:77::-;;4630:5;4619:16;;4609:32;;;:::o;4647:134::-;;4738:37;4769:5;4738:37;:::i;:::-;4725:50;;4715:66;;;:::o;4787:126::-;;4870:37;4901:5;4870:37;:::i;:::-;4857:50;;4847:66;;;:::o;4919:113::-;;5002:24;5020:5;5002:24;:::i;:::-;4989:37;;4979:53;;;:::o;5038:122::-;5111:24;5129:5;5111:24;:::i;:::-;5104:5;5101:35;5091:2;;5150:1;5147;5140:12;5091:2;5081:79;:::o;5166:138::-;5247:32;5273:5;5247:32;:::i;:::-;5240:5;5237:43;5227:2;;5294:1;5291;5284:12;5227:2;5217:87;:::o;5310:122::-;5383:24;5401:5;5383:24;:::i;:::-;5376:5;5373:35;5363:2;;5422:1;5419;5412:12;5363:2;5353:79;:::o",
        "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\";\nimport \"./MultiPartyOwneable.sol\";\n\n/**\n * The Work Exchange contract acts as an escrow for the stake from both parties\n * as well as facilitates the exchange of contracts between to users.  A WorkExchange is created everytime a user enters into a new deal or\n * contract.\n * Note: Created for every job acceptance.\n */\ncontract WorkExchange is MultiPartyOwneable {\n    using SafeMath for uint256;\n\n    event WorkerSentSolution();\n    event RequesterSentPayment();\n    event WorkExchangeStarted(address indexed requesterAddress, address indexed workerBeneficiary, address workExchangeAddress);\n    event WorkExchangeEnded(address indexed requesterAddress, address indexed workerBeneficiary, address workExchangeAddress);\n\n    RefundEscrow private _requesterEscrow;\n    RefundEscrow private _workerEscrow;\n\n    address private _workerAddress;\n    address private _requesterAddress;\n\n    constructor(address payable requesterBeneficiary, address payable workerBeneficiary, bool isTimeLocked) MultiPartyOwneable(workerBeneficiary)/*, TimeLockedDepositProtocol(isTimeLocked)*/ {\n        _requesterEscrow = new RefundEscrow(requesterBeneficiary);\n        _workerEscrow = new RefundEscrow(workerBeneficiary);\n\n        _requesterAddress = requesterBeneficiary;\n        _workerAddress = workerBeneficiary;\n        emit WorkExchangeStarted(requesterBeneficiary, workerBeneficiary, address(this));\n    }\n\n    /**\n     * Receives payments from customers\n     */\n    function sendPaymentAsRequester(address payable payee) external payable onlyOwner {\n        _requesterEscrow.withdraw(payee);\n        emit RequesterSentPayment();\n    }\n\n    /**\n     * Receives payments from customers\n     */\n    function sendPaymentAsWorker(address payable payee) external payable onlyOwner {\n        _workerEscrow.withdraw(payee);\n        emit WorkerSentSolution();\n    }\n\n    /**\n     * Withdraw funds to wallet\n     */\n    function withdrawAsRequester() external onlyOwner {\n        _requesterEscrow.beneficiaryWithdraw();\n    }\n\n    /**\n     * Withdraw funds to wallet\n     */\n    function withdrawAsWorker() external onlyOwner {\n        _workerEscrow.beneficiaryWithdraw();\n    }\n\n    /**\n     * Checks balance available to withdraw\n     * @return the balance\n     */\n    function balanceRequester() external view onlyOwner returns (uint256) {\n        return _requesterEscrow.depositsOf(_requesterEscrow.beneficiary());\n    }\n\n    /**\n     * Checks balance available to withdraw\n     * @return the balance\n     */\n    function balanceWorker() external view onlyOwner returns (uint256) {\n        return _workerEscrow.depositsOf(_workerEscrow.beneficiary());\n    }\n\n    function disableWorkExchange() internal {\n        emit WorkExchangeEnded(_requesterAddress, _workerAddress, address(this));\n        //selfdestruct();\n    }\n}\n",
        "sourcePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkExchange.sol",
        "ast": {
          "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkExchange.sol",
          "exportedSymbols": {
            "Address": [
              2205
            ],
            "ConditionalEscrow": [
              2263
            ],
            "Context": [
              2228
            ],
            "Escrow": [
              2363
            ],
            "MultiPartyOwneable": [
              363
            ],
            "Ownable": [
              1817
            ],
            "RefundEscrow": [
              2542
            ],
            "SafeMath": [
              2854
            ],
            "WorkExchange": [
              556
            ]
          },
          "id": 557,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 365,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
              "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
              "id": 366,
              "nodeType": "ImportDirective",
              "scope": 557,
              "sourceUnit": 2855,
              "src": "58:57:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/escrow/RefundEscrow.sol",
              "file": "@openzeppelin/contracts/utils/escrow/RefundEscrow.sol",
              "id": 367,
              "nodeType": "ImportDirective",
              "scope": 557,
              "sourceUnit": 2543,
              "src": "116:63:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/MultiPartyOwneable.sol",
              "file": "./MultiPartyOwneable.sol",
              "id": 368,
              "nodeType": "ImportDirective",
              "scope": 557,
              "sourceUnit": 364,
              "src": "180:34:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 370,
                    "name": "MultiPartyOwneable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 363,
                    "src": "525:18:5"
                  },
                  "id": 371,
                  "nodeType": "InheritanceSpecifier",
                  "src": "525:18:5"
                }
              ],
              "contractDependencies": [
                363,
                2228,
                2542
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 369,
                "nodeType": "StructuredDocumentation",
                "src": "216:283:5",
                "text": " The Work Exchange contract acts as an escrow for the stake from both parties\n as well as facilitates the exchange of contracts between to users.  A WorkExchange is created everytime a user enters into a new deal or\n contract.\n Note: Created for every job acceptance."
              },
              "fullyImplemented": true,
              "id": 556,
              "linearizedBaseContracts": [
                556,
                363,
                2228
              ],
              "name": "WorkExchange",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 374,
                  "libraryName": {
                    "id": 372,
                    "name": "SafeMath",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2854,
                    "src": "556:8:5"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "550:27:5",
                  "typeName": {
                    "id": 373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "anonymous": false,
                  "id": 376,
                  "name": "WorkerSentSolution",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "607:2:5"
                  },
                  "src": "583:27:5"
                },
                {
                  "anonymous": false,
                  "id": 378,
                  "name": "RequesterSentPayment",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 377,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "641:2:5"
                  },
                  "src": "615:29:5"
                },
                {
                  "anonymous": false,
                  "id": 386,
                  "name": "WorkExchangeStarted",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 385,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 380,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "requesterAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "675:32:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 379,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "675:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 382,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "workerBeneficiary",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "709:33:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 381,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 384,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "workExchangeAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "744:27:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "744:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "674:98:5"
                  },
                  "src": "649:124:5"
                },
                {
                  "anonymous": false,
                  "id": 394,
                  "name": "WorkExchangeEnded",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 393,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 388,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "requesterAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 394,
                        "src": "802:32:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "802:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 390,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "workerBeneficiary",
                        "nodeType": "VariableDeclaration",
                        "scope": 394,
                        "src": "836:33:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "836:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 392,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "workExchangeAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 394,
                        "src": "871:27:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 391,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "871:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "801:98:5"
                  },
                  "src": "778:122:5"
                },
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "_requesterEscrow",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "906:37:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                    "typeString": "contract RefundEscrow"
                  },
                  "typeName": {
                    "id": 396,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 395,
                      "name": "RefundEscrow",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2542,
                      "src": "906:12:5"
                    },
                    "referencedDeclaration": 2542,
                    "src": "906:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                      "typeString": "contract RefundEscrow"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "_workerEscrow",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "949:34:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                    "typeString": "contract RefundEscrow"
                  },
                  "typeName": {
                    "id": 399,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 398,
                      "name": "RefundEscrow",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2542,
                      "src": "949:12:5"
                    },
                    "referencedDeclaration": 2542,
                    "src": "949:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                      "typeString": "contract RefundEscrow"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "_workerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "990:30:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 404,
                  "mutability": "mutable",
                  "name": "_requesterAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "1026:33:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 449,
                    "nodeType": "Block",
                    "src": "1253:320:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 416,
                            "name": "_requesterEscrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 397,
                            "src": "1263:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                              "typeString": "contract RefundEscrow"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 420,
                                "name": "requesterBeneficiary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 406,
                                "src": "1299:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1282:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_address_payable_$returns$_t_contract$_RefundEscrow_$2542_$",
                                "typeString": "function (address payable) returns (contract RefundEscrow)"
                              },
                              "typeName": {
                                "id": 418,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 417,
                                  "name": "RefundEscrow",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2542,
                                  "src": "1286:12:5"
                                },
                                "referencedDeclaration": 2542,
                                "src": "1286:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                  "typeString": "contract RefundEscrow"
                                }
                              }
                            },
                            "id": 421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1282:38:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                              "typeString": "contract RefundEscrow"
                            }
                          },
                          "src": "1263:57:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                            "typeString": "contract RefundEscrow"
                          }
                        },
                        "id": 423,
                        "nodeType": "ExpressionStatement",
                        "src": "1263:57:5"
                      },
                      {
                        "expression": {
                          "id": 430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 424,
                            "name": "_workerEscrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 400,
                            "src": "1330:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                              "typeString": "contract RefundEscrow"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 428,
                                "name": "workerBeneficiary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 408,
                                "src": "1363:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1346:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_address_payable_$returns$_t_contract$_RefundEscrow_$2542_$",
                                "typeString": "function (address payable) returns (contract RefundEscrow)"
                              },
                              "typeName": {
                                "id": 426,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 425,
                                  "name": "RefundEscrow",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2542,
                                  "src": "1350:12:5"
                                },
                                "referencedDeclaration": 2542,
                                "src": "1350:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                  "typeString": "contract RefundEscrow"
                                }
                              }
                            },
                            "id": 429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1346:35:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                              "typeString": "contract RefundEscrow"
                            }
                          },
                          "src": "1330:51:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                            "typeString": "contract RefundEscrow"
                          }
                        },
                        "id": 431,
                        "nodeType": "ExpressionStatement",
                        "src": "1330:51:5"
                      },
                      {
                        "expression": {
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 432,
                            "name": "_requesterAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 404,
                            "src": "1392:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 433,
                            "name": "requesterBeneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 406,
                            "src": "1412:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1392:40:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 435,
                        "nodeType": "ExpressionStatement",
                        "src": "1392:40:5"
                      },
                      {
                        "expression": {
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 436,
                            "name": "_workerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "1442:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 437,
                            "name": "workerBeneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 408,
                            "src": "1459:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1442:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 439,
                        "nodeType": "ExpressionStatement",
                        "src": "1442:34:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 441,
                              "name": "requesterBeneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 406,
                              "src": "1511:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 442,
                              "name": "workerBeneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "1533:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 445,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1560:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_WorkExchange_$556",
                                    "typeString": "contract WorkExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_WorkExchange_$556",
                                    "typeString": "contract WorkExchange"
                                  }
                                ],
                                "id": 444,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1552:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 443,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1552:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1552:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 440,
                            "name": "WorkExchangeStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 386,
                            "src": "1491:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1491:75:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 448,
                        "nodeType": "EmitStatement",
                        "src": "1486:80:5"
                      }
                    ]
                  },
                  "id": 450,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 413,
                          "name": "workerBeneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 408,
                          "src": "1189:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "id": 414,
                      "modifierName": {
                        "id": 412,
                        "name": "MultiPartyOwneable",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 363,
                        "src": "1170:18:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1170:37:5"
                    }
                  ],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 411,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 406,
                        "mutability": "mutable",
                        "name": "requesterBeneficiary",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "1078:36:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 405,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1078:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 408,
                        "mutability": "mutable",
                        "name": "workerBeneficiary",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "1116:33:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 407,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1116:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 410,
                        "mutability": "mutable",
                        "name": "isTimeLocked",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "1151:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 409,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1151:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1077:92:5"
                  },
                  "returnParameters": {
                    "id": 415,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1253:0:5"
                  },
                  "scope": 556,
                  "src": "1066:507:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 467,
                    "nodeType": "Block",
                    "src": "1717:86:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 461,
                              "name": "payee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "1753:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 458,
                              "name": "_requesterEscrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "1727:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2262,
                            "src": "1727:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                              "typeString": "function (address payable) external"
                            }
                          },
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1727:32:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 463,
                        "nodeType": "ExpressionStatement",
                        "src": "1727:32:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 464,
                            "name": "RequesterSentPayment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "1774:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1774:22:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 466,
                        "nodeType": "EmitStatement",
                        "src": "1769:27:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "1579:51:5",
                    "text": " Receives payments from customers"
                  },
                  "functionSelector": "6628c1d1",
                  "id": 468,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 456,
                      "modifierName": {
                        "id": 455,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 308,
                        "src": "1707:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1707:9:5"
                    }
                  ],
                  "name": "sendPaymentAsRequester",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 454,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "payee",
                        "nodeType": "VariableDeclaration",
                        "scope": 468,
                        "src": "1667:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1667:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1666:23:5"
                  },
                  "returnParameters": {
                    "id": 457,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1717:0:5"
                  },
                  "scope": 556,
                  "src": "1635:168:5",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 485,
                    "nodeType": "Block",
                    "src": "1944:81:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 479,
                              "name": "payee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 471,
                              "src": "1977:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 476,
                              "name": "_workerEscrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "1954:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2262,
                            "src": "1954:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                              "typeString": "function (address payable) external"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1954:29:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 481,
                        "nodeType": "ExpressionStatement",
                        "src": "1954:29:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 482,
                            "name": "WorkerSentSolution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 376,
                            "src": "1998:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1998:20:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 484,
                        "nodeType": "EmitStatement",
                        "src": "1993:25:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 469,
                    "nodeType": "StructuredDocumentation",
                    "src": "1809:51:5",
                    "text": " Receives payments from customers"
                  },
                  "functionSelector": "8428dccc",
                  "id": 486,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 474,
                      "modifierName": {
                        "id": 473,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 308,
                        "src": "1934:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1934:9:5"
                    }
                  ],
                  "name": "sendPaymentAsWorker",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 472,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 471,
                        "mutability": "mutable",
                        "name": "payee",
                        "nodeType": "VariableDeclaration",
                        "scope": 486,
                        "src": "1894:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 470,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1894:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1893:23:5"
                  },
                  "returnParameters": {
                    "id": 475,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1944:0:5"
                  },
                  "scope": 556,
                  "src": "1865:160:5",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 497,
                    "nodeType": "Block",
                    "src": "2129:55:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 492,
                              "name": "_requesterEscrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "2139:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "beneficiaryWithdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2525,
                            "src": "2139:36:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2139:38:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 496,
                        "nodeType": "ExpressionStatement",
                        "src": "2139:38:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 487,
                    "nodeType": "StructuredDocumentation",
                    "src": "2031:43:5",
                    "text": " Withdraw funds to wallet"
                  },
                  "functionSelector": "03f5d25b",
                  "id": 498,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 490,
                      "modifierName": {
                        "id": 489,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 308,
                        "src": "2119:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2119:9:5"
                    }
                  ],
                  "name": "withdrawAsRequester",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 488,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2107:2:5"
                  },
                  "returnParameters": {
                    "id": 491,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2129:0:5"
                  },
                  "scope": 556,
                  "src": "2079:105:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 509,
                    "nodeType": "Block",
                    "src": "2285:52:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 504,
                              "name": "_workerEscrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "2295:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "beneficiaryWithdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2525,
                            "src": "2295:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2295:35:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 508,
                        "nodeType": "ExpressionStatement",
                        "src": "2295:35:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 499,
                    "nodeType": "StructuredDocumentation",
                    "src": "2190:43:5",
                    "text": " Withdraw funds to wallet"
                  },
                  "functionSelector": "98da87b4",
                  "id": 510,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 502,
                      "modifierName": {
                        "id": 501,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 308,
                        "src": "2275:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2275:9:5"
                    }
                  ],
                  "name": "withdrawAsWorker",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 500,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2263:2:5"
                  },
                  "returnParameters": {
                    "id": 503,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2285:0:5"
                  },
                  "scope": 556,
                  "src": "2238:99:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 525,
                    "nodeType": "Block",
                    "src": "2500:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 520,
                                  "name": "_requesterEscrow",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 397,
                                  "src": "2545:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                    "typeString": "contract RefundEscrow"
                                  }
                                },
                                "id": 521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "beneficiary",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2430,
                                "src": "2545:28:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view external returns (address payable)"
                                }
                              },
                              "id": 522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2545:30:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 518,
                              "name": "_requesterEscrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "2517:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "depositsOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2301,
                            "src": "2517:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2517:59:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 517,
                        "id": 524,
                        "nodeType": "Return",
                        "src": "2510:66:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 511,
                    "nodeType": "StructuredDocumentation",
                    "src": "2343:82:5",
                    "text": " Checks balance available to withdraw\n @return the balance"
                  },
                  "functionSelector": "b48691e0",
                  "id": 526,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 514,
                      "modifierName": {
                        "id": 513,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 308,
                        "src": "2472:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2472:9:5"
                    }
                  ],
                  "name": "balanceRequester",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 512,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2455:2:5"
                  },
                  "returnParameters": {
                    "id": 517,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 516,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 526,
                        "src": "2491:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 515,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2491:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2490:9:5"
                  },
                  "scope": 556,
                  "src": "2430:153:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 541,
                    "nodeType": "Block",
                    "src": "2743:77:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 536,
                                  "name": "_workerEscrow",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "2785:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                    "typeString": "contract RefundEscrow"
                                  }
                                },
                                "id": 537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "beneficiary",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2430,
                                "src": "2785:25:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view external returns (address payable)"
                                }
                              },
                              "id": 538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2785:27:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 534,
                              "name": "_workerEscrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "2760:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "depositsOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2301,
                            "src": "2760:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2760:53:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 533,
                        "id": 540,
                        "nodeType": "Return",
                        "src": "2753:60:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 527,
                    "nodeType": "StructuredDocumentation",
                    "src": "2589:82:5",
                    "text": " Checks balance available to withdraw\n @return the balance"
                  },
                  "functionSelector": "7053e7e0",
                  "id": 542,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 530,
                      "modifierName": {
                        "id": 529,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 308,
                        "src": "2715:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2715:9:5"
                    }
                  ],
                  "name": "balanceWorker",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 528,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2698:2:5"
                  },
                  "returnParameters": {
                    "id": 533,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "2734:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2734:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2733:9:5"
                  },
                  "scope": 556,
                  "src": "2676:144:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 554,
                    "nodeType": "Block",
                    "src": "2866:115:5",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 546,
                              "name": "_requesterAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 404,
                              "src": "2899:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 547,
                              "name": "_workerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 402,
                              "src": "2918:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 550,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2942:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_WorkExchange_$556",
                                    "typeString": "contract WorkExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_WorkExchange_$556",
                                    "typeString": "contract WorkExchange"
                                  }
                                ],
                                "id": 549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2934:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 548,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2934:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2934:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 545,
                            "name": "WorkExchangeEnded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "2881:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2881:67:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 553,
                        "nodeType": "EmitStatement",
                        "src": "2876:72:5"
                      }
                    ]
                  },
                  "id": 555,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "disableWorkExchange",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 543,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2854:2:5"
                  },
                  "returnParameters": {
                    "id": 544,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2866:0:5"
                  },
                  "scope": 556,
                  "src": "2826:155:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 557,
              "src": "500:2483:5"
            }
          ],
          "src": "33:2951:5"
        },
        "legacyAST": {
          "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkExchange.sol",
          "exportedSymbols": {
            "Address": [
              2205
            ],
            "ConditionalEscrow": [
              2263
            ],
            "Context": [
              2228
            ],
            "Escrow": [
              2363
            ],
            "MultiPartyOwneable": [
              363
            ],
            "Ownable": [
              1817
            ],
            "RefundEscrow": [
              2542
            ],
            "SafeMath": [
              2854
            ],
            "WorkExchange": [
              556
            ]
          },
          "id": 557,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 365,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
              "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
              "id": 366,
              "nodeType": "ImportDirective",
              "scope": 557,
              "sourceUnit": 2855,
              "src": "58:57:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/escrow/RefundEscrow.sol",
              "file": "@openzeppelin/contracts/utils/escrow/RefundEscrow.sol",
              "id": 367,
              "nodeType": "ImportDirective",
              "scope": 557,
              "sourceUnit": 2543,
              "src": "116:63:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/MultiPartyOwneable.sol",
              "file": "./MultiPartyOwneable.sol",
              "id": 368,
              "nodeType": "ImportDirective",
              "scope": 557,
              "sourceUnit": 364,
              "src": "180:34:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 370,
                    "name": "MultiPartyOwneable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 363,
                    "src": "525:18:5"
                  },
                  "id": 371,
                  "nodeType": "InheritanceSpecifier",
                  "src": "525:18:5"
                }
              ],
              "contractDependencies": [
                363,
                2228,
                2542
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 369,
                "nodeType": "StructuredDocumentation",
                "src": "216:283:5",
                "text": " The Work Exchange contract acts as an escrow for the stake from both parties\n as well as facilitates the exchange of contracts between to users.  A WorkExchange is created everytime a user enters into a new deal or\n contract.\n Note: Created for every job acceptance."
              },
              "fullyImplemented": true,
              "id": 556,
              "linearizedBaseContracts": [
                556,
                363,
                2228
              ],
              "name": "WorkExchange",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 374,
                  "libraryName": {
                    "id": 372,
                    "name": "SafeMath",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2854,
                    "src": "556:8:5"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "550:27:5",
                  "typeName": {
                    "id": 373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "anonymous": false,
                  "id": 376,
                  "name": "WorkerSentSolution",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "607:2:5"
                  },
                  "src": "583:27:5"
                },
                {
                  "anonymous": false,
                  "id": 378,
                  "name": "RequesterSentPayment",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 377,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "641:2:5"
                  },
                  "src": "615:29:5"
                },
                {
                  "anonymous": false,
                  "id": 386,
                  "name": "WorkExchangeStarted",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 385,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 380,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "requesterAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "675:32:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 379,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "675:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 382,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "workerBeneficiary",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "709:33:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 381,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 384,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "workExchangeAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "744:27:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "744:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "674:98:5"
                  },
                  "src": "649:124:5"
                },
                {
                  "anonymous": false,
                  "id": 394,
                  "name": "WorkExchangeEnded",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 393,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 388,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "requesterAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 394,
                        "src": "802:32:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "802:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 390,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "workerBeneficiary",
                        "nodeType": "VariableDeclaration",
                        "scope": 394,
                        "src": "836:33:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "836:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 392,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "workExchangeAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 394,
                        "src": "871:27:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 391,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "871:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "801:98:5"
                  },
                  "src": "778:122:5"
                },
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "_requesterEscrow",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "906:37:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                    "typeString": "contract RefundEscrow"
                  },
                  "typeName": {
                    "id": 396,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 395,
                      "name": "RefundEscrow",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2542,
                      "src": "906:12:5"
                    },
                    "referencedDeclaration": 2542,
                    "src": "906:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                      "typeString": "contract RefundEscrow"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "_workerEscrow",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "949:34:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                    "typeString": "contract RefundEscrow"
                  },
                  "typeName": {
                    "id": 399,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 398,
                      "name": "RefundEscrow",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2542,
                      "src": "949:12:5"
                    },
                    "referencedDeclaration": 2542,
                    "src": "949:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                      "typeString": "contract RefundEscrow"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "_workerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "990:30:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 404,
                  "mutability": "mutable",
                  "name": "_requesterAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 556,
                  "src": "1026:33:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 449,
                    "nodeType": "Block",
                    "src": "1253:320:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 416,
                            "name": "_requesterEscrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 397,
                            "src": "1263:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                              "typeString": "contract RefundEscrow"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 420,
                                "name": "requesterBeneficiary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 406,
                                "src": "1299:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1282:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_address_payable_$returns$_t_contract$_RefundEscrow_$2542_$",
                                "typeString": "function (address payable) returns (contract RefundEscrow)"
                              },
                              "typeName": {
                                "id": 418,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 417,
                                  "name": "RefundEscrow",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2542,
                                  "src": "1286:12:5"
                                },
                                "referencedDeclaration": 2542,
                                "src": "1286:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                  "typeString": "contract RefundEscrow"
                                }
                              }
                            },
                            "id": 421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1282:38:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                              "typeString": "contract RefundEscrow"
                            }
                          },
                          "src": "1263:57:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                            "typeString": "contract RefundEscrow"
                          }
                        },
                        "id": 423,
                        "nodeType": "ExpressionStatement",
                        "src": "1263:57:5"
                      },
                      {
                        "expression": {
                          "id": 430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 424,
                            "name": "_workerEscrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 400,
                            "src": "1330:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                              "typeString": "contract RefundEscrow"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 428,
                                "name": "workerBeneficiary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 408,
                                "src": "1363:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1346:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$_t_address_payable_$returns$_t_contract$_RefundEscrow_$2542_$",
                                "typeString": "function (address payable) returns (contract RefundEscrow)"
                              },
                              "typeName": {
                                "id": 426,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 425,
                                  "name": "RefundEscrow",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2542,
                                  "src": "1350:12:5"
                                },
                                "referencedDeclaration": 2542,
                                "src": "1350:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                  "typeString": "contract RefundEscrow"
                                }
                              }
                            },
                            "id": 429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1346:35:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                              "typeString": "contract RefundEscrow"
                            }
                          },
                          "src": "1330:51:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                            "typeString": "contract RefundEscrow"
                          }
                        },
                        "id": 431,
                        "nodeType": "ExpressionStatement",
                        "src": "1330:51:5"
                      },
                      {
                        "expression": {
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 432,
                            "name": "_requesterAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 404,
                            "src": "1392:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 433,
                            "name": "requesterBeneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 406,
                            "src": "1412:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1392:40:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 435,
                        "nodeType": "ExpressionStatement",
                        "src": "1392:40:5"
                      },
                      {
                        "expression": {
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 436,
                            "name": "_workerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "1442:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 437,
                            "name": "workerBeneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 408,
                            "src": "1459:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1442:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 439,
                        "nodeType": "ExpressionStatement",
                        "src": "1442:34:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 441,
                              "name": "requesterBeneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 406,
                              "src": "1511:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 442,
                              "name": "workerBeneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "1533:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 445,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1560:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_WorkExchange_$556",
                                    "typeString": "contract WorkExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_WorkExchange_$556",
                                    "typeString": "contract WorkExchange"
                                  }
                                ],
                                "id": 444,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1552:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 443,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1552:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1552:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 440,
                            "name": "WorkExchangeStarted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 386,
                            "src": "1491:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1491:75:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 448,
                        "nodeType": "EmitStatement",
                        "src": "1486:80:5"
                      }
                    ]
                  },
                  "id": 450,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 413,
                          "name": "workerBeneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 408,
                          "src": "1189:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "id": 414,
                      "modifierName": {
                        "id": 412,
                        "name": "MultiPartyOwneable",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 363,
                        "src": "1170:18:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1170:37:5"
                    }
                  ],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 411,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 406,
                        "mutability": "mutable",
                        "name": "requesterBeneficiary",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "1078:36:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 405,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1078:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 408,
                        "mutability": "mutable",
                        "name": "workerBeneficiary",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "1116:33:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 407,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1116:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 410,
                        "mutability": "mutable",
                        "name": "isTimeLocked",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "1151:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 409,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1151:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1077:92:5"
                  },
                  "returnParameters": {
                    "id": 415,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1253:0:5"
                  },
                  "scope": 556,
                  "src": "1066:507:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 467,
                    "nodeType": "Block",
                    "src": "1717:86:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 461,
                              "name": "payee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "1753:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 458,
                              "name": "_requesterEscrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "1727:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2262,
                            "src": "1727:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                              "typeString": "function (address payable) external"
                            }
                          },
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1727:32:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 463,
                        "nodeType": "ExpressionStatement",
                        "src": "1727:32:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 464,
                            "name": "RequesterSentPayment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "1774:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1774:22:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 466,
                        "nodeType": "EmitStatement",
                        "src": "1769:27:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "1579:51:5",
                    "text": " Receives payments from customers"
                  },
                  "functionSelector": "6628c1d1",
                  "id": 468,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 456,
                      "modifierName": {
                        "id": 455,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 308,
                        "src": "1707:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1707:9:5"
                    }
                  ],
                  "name": "sendPaymentAsRequester",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 454,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "payee",
                        "nodeType": "VariableDeclaration",
                        "scope": 468,
                        "src": "1667:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1667:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1666:23:5"
                  },
                  "returnParameters": {
                    "id": 457,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1717:0:5"
                  },
                  "scope": 556,
                  "src": "1635:168:5",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 485,
                    "nodeType": "Block",
                    "src": "1944:81:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 479,
                              "name": "payee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 471,
                              "src": "1977:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 476,
                              "name": "_workerEscrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "1954:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2262,
                            "src": "1954:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                              "typeString": "function (address payable) external"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1954:29:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 481,
                        "nodeType": "ExpressionStatement",
                        "src": "1954:29:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 482,
                            "name": "WorkerSentSolution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 376,
                            "src": "1998:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1998:20:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 484,
                        "nodeType": "EmitStatement",
                        "src": "1993:25:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 469,
                    "nodeType": "StructuredDocumentation",
                    "src": "1809:51:5",
                    "text": " Receives payments from customers"
                  },
                  "functionSelector": "8428dccc",
                  "id": 486,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 474,
                      "modifierName": {
                        "id": 473,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 308,
                        "src": "1934:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1934:9:5"
                    }
                  ],
                  "name": "sendPaymentAsWorker",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 472,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 471,
                        "mutability": "mutable",
                        "name": "payee",
                        "nodeType": "VariableDeclaration",
                        "scope": 486,
                        "src": "1894:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 470,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1894:15:5",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1893:23:5"
                  },
                  "returnParameters": {
                    "id": 475,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1944:0:5"
                  },
                  "scope": 556,
                  "src": "1865:160:5",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 497,
                    "nodeType": "Block",
                    "src": "2129:55:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 492,
                              "name": "_requesterEscrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "2139:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "beneficiaryWithdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2525,
                            "src": "2139:36:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2139:38:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 496,
                        "nodeType": "ExpressionStatement",
                        "src": "2139:38:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 487,
                    "nodeType": "StructuredDocumentation",
                    "src": "2031:43:5",
                    "text": " Withdraw funds to wallet"
                  },
                  "functionSelector": "03f5d25b",
                  "id": 498,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 490,
                      "modifierName": {
                        "id": 489,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 308,
                        "src": "2119:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2119:9:5"
                    }
                  ],
                  "name": "withdrawAsRequester",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 488,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2107:2:5"
                  },
                  "returnParameters": {
                    "id": 491,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2129:0:5"
                  },
                  "scope": 556,
                  "src": "2079:105:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 509,
                    "nodeType": "Block",
                    "src": "2285:52:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 504,
                              "name": "_workerEscrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "2295:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "beneficiaryWithdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2525,
                            "src": "2295:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2295:35:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 508,
                        "nodeType": "ExpressionStatement",
                        "src": "2295:35:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 499,
                    "nodeType": "StructuredDocumentation",
                    "src": "2190:43:5",
                    "text": " Withdraw funds to wallet"
                  },
                  "functionSelector": "98da87b4",
                  "id": 510,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 502,
                      "modifierName": {
                        "id": 501,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 308,
                        "src": "2275:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2275:9:5"
                    }
                  ],
                  "name": "withdrawAsWorker",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 500,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2263:2:5"
                  },
                  "returnParameters": {
                    "id": 503,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2285:0:5"
                  },
                  "scope": 556,
                  "src": "2238:99:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 525,
                    "nodeType": "Block",
                    "src": "2500:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 520,
                                  "name": "_requesterEscrow",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 397,
                                  "src": "2545:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                    "typeString": "contract RefundEscrow"
                                  }
                                },
                                "id": 521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "beneficiary",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2430,
                                "src": "2545:28:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view external returns (address payable)"
                                }
                              },
                              "id": 522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2545:30:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 518,
                              "name": "_requesterEscrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "2517:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "depositsOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2301,
                            "src": "2517:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2517:59:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 517,
                        "id": 524,
                        "nodeType": "Return",
                        "src": "2510:66:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 511,
                    "nodeType": "StructuredDocumentation",
                    "src": "2343:82:5",
                    "text": " Checks balance available to withdraw\n @return the balance"
                  },
                  "functionSelector": "b48691e0",
                  "id": 526,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 514,
                      "modifierName": {
                        "id": 513,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 308,
                        "src": "2472:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2472:9:5"
                    }
                  ],
                  "name": "balanceRequester",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 512,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2455:2:5"
                  },
                  "returnParameters": {
                    "id": 517,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 516,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 526,
                        "src": "2491:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 515,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2491:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2490:9:5"
                  },
                  "scope": 556,
                  "src": "2430:153:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 541,
                    "nodeType": "Block",
                    "src": "2743:77:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 536,
                                  "name": "_workerEscrow",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "2785:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                    "typeString": "contract RefundEscrow"
                                  }
                                },
                                "id": 537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "beneficiary",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2430,
                                "src": "2785:25:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view external returns (address payable)"
                                }
                              },
                              "id": 538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2785:27:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 534,
                              "name": "_workerEscrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "2760:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$2542",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "depositsOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2301,
                            "src": "2760:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2760:53:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 533,
                        "id": 540,
                        "nodeType": "Return",
                        "src": "2753:60:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 527,
                    "nodeType": "StructuredDocumentation",
                    "src": "2589:82:5",
                    "text": " Checks balance available to withdraw\n @return the balance"
                  },
                  "functionSelector": "7053e7e0",
                  "id": 542,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 530,
                      "modifierName": {
                        "id": 529,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 308,
                        "src": "2715:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2715:9:5"
                    }
                  ],
                  "name": "balanceWorker",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 528,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2698:2:5"
                  },
                  "returnParameters": {
                    "id": 533,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "2734:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2734:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2733:9:5"
                  },
                  "scope": 556,
                  "src": "2676:144:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 554,
                    "nodeType": "Block",
                    "src": "2866:115:5",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 546,
                              "name": "_requesterAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 404,
                              "src": "2899:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 547,
                              "name": "_workerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 402,
                              "src": "2918:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 550,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2942:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_WorkExchange_$556",
                                    "typeString": "contract WorkExchange"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_WorkExchange_$556",
                                    "typeString": "contract WorkExchange"
                                  }
                                ],
                                "id": 549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2934:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 548,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2934:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2934:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 545,
                            "name": "WorkExchangeEnded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "2881:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2881:67:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 553,
                        "nodeType": "EmitStatement",
                        "src": "2876:72:5"
                      }
                    ]
                  },
                  "id": 555,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "disableWorkExchange",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 543,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2854:2:5"
                  },
                  "returnParameters": {
                    "id": 544,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2866:0:5"
                  },
                  "scope": 556,
                  "src": "2826:155:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 557,
              "src": "500:2483:5"
            }
          ],
          "src": "33:2951:5"
        },
        "compiler": {
          "name": "solc",
          "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
        },
        "networks": {},
        "schemaVersion": "3.4.1",
        "updatedAt": "2021-05-18T01:40:24.372Z",
        "devdoc": {
          "kind": "dev",
          "methods": {
            "balanceRequester()": {
              "returns": {
                "_0": "the balance"
              }
            },
            "balanceWorker()": {
              "returns": {
                "_0": "the balance"
              }
            },
            "owner()": {
              "details": "Returns the address of the current owner."
            },
            "renounceOwnership()": {
              "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
            },
            "transferOwnership(address)": {
              "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
            },
            "worker()": {
              "details": "Returns the address of the current owner."
            }
          },
          "version": 1
        },
        "userdoc": {
          "kind": "user",
          "methods": {
            "balanceRequester()": {
              "notice": "Checks balance available to withdraw"
            },
            "balanceWorker()": {
              "notice": "Checks balance available to withdraw"
            },
            "sendPaymentAsRequester(address)": {
              "notice": "Receives payments from customers"
            },
            "sendPaymentAsWorker(address)": {
              "notice": "Receives payments from customers"
            },
            "withdrawAsRequester()": {
              "notice": "Withdraw funds to wallet"
            },
            "withdrawAsWorker()": {
              "notice": "Withdraw funds to wallet"
            }
          },
          "notice": "The Work Exchange contract acts as an escrow for the stake from both parties as well as facilitates the exchange of contracts between to users.  A WorkExchange is created everytime a user enters into a new deal or contract. Note: Created for every job acceptance.",
          "version": 1
        }
      },
    "WORK_RELATIONSHIP":  {
        "contractName": "WorkRelationship",
        "abi": [
          {
            "inputs": [
              {
                "internalType": "string",
                "name": "taskName",
                "type": "string"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "relationship",
                "type": "address"
              }
            ],
            "name": "WorkRelationshipCreated",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "relationship",
                "type": "address"
              }
            ],
            "name": "WorkRelationshipEnded",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "_contractStatus",
            "outputs": [
              {
                "internalType": "enum Evaluation.WorkRelationshipState",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "_contractTaskName",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "_workExchangeAddress",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address payable",
                "name": "newWorker",
                "type": "address"
              },
              {
                "components": [
                  {
                    "internalType": "string",
                    "name": "industry",
                    "type": "string"
                  },
                  {
                    "internalType": "uint256",
                    "name": "industrylevel",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "reputation",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct Evaluation.EvaluationState",
                "name": "evaluationState",
                "type": "tuple"
              },
              {
                "internalType": "bool",
                "name": "isTimeLocked",
                "type": "bool"
              }
            ],
            "name": "assignNewWorker",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address payable",
                "name": "workerBeneficiary",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "isTimeLocked",
                "type": "bool"
              }
            ],
            "name": "createWorkExchange",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "disableWorkRelationship",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "string",
                "name": "newTaskPointerHash",
                "type": "string"
              }
            ],
            "name": "updateTaskPointer",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getTaskPointer",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"taskName\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relationship\",\"type\":\"address\"}],\"name\":\"WorkRelationshipCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relationship\",\"type\":\"address\"}],\"name\":\"WorkRelationshipEnded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_contractStatus\",\"outputs\":[{\"internalType\":\"enum Evaluation.WorkRelationshipState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_contractTaskName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_workExchangeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newWorker\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"industry\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"industrylevel\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputation\",\"type\":\"uint256\"}],\"internalType\":\"struct Evaluation.EvaluationState\",\"name\":\"evaluationState\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isTimeLocked\",\"type\":\"bool\"}],\"name\":\"assignNewWorker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"workerBeneficiary\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isTimeLocked\",\"type\":\"bool\"}],\"name\":\"createWorkExchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableWorkRelationship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTaskPointer\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newTaskPointerHash\",\"type\":\"string\"}],\"name\":\"updateTaskPointer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkRelationship.sol\":\"WorkRelationship\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/MultiPartyOwneable.sol\":{\"keccak256\":\"0xd1d42422d6ffaeb158c712c1f1efb97880ad716880dba6b704399b48004e0a3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c61237ee05c824381dcb3b4df8c4c0eb8d9b58ad9c75e262233db0f98c94d6d6\",\"dweb:/ipfs/QmYpYUe7tWzg8yZdCV8FwMhJGJJ2iRbZwXPL4nxgD6kbqM\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkExchange.sol\":{\"keccak256\":\"0x42fa5a787763e08f658484517bcaeee46a5bcd0ac64c6da10b4e827d4bef2da0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2732ae081f2d674595c1968d517bab3f281c7b9e9d1de3b778f641903e53cf44\",\"dweb:/ipfs/QmZYgbEnhA5QBVAzqQ7o8fckGhkNFTnNx8rXmQWXc7Jscn\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkRelationship.sol\":{\"keccak256\":\"0x7050dca7e6bfd46461ce14f25784ffae2f2abe3d21dcd3bfbf509f5e4e67ed07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dd162acf34eed7a85660c388f12f41453ad5ee4fd5efdc50c36a00ed9a2c13c\",\"dweb:/ipfs/QmUz4xEBzSst7KVPyu39c3MDK5JbjtA5MvoJHipeELtxVp\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/Evaluation.sol\":{\"keccak256\":\"0xf2825b061136ece59f2f45b05dac7c0d1fd03b3a7bc267440ec78bc212bd36b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebd01f95d61a48dc61d0edec2d17c4106631732059ad7ebd0f88a5b41bd4ab3e\",\"dweb:/ipfs/QmYtiK47cr8duutw5dshpgXp5ETVvUgphpEx7H4RZqhsJC\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/StringUtils.sol\":{\"keccak256\":\"0x3fc98303be9aee1317ca29e93af1ec2f88568c1e526ff23899d464544f060ad6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412e266b655dc10c2fa8f874abda2933ed02636c367ca09c16d5cd8a978d8c04\",\"dweb:/ipfs/QmaXjqt1PL8pYNss2VyZiX78L4HJxWGA6T7RXWvodKcyYG\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/User.sol\":{\"keccak256\":\"0xf6f53b1360419296f37489d8c13a44e39d4178ccccfa14622de3445fe7e19879\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c5b2b5863f94d493b767babd8103d215e76423a999ad0ffc7c2432a653c868b\",\"dweb:/ipfs/QmZfU9BLvZWEaeZ8DZ84c3auojacifiYrUhKRchcyTZqy7\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/user/UserSummary.sol\":{\"keccak256\":\"0xb3fa76490c1bec2631ad5303be5e1d1469d20124d0079625b02cec8b5fdf8cd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e6f7b8e1e127674d1500ad521be17605fff6a408f6afab7820a59d24dfba6c9\",\"dweb:/ipfs/QmTN7MiedKQrm9c1gQEAHETjbQj1rGPqGSTPZ8x2qJ2knn\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/user/interface/IUserSummary.sol\":{\"keccak256\":\"0x1a9ccc700d2445a01522e75a8892f3479f5ec1019e1a7cc82648735602d6979d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd5568a290b9c71ff0ff74a1d02bc72f02bf9fa4a731baf615beab7717965e1e\",\"dweb:/ipfs/QmQPomdhm1baBVYmvdVqCZ8GJrauZ6c7FD31NUTnrPDnwa\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0x0bf0f9c9bfdea4be5d7dc3f1fccf177de0a5e7da51f96bfe5923af8ad1961a39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://475920b50f6082a8d87a140cc5528bfc98c1f3efb8e2c367f93a1e482cea24a6\",\"dweb:/ipfs/QmVEUrKPdy3vgPjjzsikKLETUBFRo6uKbrgn2zeaJt7Mcu\"]},\"@openzeppelin/contracts/utils/escrow/Escrow.sol\":{\"keccak256\":\"0xb2c66acf7d749744db1c038889794253757d471a113290e4bb1a600246166943\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60668976b064a434caef3ede6dce89744f2d18cc8ede8610706579fe4a03fba0\",\"dweb:/ipfs/QmPUnpLdjFgGrNhuMjvBz7Grn2gMrRWisAYPrn8YZVn99k\"]},\"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":{\"keccak256\":\"0xc4f3f7ac87e9debc037109ec57e4a2ca54fce83a76fbc10564a53b9ab1d63858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e451867af8f28ceed99f440f14819a8cf0fdaadb1e438272aff451ec7ce3b8f3\",\"dweb:/ipfs/QmebxoF1a7deWTjzyg82bygFzrQHFMFZnQxenShv2zB6AC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
        "bytecode": "0x608060405260405180602001604052806000815250600390805190602001906200002b92919062000137565b503480156200003957600080fd5b50604051620048f6380380620048f683398181016040528101906200005f919062000259565b6000620000716200012f60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080600290805190602001906200012792919062000137565b5050620003cf565b600033905090565b82805462000145906200033b565b90600052602060002090601f016020900481019282620001695760008555620001b5565b82601f106200018457805160ff1916838001178555620001b5565b82800160010185558215620001b5579182015b82811115620001b457825182559160200191906001019062000197565b5b509050620001c49190620001c8565b5090565b5b80821115620001e3576000816000905550600101620001c9565b5090565b6000620001fe620001f884620002d2565b6200029e565b9050828152602081018484840111156200021757600080fd5b6200022484828562000305565b509392505050565b600082601f8301126200023e57600080fd5b815162000250848260208601620001e7565b91505092915050565b6000602082840312156200026c57600080fd5b600082015167ffffffffffffffff8111156200028757600080fd5b62000295848285016200022c565b91505092915050565b6000604051905081810181811067ffffffffffffffff82111715620002c857620002c7620003a0565b5b8060405250919050565b600067ffffffffffffffff821115620002f057620002ef620003a0565b5b601f19601f8301169050602081019050919050565b60005b838110156200032557808201518184015260208101905062000308565b8381111562000335576000848401525b50505050565b600060028204905060018216806200035457607f821691505b602082108114156200036b576200036a62000371565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61451780620003df6000396000f3fe60806040523480156200001157600080fd5b5060043610620000b85760003560e01c806395cd34e3116200007b57806395cd34e3146200014d578063c34533a9146200016f578063ce079b9a146200018f578063e6e88593146200019b578063eebc6e3d14620001bd578063f2fde38b14620001df57620000b8565b8063446a02b314620000bd5780634568a94e14620000dd5780634a67f54814620000fd578063715018a6146200011f5780638da5cb5b146200012b575b600080fd5b620000db6004803603810190620000d5919062000eb3565b620001ff565b005b620000fb6004803603810190620000f5919062000ef4565b62000312565b005b6200010762000491565b6040516200011691906200124f565b60405180910390f35b620001296200052b565b005b620001356200066c565b604051620001449190620011ab565b60405180910390f35b6200015762000695565b6040516200016691906200124f565b60405180910390f35b6200018d600480360381019062000187919062000f8f565b6200072b565b005b62000199620007ca565b005b620001a5620009ce565b604051620001b4919062001232565b60405180910390f35b620001c7620009e1565b604051620001d69190620011ab565b60405180910390f35b620001fd6004803603810190620001f7919062000e87565b62000a07565b005b6200020962000bba565b73ffffffffffffffffffffffffffffffffffffffff16620002296200066c565b73ffffffffffffffffffffffffffffffffffffffff161462000282576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002799062001295565b60405180910390fd5b60006200028e6200066c565b83836040516200029e9062000c62565b620002ac93929190620011c8565b604051809103906000f080158015620002c9573d6000803e3d6000fd5b50905080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6200031c62000bba565b73ffffffffffffffffffffffffffffffffffffffff166200033c6200066c565b73ffffffffffffffffffffffffffffffffffffffff161462000395576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200038c9062001295565b60405180910390fd5b6000620003a3848462000bc2565b90506001151581151514620003b757600080fd5b3073ffffffffffffffffffffffffffffffffffffffff1663446a02b385846040518363ffffffff1660e01b8152600401620003f492919062001205565b600060405180830381600087803b1580156200040f57600080fd5b505af115801562000424573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff16620004496200066c565b73ffffffffffffffffffffffffffffffffffffffff167f1f0aa61cbde59114f62be2daa5b4a6478322c4824c9523d355ff6a1ad24207c560405160405180910390a350505050565b606060038054620004a2906200143b565b80601f0160208091040260200160405190810160405280929190818152602001828054620004d0906200143b565b8015620005215780601f10620004f55761010080835404028352916020019162000521565b820191906000526020600020905b8154815290600101906020018083116200050357829003601f168201915b5050505050905090565b6200053562000bba565b73ffffffffffffffffffffffffffffffffffffffff16620005556200066c565b73ffffffffffffffffffffffffffffffffffffffff1614620005ae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005a59062001295565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60028054620006a4906200143b565b80601f0160208091040260200160405190810160405280929190818152602001828054620006d2906200143b565b8015620007235780601f10620006f75761010080835404028352916020019162000723565b820191906000526020600020905b8154815290600101906020018083116200070557829003601f168201915b505050505081565b6200073562000bba565b73ffffffffffffffffffffffffffffffffffffffff16620007556200066c565b73ffffffffffffffffffffffffffffffffffffffff1614620007ae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620007a59062001295565b60405180910390fd5b8060039080519060200190620007c692919062000c70565b5050565b620007d462000bba565b73ffffffffffffffffffffffffffffffffffffffff16620007f46200066c565b73ffffffffffffffffffffffffffffffffffffffff16146200084d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620008449062001295565b60405180910390fd5b6004600681111562000888577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060149054906101000a900460ff166006811115620008d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14806200095f57506004600681111562000914577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060149054906101000a900460ff1660068111156200095d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b6200096957600080fd5b3073ffffffffffffffffffffffffffffffffffffffff166200098a6200066c565b73ffffffffffffffffffffffffffffffffffffffff167f9f9ae6282c58d4c8aeebc441331043c250c011c89bdc9a917ba54702f0c36a2960405160405180910390a3565b600060149054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b62000a1162000bba565b73ffffffffffffffffffffffffffffffffffffffff1662000a316200066c565b73ffffffffffffffffffffffffffffffffffffffff161462000a8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000a819062001295565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000afd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000af49062001273565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000808373ffffffffffffffffffffffffffffffffffffffff16635d5f221f846040518263ffffffff1660e01b815260040162000c009190620012b7565b602060405180830381600087803b15801562000c1b57600080fd5b505af115801562000c30573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c56919062000f63565b90508091505092915050565b612f53806200158f83390190565b82805462000c7e906200143b565b90600052602060002090601f01602090048101928262000ca2576000855562000cee565b82601f1062000cbd57805160ff191683800117855562000cee565b8280016001018555821562000cee579182015b8281111562000ced57825182559160200191906001019062000cd0565b5b50905062000cfd919062000d01565b5090565b5b8082111562000d1c57600081600090555060010162000d02565b5090565b600062000d3762000d31846200130f565b620012db565b90508281526020810184848401111562000d5057600080fd5b62000d5d848285620013f6565b509392505050565b60008135905062000d768162001526565b92915050565b60008135905062000d8d8162001540565b92915050565b60008135905062000da4816200155a565b92915050565b60008151905062000dbb816200155a565b92915050565b600082601f83011262000dd357600080fd5b813562000de584826020860162000d20565b91505092915050565b60006060828403121562000e0157600080fd5b62000e0d6060620012db565b9050600082013567ffffffffffffffff81111562000e2a57600080fd5b62000e388482850162000dc1565b600083015250602062000e4e8482850162000e70565b602083015250604062000e648482850162000e70565b60408301525092915050565b60008135905062000e818162001574565b92915050565b60006020828403121562000e9a57600080fd5b600062000eaa8482850162000d65565b91505092915050565b6000806040838503121562000ec757600080fd5b600062000ed78582860162000d7c565b925050602062000eea8582860162000d93565b9150509250929050565b60008060006060848603121562000f0a57600080fd5b600062000f1a8682870162000d7c565b935050602084013567ffffffffffffffff81111562000f3857600080fd5b62000f468682870162000dee565b925050604062000f598682870162000d93565b9150509250925092565b60006020828403121562000f7657600080fd5b600062000f868482850162000daa565b91505092915050565b60006020828403121562000fa257600080fd5b600082013567ffffffffffffffff81111562000fbd57600080fd5b62000fcb8482850162000dc1565b91505092915050565b62000fdf8162001383565b82525050565b62000ff0816200136f565b82525050565b620010018162001397565b82525050565b6200101281620013e2565b82525050565b6000620010258262001342565b6200103181856200134d565b93506200104381856020860162001405565b6200104e81620014fe565b840191505092915050565b6000620010668262001342565b6200107281856200135e565b93506200108481856020860162001405565b6200108f81620014fe565b840191505092915050565b6000620010a96026836200135e565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000620011116020836200135e565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000606083016000830151848203600086015262001163828262001018565b91505060208301516200117a60208601826200119a565b5060408301516200118f60408601826200119a565b508091505092915050565b620011a581620013d8565b82525050565b6000602082019050620011c2600083018462000fe5565b92915050565b6000606082019050620011df600083018662000fd4565b620011ee602083018562000fd4565b620011fd604083018462000ff6565b949350505050565b60006040820190506200121c600083018562000fd4565b6200122b602083018462000ff6565b9392505050565b600060208201905062001249600083018462001007565b92915050565b600060208201905081810360008301526200126b818462001059565b905092915050565b600060208201905081810360008301526200128e816200109a565b9050919050565b60006020820190508181036000830152620012b08162001102565b9050919050565b60006020820190508181036000830152620012d3818462001144565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715620013055762001304620014cf565b5b8060405250919050565b600067ffffffffffffffff8211156200132d576200132c620014cf565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006200137c82620013b8565b9050919050565b60006200139082620013b8565b9050919050565b60008115159050919050565b6000819050620013b3826200150f565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620013ef82620013a3565b9050919050565b82818337600083830152505050565b60005b838110156200142557808201518184015260208101905062001408565b8381111562001435576000848401525b50505050565b600060028204905060018216806200145457607f821691505b602082108114156200146b576200146a620014a0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6007811062001523576200152262001471565b5b50565b62001531816200136f565b81146200153d57600080fd5b50565b6200154b8162001383565b81146200155757600080fd5b50565b620015658162001397565b81146200157157600080fd5b50565b6200157f81620013d8565b81146200158b57600080fd5b5056fe60806040523480156200001157600080fd5b5060405162002f5338038062002f53833981810160405281019062000037919062000374565b8160006200004a6200033060201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050826040516200015b9062000338565b62000167919062000409565b604051809103906000f08015801562000184573d6000803e3d6000fd5b50600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081604051620001d49062000338565b620001e0919062000409565b604051809103906000f080158015620001fd573d6000803e3d6000fd5b50600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f4dc5f0070db7372507a32b040d6e05e71b6aef1067ae5203e2ffefa98ca4cac2306040516200031f9190620003ec565b60405180910390a3505050620004ae565b600033905090565b611abf806200149483390190565b60008151905062000357816200047a565b92915050565b6000815190506200036e8162000494565b92915050565b6000806000606084860312156200038a57600080fd5b60006200039a8682870162000346565b9350506020620003ad8682870162000346565b9250506040620003c0868287016200035d565b9150509250925092565b620003d5816200043a565b82525050565b620003e68162000426565b82525050565b6000602082019050620004036000830184620003db565b92915050565b6000602082019050620004206000830184620003ca565b92915050565b600062000433826200045a565b9050919050565b600062000447826200045a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b62000485816200043a565b81146200049157600080fd5b50565b6200049f816200044e565b8114620004ab57600080fd5b50565b610fd680620004be6000396000f3fe6080604052600436106100915760003560e01c80638428dccc116100595780638428dccc146101365780638da5cb5b1461015257806398da87b41461017d578063b48691e014610194578063f2fde38b146101bf57610091565b806303f5d25b146100965780634d547ada146100ad5780636628c1d1146100d85780637053e7e0146100f4578063715018a61461011f575b600080fd5b3480156100a257600080fd5b506100ab6101e8565b005b3480156100b957600080fd5b506100c26102e8565b6040516100cf9190610e3a565b60405180910390f35b6100f260048036038101906100ed9190610d43565b610312565b005b34801561010057600080fd5b5061010961044a565b6040516101169190610eab565b60405180910390f35b34801561012b57600080fd5b50610134610617565b005b610150600480360381019061014b9190610d43565b610754565b005b34801561015e57600080fd5b5061016761088c565b6040516101749190610e3a565b60405180910390f35b34801561018957600080fd5b506101926108b5565b005b3480156101a057600080fd5b506101a96109b5565b6040516101b69190610eab565b60405180910390f35b3480156101cb57600080fd5b506101e660048036038101906101e19190610d1a565b610b82565b005b6101f0610cbe565b73ffffffffffffffffffffffffffffffffffffffff1661020e61088c565b73ffffffffffffffffffffffffffffffffffffffff1614610264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025b90610e8b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102ce57600080fd5b505af11580156102e2573d6000803e3d6000fd5b50505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61031a610cbe565b73ffffffffffffffffffffffffffffffffffffffff1661033861088c565b73ffffffffffffffffffffffffffffffffffffffff161461038e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038590610e8b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff1660e01b81526004016103e99190610e70565b600060405180830381600087803b15801561040357600080fd5b505af1158015610417573d6000803e3d6000fd5b505050507f7a15267f0526551b50e6c288544c1ac87f16e7837002acfb601cf247ec718d4e60405160405180910390a150565b6000610454610cbe565b73ffffffffffffffffffffffffffffffffffffffff1661047261088c565b73ffffffffffffffffffffffffffffffffffffffff16146104c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bf90610e8b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3a9db1a600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338af3eed6040518163ffffffff1660e01b815260040160206040518083038186803b15801561056e57600080fd5b505afa158015610582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a69190610d6c565b6040518263ffffffff1660e01b81526004016105c29190610e55565b60206040518083038186803b1580156105da57600080fd5b505afa1580156105ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106129190610d95565b905090565b61061f6102e8565b73ffffffffffffffffffffffffffffffffffffffff1661063d6102e8565b73ffffffffffffffffffffffffffffffffffffffff1614610693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068a90610e8b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61075c610cbe565b73ffffffffffffffffffffffffffffffffffffffff1661077a61088c565b73ffffffffffffffffffffffffffffffffffffffff16146107d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c790610e8b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff1660e01b815260040161082b9190610e70565b600060405180830381600087803b15801561084557600080fd5b505af1158015610859573d6000803e3d6000fd5b505050507fb24b6304585135966b8217241802ddd6fe969a26cc5f252ebe153be87a6c007a60405160405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6108bd610cbe565b73ffffffffffffffffffffffffffffffffffffffff166108db61088c565b73ffffffffffffffffffffffffffffffffffffffff1614610931576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092890610e8b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561099b57600080fd5b505af11580156109af573d6000803e3d6000fd5b50505050565b60006109bf610cbe565b73ffffffffffffffffffffffffffffffffffffffff166109dd61088c565b73ffffffffffffffffffffffffffffffffffffffff1614610a33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2a90610e8b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3a9db1a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338af3eed6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ad957600080fd5b505afa158015610aed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b119190610d6c565b6040518263ffffffff1660e01b8152600401610b2d9190610e55565b60206040518083038186803b158015610b4557600080fd5b505afa158015610b59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7d9190610d95565b905090565b610b8a610cbe565b73ffffffffffffffffffffffffffffffffffffffff16610ba861088c565b73ffffffffffffffffffffffffffffffffffffffff1614610bfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf590610e8b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600081359050610cd581610f5b565b92915050565b600081359050610cea81610f72565b92915050565b600081519050610cff81610f72565b92915050565b600081519050610d1481610f89565b92915050565b600060208284031215610d2c57600080fd5b6000610d3a84828501610cc6565b91505092915050565b600060208284031215610d5557600080fd5b6000610d6384828501610cdb565b91505092915050565b600060208284031215610d7e57600080fd5b6000610d8c84828501610cf0565b91505092915050565b600060208284031215610da757600080fd5b6000610db584828501610d05565b91505092915050565b610dc781610f25565b82525050565b610dd681610ee9565b82525050565b610de581610ed7565b82525050565b6000610df8602083610ec6565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b610e3481610f1b565b82525050565b6000602082019050610e4f6000830184610ddc565b92915050565b6000602082019050610e6a6000830184610dbe565b92915050565b6000602082019050610e856000830184610dcd565b92915050565b60006020820190508181036000830152610ea481610deb565b9050919050565b6000602082019050610ec06000830184610e2b565b92915050565b600082825260208201905092915050565b6000610ee282610efb565b9050919050565b6000610ef482610efb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610f3082610f37565b9050919050565b6000610f4282610f49565b9050919050565b6000610f5482610efb565b9050919050565b610f6481610ed7565b8114610f6f57600080fd5b50565b610f7b81610ee9565b8114610f8657600080fd5b50565b610f9281610f1b565b8114610f9d57600080fd5b5056fea26469706673582212207c142497a860f391e45ca391f5d88521ed141cfef4b173a4508c522055441b0c64736f6c6343000800003360a06040523480156200001157600080fd5b5060405162001abf38038062001abf833981810160405281019062000037919062000209565b600062000049620001ea60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200015a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000151906200029d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250506000600260006101000a81548160ff02191690836002811115620001de577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550506200031e565b600033905090565b600081519050620002038162000304565b92915050565b6000602082840312156200021c57600080fd5b60006200022c84828501620001f2565b91505092915050565b600062000244602d83620002bf565b91507f526566756e64457363726f773a2062656e65666963696172792069732074686560008301527f207a65726f2061646472657373000000000000000000000000000000000000006020830152604082019050919050565b60006020820190508181036000830152620002b88162000235565b9050919050565b600082825260208201905092915050565b6000620002dd82620002e4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200030f81620002d0565b81146200031b57600080fd5b50565b60805160601c6117826200033d600039600061027501526117826000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101825780639af6549a146101ad578063c19d93fb146101c4578063e3a9db1a146101ef578063f2fde38b1461022c578063f340fa0114610255576100a7565b806338af3eed146100ac57806343d726d6146100d757806351cff8d9146100ee578063685ca19414610117578063715018a6146101545780638c52dc411461016b575b600080fd5b3480156100b857600080fd5b506100c1610271565b6040516100ce919061142f565b60405180910390f35b3480156100e357600080fd5b506100ec610299565b005b3480156100fa57600080fd5b5061011560048036038101906101109190611027565b61044d565b005b34801561012357600080fd5b5061013e60048036038101906101399190610ffe565b6104a1565b60405161014b919061144a565b60405180910390f35b34801561016057600080fd5b50610169610525565b005b34801561017757600080fd5b5061018061065f565b005b34801561018e57600080fd5b50610197610814565b6040516101a49190611414565b60405180910390f35b3480156101b957600080fd5b506101c261083d565b005b3480156101d057600080fd5b506101d9610928565b6040516101e69190611465565b60405180910390f35b3480156101fb57600080fd5b5061021660048036038101906102119190610ffe565b61093f565b60405161022391906115a0565b60405180910390f35b34801561023857600080fd5b50610253600480360381019061024e9190610ffe565b610988565b005b61026f600480360381019061026a9190610ffe565b610b31565b005b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6102a1610bf7565b73ffffffffffffffffffffffffffffffffffffffff166102bf610814565b73ffffffffffffffffffffffffffffffffffffffff1614610315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030c90611560565b60405180910390fd5b6000600281111561034f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610357610928565b600281111561038f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146103cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c690611540565b60405180910390fd5b60028060006101000a81548160ff0219169083600281111561041a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f60405160405180910390a1565b610456816104a1565b610495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048c90611520565b60405180910390fd5b61049e81610bff565b50565b6000600160028111156104dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6104e5610928565b600281111561051d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b149050919050565b61052d610bf7565b73ffffffffffffffffffffffffffffffffffffffff1661054b610814565b73ffffffffffffffffffffffffffffffffffffffff16146105a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059890611560565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610667610bf7565b73ffffffffffffffffffffffffffffffffffffffff16610685610814565b73ffffffffffffffffffffffffffffffffffffffff16146106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d290611560565b60405180910390fd5b60006002811115610715577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61071d610928565b6002811115610755577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078c90611580565b60405180910390fd5b6001600260006101000a81548160ff021916908360028111156107e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600280811115610876577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61087e610928565b60028111156108b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed90611480565b60405180910390fd5b61092647610902610271565b73ffffffffffffffffffffffffffffffffffffffff16610d7f90919063ffffffff16565b565b6000600260009054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610990610bf7565b73ffffffffffffffffffffffffffffffffffffffff166109ae610814565b73ffffffffffffffffffffffffffffffffffffffff1614610a04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fb90611560565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6b906114a0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006002811115610b6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610b73610928565b6002811115610bab577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610beb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be290611500565b60405180910390fd5b610bf481610e73565b50565b600033905090565b610c07610bf7565b73ffffffffffffffffffffffffffffffffffffffff16610c25610814565b73ffffffffffffffffffffffffffffffffffffffff1614610c7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7290611560565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d2d818373ffffffffffffffffffffffffffffffffffffffff16610d7f90919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d582604051610d7391906115a0565b60405180910390a25050565b80471015610dc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db9906114e0565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610de8906113ff565b60006040518083038185875af1925050503d8060008114610e25576040519150601f19603f3d011682016040523d82523d6000602084013e610e2a565b606091505b5050905080610e6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e65906114c0565b60405180910390fd5b505050565b610e7b610bf7565b73ffffffffffffffffffffffffffffffffffffffff16610e99610814565b73ffffffffffffffffffffffffffffffffffffffff1614610eef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee690611560565b60405180910390fd5b600034905080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f3f91906115d7565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c482604051610fc891906115a0565b60405180910390a25050565b600081359050610fe38161171e565b92915050565b600081359050610ff881611735565b92915050565b60006020828403121561101057600080fd5b600061101e84828501610fd4565b91505092915050565b60006020828403121561103957600080fd5b600061104784828501610fe9565b91505092915050565b6110598161163f565b82525050565b6110688161162d565b82525050565b61107781611651565b82525050565b6110868161169a565b82525050565b60006110996038836115c6565b91507f526566756e64457363726f773a2062656e65666963696172792063616e206f6e60008301527f6c79207769746864726177207768696c6520636c6f73656400000000000000006020830152604082019050919050565b60006110ff6026836115c6565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611165603a836115c6565b91507f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008301527f6563697069656e74206d617920686176652072657665727465640000000000006020830152604082019050919050565b60006111cb601d836115c6565b91507f416464726573733a20696e73756666696369656e742062616c616e63650000006000830152602082019050919050565b600061120b602b836115c6565b91507f526566756e64457363726f773a2063616e206f6e6c79206465706f736974207760008301527f68696c65206163746976650000000000000000000000000000000000000000006020830152604082019050919050565b60006112716033836115c6565b91507f436f6e646974696f6e616c457363726f773a207061796565206973206e6f742060008301527f616c6c6f77656420746f207769746864726177000000000000000000000000006020830152604082019050919050565b60006112d76029836115c6565b91507f526566756e64457363726f773a2063616e206f6e6c7920636c6f73652077686960008301527f6c652061637469766500000000000000000000000000000000000000000000006020830152604082019050919050565b600061133d6020836115c6565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600061137d6000836115bb565b9150600082019050919050565b60006113976032836115c6565b91507f526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726560008301527f66756e6473207768696c652061637469766500000000000000000000000000006020830152604082019050919050565b6113f981611690565b82525050565b600061140a82611370565b9150819050919050565b6000602082019050611429600083018461105f565b92915050565b60006020820190506114446000830184611050565b92915050565b600060208201905061145f600083018461106e565b92915050565b600060208201905061147a600083018461107d565b92915050565b600060208201905081810360008301526114998161108c565b9050919050565b600060208201905081810360008301526114b9816110f2565b9050919050565b600060208201905081810360008301526114d981611158565b9050919050565b600060208201905081810360008301526114f9816111be565b9050919050565b60006020820190508181036000830152611519816111fe565b9050919050565b6000602082019050818103600083015261153981611264565b9050919050565b60006020820190508181036000830152611559816112ca565b9050919050565b6000602082019050818103600083015261157981611330565b9050919050565b600060208201905081810360008301526115998161138a565b9050919050565b60006020820190506115b560008301846113f0565b92915050565b600081905092915050565b600082825260208201905092915050565b60006115e282611690565b91506115ed83611690565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611622576116216116ac565b5b828201905092915050565b600061163882611670565b9050919050565b600061164a82611670565b9050919050565b60008115159050919050565b600081905061166b8261170a565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116a58261165d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061171b5761171a6116db565b5b50565b6117278161162d565b811461173257600080fd5b50565b61173e8161163f565b811461174957600080fd5b5056fea264697066735822122078d3b2feccc4b4f33ca351bc6e8859bd4b8e9943dd6565520d837640b03983e564736f6c63430008000033a26469706673582212207c2da332a65de278d3a9dd5c55067463ecdfbe72bd54879e47cbc0a661dbe3e864736f6c63430008000033",
        "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000b85760003560e01c806395cd34e3116200007b57806395cd34e3146200014d578063c34533a9146200016f578063ce079b9a146200018f578063e6e88593146200019b578063eebc6e3d14620001bd578063f2fde38b14620001df57620000b8565b8063446a02b314620000bd5780634568a94e14620000dd5780634a67f54814620000fd578063715018a6146200011f5780638da5cb5b146200012b575b600080fd5b620000db6004803603810190620000d5919062000eb3565b620001ff565b005b620000fb6004803603810190620000f5919062000ef4565b62000312565b005b6200010762000491565b6040516200011691906200124f565b60405180910390f35b620001296200052b565b005b620001356200066c565b604051620001449190620011ab565b60405180910390f35b6200015762000695565b6040516200016691906200124f565b60405180910390f35b6200018d600480360381019062000187919062000f8f565b6200072b565b005b62000199620007ca565b005b620001a5620009ce565b604051620001b4919062001232565b60405180910390f35b620001c7620009e1565b604051620001d69190620011ab565b60405180910390f35b620001fd6004803603810190620001f7919062000e87565b62000a07565b005b6200020962000bba565b73ffffffffffffffffffffffffffffffffffffffff16620002296200066c565b73ffffffffffffffffffffffffffffffffffffffff161462000282576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002799062001295565b60405180910390fd5b60006200028e6200066c565b83836040516200029e9062000c62565b620002ac93929190620011c8565b604051809103906000f080158015620002c9573d6000803e3d6000fd5b50905080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6200031c62000bba565b73ffffffffffffffffffffffffffffffffffffffff166200033c6200066c565b73ffffffffffffffffffffffffffffffffffffffff161462000395576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200038c9062001295565b60405180910390fd5b6000620003a3848462000bc2565b90506001151581151514620003b757600080fd5b3073ffffffffffffffffffffffffffffffffffffffff1663446a02b385846040518363ffffffff1660e01b8152600401620003f492919062001205565b600060405180830381600087803b1580156200040f57600080fd5b505af115801562000424573d6000803e3d6000fd5b505050503073ffffffffffffffffffffffffffffffffffffffff16620004496200066c565b73ffffffffffffffffffffffffffffffffffffffff167f1f0aa61cbde59114f62be2daa5b4a6478322c4824c9523d355ff6a1ad24207c560405160405180910390a350505050565b606060038054620004a2906200143b565b80601f0160208091040260200160405190810160405280929190818152602001828054620004d0906200143b565b8015620005215780601f10620004f55761010080835404028352916020019162000521565b820191906000526020600020905b8154815290600101906020018083116200050357829003601f168201915b5050505050905090565b6200053562000bba565b73ffffffffffffffffffffffffffffffffffffffff16620005556200066c565b73ffffffffffffffffffffffffffffffffffffffff1614620005ae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005a59062001295565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60028054620006a4906200143b565b80601f0160208091040260200160405190810160405280929190818152602001828054620006d2906200143b565b8015620007235780601f10620006f75761010080835404028352916020019162000723565b820191906000526020600020905b8154815290600101906020018083116200070557829003601f168201915b505050505081565b6200073562000bba565b73ffffffffffffffffffffffffffffffffffffffff16620007556200066c565b73ffffffffffffffffffffffffffffffffffffffff1614620007ae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620007a59062001295565b60405180910390fd5b8060039080519060200190620007c692919062000c70565b5050565b620007d462000bba565b73ffffffffffffffffffffffffffffffffffffffff16620007f46200066c565b73ffffffffffffffffffffffffffffffffffffffff16146200084d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620008449062001295565b60405180910390fd5b6004600681111562000888577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060149054906101000a900460ff166006811115620008d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14806200095f57506004600681111562000914577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060149054906101000a900460ff1660068111156200095d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b6200096957600080fd5b3073ffffffffffffffffffffffffffffffffffffffff166200098a6200066c565b73ffffffffffffffffffffffffffffffffffffffff167f9f9ae6282c58d4c8aeebc441331043c250c011c89bdc9a917ba54702f0c36a2960405160405180910390a3565b600060149054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b62000a1162000bba565b73ffffffffffffffffffffffffffffffffffffffff1662000a316200066c565b73ffffffffffffffffffffffffffffffffffffffff161462000a8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000a819062001295565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000afd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000af49062001273565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000808373ffffffffffffffffffffffffffffffffffffffff16635d5f221f846040518263ffffffff1660e01b815260040162000c009190620012b7565b602060405180830381600087803b15801562000c1b57600080fd5b505af115801562000c30573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c56919062000f63565b90508091505092915050565b612f53806200158f83390190565b82805462000c7e906200143b565b90600052602060002090601f01602090048101928262000ca2576000855562000cee565b82601f1062000cbd57805160ff191683800117855562000cee565b8280016001018555821562000cee579182015b8281111562000ced57825182559160200191906001019062000cd0565b5b50905062000cfd919062000d01565b5090565b5b8082111562000d1c57600081600090555060010162000d02565b5090565b600062000d3762000d31846200130f565b620012db565b90508281526020810184848401111562000d5057600080fd5b62000d5d848285620013f6565b509392505050565b60008135905062000d768162001526565b92915050565b60008135905062000d8d8162001540565b92915050565b60008135905062000da4816200155a565b92915050565b60008151905062000dbb816200155a565b92915050565b600082601f83011262000dd357600080fd5b813562000de584826020860162000d20565b91505092915050565b60006060828403121562000e0157600080fd5b62000e0d6060620012db565b9050600082013567ffffffffffffffff81111562000e2a57600080fd5b62000e388482850162000dc1565b600083015250602062000e4e8482850162000e70565b602083015250604062000e648482850162000e70565b60408301525092915050565b60008135905062000e818162001574565b92915050565b60006020828403121562000e9a57600080fd5b600062000eaa8482850162000d65565b91505092915050565b6000806040838503121562000ec757600080fd5b600062000ed78582860162000d7c565b925050602062000eea8582860162000d93565b9150509250929050565b60008060006060848603121562000f0a57600080fd5b600062000f1a8682870162000d7c565b935050602084013567ffffffffffffffff81111562000f3857600080fd5b62000f468682870162000dee565b925050604062000f598682870162000d93565b9150509250925092565b60006020828403121562000f7657600080fd5b600062000f868482850162000daa565b91505092915050565b60006020828403121562000fa257600080fd5b600082013567ffffffffffffffff81111562000fbd57600080fd5b62000fcb8482850162000dc1565b91505092915050565b62000fdf8162001383565b82525050565b62000ff0816200136f565b82525050565b620010018162001397565b82525050565b6200101281620013e2565b82525050565b6000620010258262001342565b6200103181856200134d565b93506200104381856020860162001405565b6200104e81620014fe565b840191505092915050565b6000620010668262001342565b6200107281856200135e565b93506200108481856020860162001405565b6200108f81620014fe565b840191505092915050565b6000620010a96026836200135e565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000620011116020836200135e565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000606083016000830151848203600086015262001163828262001018565b91505060208301516200117a60208601826200119a565b5060408301516200118f60408601826200119a565b508091505092915050565b620011a581620013d8565b82525050565b6000602082019050620011c2600083018462000fe5565b92915050565b6000606082019050620011df600083018662000fd4565b620011ee602083018562000fd4565b620011fd604083018462000ff6565b949350505050565b60006040820190506200121c600083018562000fd4565b6200122b602083018462000ff6565b9392505050565b600060208201905062001249600083018462001007565b92915050565b600060208201905081810360008301526200126b818462001059565b905092915050565b600060208201905081810360008301526200128e816200109a565b9050919050565b60006020820190508181036000830152620012b08162001102565b9050919050565b60006020820190508181036000830152620012d3818462001144565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715620013055762001304620014cf565b5b8060405250919050565b600067ffffffffffffffff8211156200132d576200132c620014cf565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006200137c82620013b8565b9050919050565b60006200139082620013b8565b9050919050565b60008115159050919050565b6000819050620013b3826200150f565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620013ef82620013a3565b9050919050565b82818337600083830152505050565b60005b838110156200142557808201518184015260208101905062001408565b8381111562001435576000848401525b50505050565b600060028204905060018216806200145457607f821691505b602082108114156200146b576200146a620014a0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6007811062001523576200152262001471565b5b50565b62001531816200136f565b81146200153d57600080fd5b50565b6200154b8162001383565b81146200155757600080fd5b50565b620015658162001397565b81146200157157600080fd5b50565b6200157f81620013d8565b81146200158b57600080fd5b5056fe60806040523480156200001157600080fd5b5060405162002f5338038062002f53833981810160405281019062000037919062000374565b8160006200004a6200033060201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050826040516200015b9062000338565b62000167919062000409565b604051809103906000f08015801562000184573d6000803e3d6000fd5b50600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081604051620001d49062000338565b620001e0919062000409565b604051809103906000f080158015620001fd573d6000803e3d6000fd5b50600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f4dc5f0070db7372507a32b040d6e05e71b6aef1067ae5203e2ffefa98ca4cac2306040516200031f9190620003ec565b60405180910390a3505050620004ae565b600033905090565b611abf806200149483390190565b60008151905062000357816200047a565b92915050565b6000815190506200036e8162000494565b92915050565b6000806000606084860312156200038a57600080fd5b60006200039a8682870162000346565b9350506020620003ad8682870162000346565b9250506040620003c0868287016200035d565b9150509250925092565b620003d5816200043a565b82525050565b620003e68162000426565b82525050565b6000602082019050620004036000830184620003db565b92915050565b6000602082019050620004206000830184620003ca565b92915050565b600062000433826200045a565b9050919050565b600062000447826200045a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b62000485816200043a565b81146200049157600080fd5b50565b6200049f816200044e565b8114620004ab57600080fd5b50565b610fd680620004be6000396000f3fe6080604052600436106100915760003560e01c80638428dccc116100595780638428dccc146101365780638da5cb5b1461015257806398da87b41461017d578063b48691e014610194578063f2fde38b146101bf57610091565b806303f5d25b146100965780634d547ada146100ad5780636628c1d1146100d85780637053e7e0146100f4578063715018a61461011f575b600080fd5b3480156100a257600080fd5b506100ab6101e8565b005b3480156100b957600080fd5b506100c26102e8565b6040516100cf9190610e3a565b60405180910390f35b6100f260048036038101906100ed9190610d43565b610312565b005b34801561010057600080fd5b5061010961044a565b6040516101169190610eab565b60405180910390f35b34801561012b57600080fd5b50610134610617565b005b610150600480360381019061014b9190610d43565b610754565b005b34801561015e57600080fd5b5061016761088c565b6040516101749190610e3a565b60405180910390f35b34801561018957600080fd5b506101926108b5565b005b3480156101a057600080fd5b506101a96109b5565b6040516101b69190610eab565b60405180910390f35b3480156101cb57600080fd5b506101e660048036038101906101e19190610d1a565b610b82565b005b6101f0610cbe565b73ffffffffffffffffffffffffffffffffffffffff1661020e61088c565b73ffffffffffffffffffffffffffffffffffffffff1614610264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025b90610e8b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102ce57600080fd5b505af11580156102e2573d6000803e3d6000fd5b50505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61031a610cbe565b73ffffffffffffffffffffffffffffffffffffffff1661033861088c565b73ffffffffffffffffffffffffffffffffffffffff161461038e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038590610e8b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff1660e01b81526004016103e99190610e70565b600060405180830381600087803b15801561040357600080fd5b505af1158015610417573d6000803e3d6000fd5b505050507f7a15267f0526551b50e6c288544c1ac87f16e7837002acfb601cf247ec718d4e60405160405180910390a150565b6000610454610cbe565b73ffffffffffffffffffffffffffffffffffffffff1661047261088c565b73ffffffffffffffffffffffffffffffffffffffff16146104c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bf90610e8b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3a9db1a600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338af3eed6040518163ffffffff1660e01b815260040160206040518083038186803b15801561056e57600080fd5b505afa158015610582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a69190610d6c565b6040518263ffffffff1660e01b81526004016105c29190610e55565b60206040518083038186803b1580156105da57600080fd5b505afa1580156105ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106129190610d95565b905090565b61061f6102e8565b73ffffffffffffffffffffffffffffffffffffffff1661063d6102e8565b73ffffffffffffffffffffffffffffffffffffffff1614610693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068a90610e8b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61075c610cbe565b73ffffffffffffffffffffffffffffffffffffffff1661077a61088c565b73ffffffffffffffffffffffffffffffffffffffff16146107d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c790610e8b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff1660e01b815260040161082b9190610e70565b600060405180830381600087803b15801561084557600080fd5b505af1158015610859573d6000803e3d6000fd5b505050507fb24b6304585135966b8217241802ddd6fe969a26cc5f252ebe153be87a6c007a60405160405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6108bd610cbe565b73ffffffffffffffffffffffffffffffffffffffff166108db61088c565b73ffffffffffffffffffffffffffffffffffffffff1614610931576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092890610e8b565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561099b57600080fd5b505af11580156109af573d6000803e3d6000fd5b50505050565b60006109bf610cbe565b73ffffffffffffffffffffffffffffffffffffffff166109dd61088c565b73ffffffffffffffffffffffffffffffffffffffff1614610a33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2a90610e8b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3a9db1a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338af3eed6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ad957600080fd5b505afa158015610aed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b119190610d6c565b6040518263ffffffff1660e01b8152600401610b2d9190610e55565b60206040518083038186803b158015610b4557600080fd5b505afa158015610b59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7d9190610d95565b905090565b610b8a610cbe565b73ffffffffffffffffffffffffffffffffffffffff16610ba861088c565b73ffffffffffffffffffffffffffffffffffffffff1614610bfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf590610e8b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600081359050610cd581610f5b565b92915050565b600081359050610cea81610f72565b92915050565b600081519050610cff81610f72565b92915050565b600081519050610d1481610f89565b92915050565b600060208284031215610d2c57600080fd5b6000610d3a84828501610cc6565b91505092915050565b600060208284031215610d5557600080fd5b6000610d6384828501610cdb565b91505092915050565b600060208284031215610d7e57600080fd5b6000610d8c84828501610cf0565b91505092915050565b600060208284031215610da757600080fd5b6000610db584828501610d05565b91505092915050565b610dc781610f25565b82525050565b610dd681610ee9565b82525050565b610de581610ed7565b82525050565b6000610df8602083610ec6565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b610e3481610f1b565b82525050565b6000602082019050610e4f6000830184610ddc565b92915050565b6000602082019050610e6a6000830184610dbe565b92915050565b6000602082019050610e856000830184610dcd565b92915050565b60006020820190508181036000830152610ea481610deb565b9050919050565b6000602082019050610ec06000830184610e2b565b92915050565b600082825260208201905092915050565b6000610ee282610efb565b9050919050565b6000610ef482610efb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610f3082610f37565b9050919050565b6000610f4282610f49565b9050919050565b6000610f5482610efb565b9050919050565b610f6481610ed7565b8114610f6f57600080fd5b50565b610f7b81610ee9565b8114610f8657600080fd5b50565b610f9281610f1b565b8114610f9d57600080fd5b5056fea26469706673582212207c142497a860f391e45ca391f5d88521ed141cfef4b173a4508c522055441b0c64736f6c6343000800003360a06040523480156200001157600080fd5b5060405162001abf38038062001abf833981810160405281019062000037919062000209565b600062000049620001ea60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200015a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000151906200029d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250506000600260006101000a81548160ff02191690836002811115620001de577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550506200031e565b600033905090565b600081519050620002038162000304565b92915050565b6000602082840312156200021c57600080fd5b60006200022c84828501620001f2565b91505092915050565b600062000244602d83620002bf565b91507f526566756e64457363726f773a2062656e65666963696172792069732074686560008301527f207a65726f2061646472657373000000000000000000000000000000000000006020830152604082019050919050565b60006020820190508181036000830152620002b88162000235565b9050919050565b600082825260208201905092915050565b6000620002dd82620002e4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200030f81620002d0565b81146200031b57600080fd5b50565b60805160601c6117826200033d600039600061027501526117826000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101825780639af6549a146101ad578063c19d93fb146101c4578063e3a9db1a146101ef578063f2fde38b1461022c578063f340fa0114610255576100a7565b806338af3eed146100ac57806343d726d6146100d757806351cff8d9146100ee578063685ca19414610117578063715018a6146101545780638c52dc411461016b575b600080fd5b3480156100b857600080fd5b506100c1610271565b6040516100ce919061142f565b60405180910390f35b3480156100e357600080fd5b506100ec610299565b005b3480156100fa57600080fd5b5061011560048036038101906101109190611027565b61044d565b005b34801561012357600080fd5b5061013e60048036038101906101399190610ffe565b6104a1565b60405161014b919061144a565b60405180910390f35b34801561016057600080fd5b50610169610525565b005b34801561017757600080fd5b5061018061065f565b005b34801561018e57600080fd5b50610197610814565b6040516101a49190611414565b60405180910390f35b3480156101b957600080fd5b506101c261083d565b005b3480156101d057600080fd5b506101d9610928565b6040516101e69190611465565b60405180910390f35b3480156101fb57600080fd5b5061021660048036038101906102119190610ffe565b61093f565b60405161022391906115a0565b60405180910390f35b34801561023857600080fd5b50610253600480360381019061024e9190610ffe565b610988565b005b61026f600480360381019061026a9190610ffe565b610b31565b005b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6102a1610bf7565b73ffffffffffffffffffffffffffffffffffffffff166102bf610814565b73ffffffffffffffffffffffffffffffffffffffff1614610315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030c90611560565b60405180910390fd5b6000600281111561034f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610357610928565b600281111561038f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146103cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c690611540565b60405180910390fd5b60028060006101000a81548160ff0219169083600281111561041a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f60405160405180910390a1565b610456816104a1565b610495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048c90611520565b60405180910390fd5b61049e81610bff565b50565b6000600160028111156104dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6104e5610928565b600281111561051d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b149050919050565b61052d610bf7565b73ffffffffffffffffffffffffffffffffffffffff1661054b610814565b73ffffffffffffffffffffffffffffffffffffffff16146105a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059890611560565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610667610bf7565b73ffffffffffffffffffffffffffffffffffffffff16610685610814565b73ffffffffffffffffffffffffffffffffffffffff16146106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d290611560565b60405180910390fd5b60006002811115610715577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61071d610928565b6002811115610755577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610795576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078c90611580565b60405180910390fd5b6001600260006101000a81548160ff021916908360028111156107e1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600280811115610876577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61087e610928565b60028111156108b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed90611480565b60405180910390fd5b61092647610902610271565b73ffffffffffffffffffffffffffffffffffffffff16610d7f90919063ffffffff16565b565b6000600260009054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610990610bf7565b73ffffffffffffffffffffffffffffffffffffffff166109ae610814565b73ffffffffffffffffffffffffffffffffffffffff1614610a04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fb90611560565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6b906114a0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006002811115610b6b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610b73610928565b6002811115610bab577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610beb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be290611500565b60405180910390fd5b610bf481610e73565b50565b600033905090565b610c07610bf7565b73ffffffffffffffffffffffffffffffffffffffff16610c25610814565b73ffffffffffffffffffffffffffffffffffffffff1614610c7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7290611560565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d2d818373ffffffffffffffffffffffffffffffffffffffff16610d7f90919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d582604051610d7391906115a0565b60405180910390a25050565b80471015610dc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db9906114e0565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610de8906113ff565b60006040518083038185875af1925050503d8060008114610e25576040519150601f19603f3d011682016040523d82523d6000602084013e610e2a565b606091505b5050905080610e6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e65906114c0565b60405180910390fd5b505050565b610e7b610bf7565b73ffffffffffffffffffffffffffffffffffffffff16610e99610814565b73ffffffffffffffffffffffffffffffffffffffff1614610eef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee690611560565b60405180910390fd5b600034905080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f3f91906115d7565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c482604051610fc891906115a0565b60405180910390a25050565b600081359050610fe38161171e565b92915050565b600081359050610ff881611735565b92915050565b60006020828403121561101057600080fd5b600061101e84828501610fd4565b91505092915050565b60006020828403121561103957600080fd5b600061104784828501610fe9565b91505092915050565b6110598161163f565b82525050565b6110688161162d565b82525050565b61107781611651565b82525050565b6110868161169a565b82525050565b60006110996038836115c6565b91507f526566756e64457363726f773a2062656e65666963696172792063616e206f6e60008301527f6c79207769746864726177207768696c6520636c6f73656400000000000000006020830152604082019050919050565b60006110ff6026836115c6565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611165603a836115c6565b91507f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008301527f6563697069656e74206d617920686176652072657665727465640000000000006020830152604082019050919050565b60006111cb601d836115c6565b91507f416464726573733a20696e73756666696369656e742062616c616e63650000006000830152602082019050919050565b600061120b602b836115c6565b91507f526566756e64457363726f773a2063616e206f6e6c79206465706f736974207760008301527f68696c65206163746976650000000000000000000000000000000000000000006020830152604082019050919050565b60006112716033836115c6565b91507f436f6e646974696f6e616c457363726f773a207061796565206973206e6f742060008301527f616c6c6f77656420746f207769746864726177000000000000000000000000006020830152604082019050919050565b60006112d76029836115c6565b91507f526566756e64457363726f773a2063616e206f6e6c7920636c6f73652077686960008301527f6c652061637469766500000000000000000000000000000000000000000000006020830152604082019050919050565b600061133d6020836115c6565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b600061137d6000836115bb565b9150600082019050919050565b60006113976032836115c6565b91507f526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726560008301527f66756e6473207768696c652061637469766500000000000000000000000000006020830152604082019050919050565b6113f981611690565b82525050565b600061140a82611370565b9150819050919050565b6000602082019050611429600083018461105f565b92915050565b60006020820190506114446000830184611050565b92915050565b600060208201905061145f600083018461106e565b92915050565b600060208201905061147a600083018461107d565b92915050565b600060208201905081810360008301526114998161108c565b9050919050565b600060208201905081810360008301526114b9816110f2565b9050919050565b600060208201905081810360008301526114d981611158565b9050919050565b600060208201905081810360008301526114f9816111be565b9050919050565b60006020820190508181036000830152611519816111fe565b9050919050565b6000602082019050818103600083015261153981611264565b9050919050565b60006020820190508181036000830152611559816112ca565b9050919050565b6000602082019050818103600083015261157981611330565b9050919050565b600060208201905081810360008301526115998161138a565b9050919050565b60006020820190506115b560008301846113f0565b92915050565b600081905092915050565b600082825260208201905092915050565b60006115e282611690565b91506115ed83611690565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611622576116216116ac565b5b828201905092915050565b600061163882611670565b9050919050565b600061164a82611670565b9050919050565b60008115159050919050565b600081905061166b8261170a565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116a58261165d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061171b5761171a6116db565b5b50565b6117278161162d565b811461173257600080fd5b50565b61173e8161163f565b811461174957600080fd5b5056fea264697066735822122078d3b2feccc4b4f33ca351bc6e8859bd4b8e9943dd6565520d837640b03983e564736f6c63430008000033a26469706673582212207c2da332a65de278d3a9dd5c55067463ecdfbe72bd54879e47cbc0a661dbe3e864736f6c63430008000033",
        "immutableReferences": {},
        "generatedSources": [
          {
            "ast": {
              "nodeType": "YulBlock",
              "src": "0:2705:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "102:258:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "112:74:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "178:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "array_allocation_size_t_string_memory_ptr",
                                "nodeType": "YulIdentifier",
                                "src": "136:41:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "136:49:25"
                            }
                          ],
                          "functionName": {
                            "name": "allocateMemory",
                            "nodeType": "YulIdentifier",
                            "src": "121:14:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "121:65:25"
                        },
                        "variableNames": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "112:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "202:5:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "209:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "195:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "195:21:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "195:21:25"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "225:27:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "240:5:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "247:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "236:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "236:16:25"
                        },
                        "variables": [
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "229:3:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "290:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "299:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "302:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "292:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "292:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "292:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "271:3:25"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "276:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "267:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "267:16:25"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "285:3:25"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "264:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "264:25:25"
                        },
                        "nodeType": "YulIf",
                        "src": "261:2:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "337:3:25"
                            },
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "342:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "347:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "copy_memory_to_memory",
                            "nodeType": "YulIdentifier",
                            "src": "315:21:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "315:39:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "315:39:25"
                      }
                    ]
                  },
                  "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "75:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "80:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "88:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "array",
                      "nodeType": "YulTypedName",
                      "src": "96:5:25",
                      "type": ""
                    }
                  ],
                  "src": "7:353:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "453:215:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "502:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "511:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "514:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "504:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "504:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "504:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "481:6:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "489:4:25",
                                      "type": "",
                                      "value": "0x1f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "477:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "477:17:25"
                                },
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "496:3:25"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nodeType": "YulIdentifier",
                                "src": "473:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "473:27:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "466:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "466:35:25"
                        },
                        "nodeType": "YulIf",
                        "src": "463:2:25"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "527:27:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "547:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "541:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "541:13:25"
                        },
                        "variables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "531:6:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "563:99:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "635:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "643:4:25",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "631:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "631:17:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "650:6:25"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "658:3:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                            "nodeType": "YulIdentifier",
                            "src": "572:58:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "572:90:25"
                        },
                        "variableNames": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "563:5:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_t_string_memory_ptr_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "431:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "439:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "array",
                      "nodeType": "YulTypedName",
                      "src": "447:5:25",
                      "type": ""
                    }
                  ],
                  "src": "380:288:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "761:303:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "807:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "816:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "819:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "809:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "809:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "809:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "782:7:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "791:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "778:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "778:23:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "803:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "774:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "774:32:25"
                        },
                        "nodeType": "YulIf",
                        "src": "771:2:25"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "833:224:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "848:38:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "872:9:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "883:1:25",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "868:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "868:17:25"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "862:5:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "862:24:25"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "852:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "933:16:25",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "942:1:25",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "945:1:25",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "935:6:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "935:12:25"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "935:12:25"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "905:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "913:18:25",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "902:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "902:30:25"
                            },
                            "nodeType": "YulIf",
                            "src": "899:2:25"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "963:84:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1019:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "1030:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1015:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1015:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1039:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_string_memory_ptr_fromMemory",
                                "nodeType": "YulIdentifier",
                                "src": "973:41:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "973:74:25"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "963:6:25"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "731:9:25",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "742:7:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "754:6:25",
                      "type": ""
                    }
                  ],
                  "src": "674:390:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1110:243:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1120:19:25",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1136:2:25",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1130:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1130:9:25"
                        },
                        "variableNames": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1120:6:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1148:35:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1170:6:25"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "1178:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1166:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1166:17:25"
                        },
                        "variables": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulTypedName",
                            "src": "1152:10:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1294:22:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x41",
                                  "nodeType": "YulIdentifier",
                                  "src": "1296:16:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1296:18:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1296:18:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1237:10:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1249:18:25",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "1234:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1234:34:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1273:10:25"
                                },
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1285:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "1270:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1270:22:25"
                            }
                          ],
                          "functionName": {
                            "name": "or",
                            "nodeType": "YulIdentifier",
                            "src": "1231:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1231:62:25"
                        },
                        "nodeType": "YulIf",
                        "src": "1228:2:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1332:2:25",
                              "type": "",
                              "value": "64"
                            },
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulIdentifier",
                              "src": "1336:10:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1325:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1325:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1325:22:25"
                      }
                    ]
                  },
                  "name": "allocateMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "size",
                      "nodeType": "YulTypedName",
                      "src": "1094:4:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1103:6:25",
                      "type": ""
                    }
                  ],
                  "src": "1070:283:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1426:265:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1531:22:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x41",
                                  "nodeType": "YulIdentifier",
                                  "src": "1533:16:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1533:18:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1533:18:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1503:6:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1511:18:25",
                              "type": "",
                              "value": "0xffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "1500:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1500:30:25"
                        },
                        "nodeType": "YulIf",
                        "src": "1497:2:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1583:41:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1599:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1607:4:25",
                                  "type": "",
                                  "value": "0x1f"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1595:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1595:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1618:4:25",
                                  "type": "",
                                  "value": "0x1f"
                                }
                              ],
                              "functionName": {
                                "name": "not",
                                "nodeType": "YulIdentifier",
                                "src": "1614:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1614:9:25"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1591:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1591:33:25"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "1583:4:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1661:23:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "1673:4:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1679:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1669:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1669:15:25"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "1661:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_allocation_size_t_string_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1410:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "size",
                      "nodeType": "YulTypedName",
                      "src": "1421:4:25",
                      "type": ""
                    }
                  ],
                  "src": "1359:332:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1746:258:25",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1756:10:25",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1765:1:25",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "1760:1:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1825:63:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "1850:3:25"
                                      },
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "1855:1:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1846:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1846:11:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "1869:3:25"
                                          },
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "1874:1:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1865:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1865:11:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1859:5:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1859:18:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1839:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1839:39:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1839:39:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1786:1:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1789:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "1783:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1783:13:25"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "1797:19:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1799:15:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1808:1:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1811:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1804:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1804:10:25"
                              },
                              "variableNames": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1799:1:25"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "1779:3:25",
                          "statements": []
                        },
                        "src": "1775:113:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1922:76:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "1972:3:25"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1977:6:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1968:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1968:16:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1986:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1961:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1961:27:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1961:27:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1903:1:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1906:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "1900:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1900:13:25"
                        },
                        "nodeType": "YulIf",
                        "src": "1897:2:25"
                      }
                    ]
                  },
                  "name": "copy_memory_to_memory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "1728:3:25",
                      "type": ""
                    },
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "1733:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1738:6:25",
                      "type": ""
                    }
                  ],
                  "src": "1697:307:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2061:269:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2071:22:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "2085:4:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2091:1:25",
                              "type": "",
                              "value": "2"
                            }
                          ],
                          "functionName": {
                            "name": "div",
                            "nodeType": "YulIdentifier",
                            "src": "2081:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2081:12:25"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2071:6:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2102:38:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "2132:4:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2138:1:25",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2128:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2128:12:25"
                        },
                        "variables": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulTypedName",
                            "src": "2106:18:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2179:51:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2193:27:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2207:6:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2215:4:25",
                                    "type": "",
                                    "value": "0x7f"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2203:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2203:17:25"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2193:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulIdentifier",
                              "src": "2159:18:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "2152:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2152:26:25"
                        },
                        "nodeType": "YulIf",
                        "src": "2149:2:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2282:42:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x22",
                                  "nodeType": "YulIdentifier",
                                  "src": "2296:16:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2296:18:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2296:18:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulIdentifier",
                              "src": "2246:18:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2269:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2277:2:25",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "2266:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2266:14:25"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "2243:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2243:38:25"
                        },
                        "nodeType": "YulIf",
                        "src": "2240:2:25"
                      }
                    ]
                  },
                  "name": "extract_byte_array_length",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "data",
                      "nodeType": "YulTypedName",
                      "src": "2045:4:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2054:6:25",
                      "type": ""
                    }
                  ],
                  "src": "2010:320:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2364:152:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2381:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2384:77:25",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2374:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2374:88:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2374:88:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2478:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2481:4:25",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2471:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2471:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2471:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2502:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2505:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2495:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2495:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2495:15:25"
                      }
                    ]
                  },
                  "name": "panic_error_0x22",
                  "nodeType": "YulFunctionDefinition",
                  "src": "2336:180:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2550:152:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2567:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2570:77:25",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2560:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2560:88:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2560:88:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2664:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2667:4:25",
                              "type": "",
                              "value": "0x41"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2657:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2657:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2657:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2688:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2691:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2681:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2681:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2681:15:25"
                      }
                    ]
                  },
                  "name": "panic_error_0x41",
                  "nodeType": "YulFunctionDefinition",
                  "src": "2522:180:25"
                }
              ]
            },
            "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n}\n",
            "id": 25,
            "language": "Yul",
            "name": "#utility.yul"
          }
        ],
        "deployedGeneratedSources": [
          {
            "ast": {
              "nodeType": "YulBlock",
              "src": "0:14305:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "91:260:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "101:74:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "167:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "array_allocation_size_t_string_memory_ptr",
                                "nodeType": "YulIdentifier",
                                "src": "125:41:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "125:49:25"
                            }
                          ],
                          "functionName": {
                            "name": "allocateMemory",
                            "nodeType": "YulIdentifier",
                            "src": "110:14:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "110:65:25"
                        },
                        "variableNames": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "101:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "191:5:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "198:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "184:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "184:21:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "184:21:25"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "214:27:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "229:5:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "236:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "225:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "225:16:25"
                        },
                        "variables": [
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "218:3:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "279:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "288:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "291:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "281:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "281:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "281:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "260:3:25"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "265:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "256:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "256:16:25"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "274:3:25"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "253:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "253:25:25"
                        },
                        "nodeType": "YulIf",
                        "src": "250:2:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "328:3:25"
                            },
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "333:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "338:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "copy_calldata_to_memory",
                            "nodeType": "YulIdentifier",
                            "src": "304:23:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "304:41:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "304:41:25"
                      }
                    ]
                  },
                  "name": "abi_decode_available_length_t_string_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "64:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "69:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "77:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "array",
                      "nodeType": "YulTypedName",
                      "src": "85:5:25",
                      "type": ""
                    }
                  ],
                  "src": "7:344:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "409:87:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "419:29:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "441:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "428:12:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "428:20:25"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "419:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "484:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "457:26:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "457:33:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "457:33:25"
                      }
                    ]
                  },
                  "name": "abi_decode_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "387:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "395:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "403:5:25",
                      "type": ""
                    }
                  ],
                  "src": "357:139:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "562:95:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "572:29:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "594:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "581:12:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "581:20:25"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "572:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "645:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_address_payable",
                            "nodeType": "YulIdentifier",
                            "src": "610:34:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "610:41:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "610:41:25"
                      }
                    ]
                  },
                  "name": "abi_decode_t_address_payable",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "540:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "548:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "556:5:25",
                      "type": ""
                    }
                  ],
                  "src": "502:155:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "712:84:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "722:29:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "744:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "731:12:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "731:20:25"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "722:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "784:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_bool",
                            "nodeType": "YulIdentifier",
                            "src": "760:23:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "760:30:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "760:30:25"
                      }
                    ]
                  },
                  "name": "abi_decode_t_bool",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "690:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "698:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "706:5:25",
                      "type": ""
                    }
                  ],
                  "src": "663:133:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "862:77:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "872:22:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "887:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "881:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "881:13:25"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "872:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "927:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_bool",
                            "nodeType": "YulIdentifier",
                            "src": "903:23:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "903:30:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "903:30:25"
                      }
                    ]
                  },
                  "name": "abi_decode_t_bool_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "840:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "848:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "856:5:25",
                      "type": ""
                    }
                  ],
                  "src": "802:137:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1021:211:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1070:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1079:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1082:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1072:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1072:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1072:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "1049:6:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1057:4:25",
                                      "type": "",
                                      "value": "0x1f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1045:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1045:17:25"
                                },
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "1064:3:25"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nodeType": "YulIdentifier",
                                "src": "1041:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1041:27:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "1034:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1034:35:25"
                        },
                        "nodeType": "YulIf",
                        "src": "1031:2:25"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1095:34:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "1122:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "1109:12:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1109:20:25"
                        },
                        "variables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1099:6:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1138:88:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "1199:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1207:4:25",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1195:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1195:17:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1214:6:25"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "1222:3:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_decode_available_length_t_string_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "1147:47:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1147:79:25"
                        },
                        "variableNames": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "1138:5:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_t_string_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "999:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "1007:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "array",
                      "nodeType": "YulTypedName",
                      "src": "1015:5:25",
                      "type": ""
                    }
                  ],
                  "src": "959:273:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1366:709:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1410:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1419:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1422:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1412:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1412:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1412:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "1387:3:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1392:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "1383:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1383:19:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1404:4:25",
                              "type": "",
                              "value": "0x60"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "1379:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1379:30:25"
                        },
                        "nodeType": "YulIf",
                        "src": "1376:2:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1435:29:25",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1459:4:25",
                              "type": "",
                              "value": "0x60"
                            }
                          ],
                          "functionName": {
                            "name": "allocateMemory",
                            "nodeType": "YulIdentifier",
                            "src": "1444:14:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1444:20:25"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1435:5:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "1474:257:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1513:45:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1544:9:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1555:1:25",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1540:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1540:17:25"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1527:12:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1527:31:25"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "1517:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1605:16:25",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1614:1:25",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1617:1:25",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "1607:6:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1607:12:25"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1607:12:25"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "1577:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1585:18:25",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "1574:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1574:30:25"
                            },
                            "nodeType": "YulIf",
                            "src": "1571:2:25"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "1646:5:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1653:4:25",
                                      "type": "",
                                      "value": "0x00"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1642:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1642:16:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "1695:9:25"
                                        },
                                        {
                                          "name": "offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "1706:6:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1691:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1691:22:25"
                                    },
                                    {
                                      "name": "end",
                                      "nodeType": "YulIdentifier",
                                      "src": "1715:3:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_string_memory_ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1660:30:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1660:59:25"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1635:6:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1635:85:25"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1635:85:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "1741:160:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1785:16:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1799:2:25",
                              "type": "",
                              "value": "32"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "1789:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "1826:5:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1833:4:25",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1822:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1822:16:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "1865:9:25"
                                        },
                                        {
                                          "name": "offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "1876:6:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1861:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1861:22:25"
                                    },
                                    {
                                      "name": "end",
                                      "nodeType": "YulIdentifier",
                                      "src": "1885:3:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_uint256",
                                    "nodeType": "YulIdentifier",
                                    "src": "1840:20:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1840:49:25"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1815:6:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1815:75:25"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1815:75:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "1911:157:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1952:16:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1966:2:25",
                              "type": "",
                              "value": "64"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "1956:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "1993:5:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2000:4:25",
                                      "type": "",
                                      "value": "0x40"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1989:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1989:16:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "2032:9:25"
                                        },
                                        {
                                          "name": "offset",
                                          "nodeType": "YulIdentifier",
                                          "src": "2043:6:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2028:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2028:22:25"
                                    },
                                    {
                                      "name": "end",
                                      "nodeType": "YulIdentifier",
                                      "src": "2052:3:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "abi_decode_t_uint256",
                                    "nodeType": "YulIdentifier",
                                    "src": "2007:20:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2007:49:25"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1982:6:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1982:75:25"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1982:75:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_t_struct$_EvaluationState_$751_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "1341:9:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "1352:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1360:5:25",
                      "type": ""
                    }
                  ],
                  "src": "1279:796:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2133:87:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2143:29:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "2165:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "2152:12:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2152:20:25"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2143:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2208:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_uint256",
                            "nodeType": "YulIdentifier",
                            "src": "2181:26:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2181:33:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2181:33:25"
                      }
                    ]
                  },
                  "name": "abi_decode_t_uint256",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2111:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "2119:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2127:5:25",
                      "type": ""
                    }
                  ],
                  "src": "2081:139:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2292:196:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2338:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2347:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2350:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2340:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2340:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2340:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "2313:7:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "2322:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "2309:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2309:23:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2334:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "2305:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2305:32:25"
                        },
                        "nodeType": "YulIf",
                        "src": "2302:2:25"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "2364:117:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2379:15:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2393:1:25",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "2383:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "2408:63:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2443:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "2454:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2439:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2439:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "2463:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "2418:20:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2418:53:25"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2408:6:25"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "2262:9:25",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "2273:7:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "2285:6:25",
                      "type": ""
                    }
                  ],
                  "src": "2226:262:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2582:329:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2628:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2637:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2640:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2630:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2630:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2630:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "2603:7:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "2612:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "2599:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2599:23:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2624:2:25",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "2595:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2595:32:25"
                        },
                        "nodeType": "YulIf",
                        "src": "2592:2:25"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "2654:125:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2669:15:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2683:1:25",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "2673:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "2698:71:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2741:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "2752:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2737:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2737:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "2761:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address_payable",
                                "nodeType": "YulIdentifier",
                                "src": "2708:28:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2708:61:25"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2698:6:25"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "2789:115:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "2804:16:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2818:2:25",
                              "type": "",
                              "value": "32"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "2808:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "2834:60:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2866:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "2877:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2862:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2862:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "2886:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_bool",
                                "nodeType": "YulIdentifier",
                                "src": "2844:17:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2844:50:25"
                            },
                            "variableNames": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "2834:6:25"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_address_payablet_bool",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "2544:9:25",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "2555:7:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "2567:6:25",
                      "type": ""
                    },
                    {
                      "name": "value1",
                      "nodeType": "YulTypedName",
                      "src": "2575:6:25",
                      "type": ""
                    }
                  ],
                  "src": "2494:417:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3054:582:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3100:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3109:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3112:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3102:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3102:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3102:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "3075:7:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3084:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "3071:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3071:23:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3096:2:25",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "3067:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3067:32:25"
                        },
                        "nodeType": "YulIf",
                        "src": "3064:2:25"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "3126:125:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "3141:15:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3155:1:25",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "3145:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3170:71:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3213:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "3224:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3209:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3209:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "3233:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address_payable",
                                "nodeType": "YulIdentifier",
                                "src": "3180:28:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3180:61:25"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3170:6:25"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "3261:243:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "3276:46:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3307:9:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3318:2:25",
                                      "type": "",
                                      "value": "32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3303:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3303:18:25"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "3290:12:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3290:32:25"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "3280:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "3369:16:25",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3378:1:25",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3381:1:25",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "3371:6:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3371:12:25"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "3371:12:25"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "3341:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3349:18:25",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "3338:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3338:30:25"
                            },
                            "nodeType": "YulIf",
                            "src": "3335:2:25"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3399:95:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3466:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "3477:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3462:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3462:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "3486:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_struct$_EvaluationState_$751_memory_ptr",
                                "nodeType": "YulIdentifier",
                                "src": "3409:52:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3409:85:25"
                            },
                            "variableNames": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "3399:6:25"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "3514:115:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "3529:16:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3543:2:25",
                              "type": "",
                              "value": "64"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "3533:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3559:60:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3591:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "3602:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3587:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3587:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "3611:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_bool",
                                "nodeType": "YulIdentifier",
                                "src": "3569:17:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3569:50:25"
                            },
                            "variableNames": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "3559:6:25"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_address_payablet_struct$_EvaluationState_$751_memory_ptrt_bool",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "3008:9:25",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "3019:7:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "3031:6:25",
                      "type": ""
                    },
                    {
                      "name": "value1",
                      "nodeType": "YulTypedName",
                      "src": "3039:6:25",
                      "type": ""
                    },
                    {
                      "name": "value2",
                      "nodeType": "YulTypedName",
                      "src": "3047:6:25",
                      "type": ""
                    }
                  ],
                  "src": "2917:719:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3716:204:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3762:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3771:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3774:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3764:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3764:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3764:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "3737:7:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3746:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "3733:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3733:23:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3758:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "3729:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3729:32:25"
                        },
                        "nodeType": "YulIf",
                        "src": "3726:2:25"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "3788:125:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "3803:15:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3817:1:25",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "3807:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3832:71:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3875:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "3886:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3871:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3871:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "3895:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_bool_fromMemory",
                                "nodeType": "YulIdentifier",
                                "src": "3842:28:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3842:61:25"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3832:6:25"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_bool_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "3686:9:25",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "3697:7:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "3709:6:25",
                      "type": ""
                    }
                  ],
                  "src": "3642:278:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4002:299:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4048:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4057:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4060:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4050:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4050:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4050:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "4023:7:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "4032:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "4019:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4019:23:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4044:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "4015:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4015:32:25"
                        },
                        "nodeType": "YulIf",
                        "src": "4012:2:25"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "4074:220:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "4089:45:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "4120:9:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4131:1:25",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4116:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4116:17:25"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "4103:12:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4103:31:25"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "4093:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "4181:16:25",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4190:1:25",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4193:1:25",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "4183:6:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4183:12:25"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "4183:12:25"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "4153:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4161:18:25",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "4150:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4150:30:25"
                            },
                            "nodeType": "YulIf",
                            "src": "4147:2:25"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "4211:73:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "4256:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "4267:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4252:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4252:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "4276:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_string_memory_ptr",
                                "nodeType": "YulIdentifier",
                                "src": "4221:30:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4221:63:25"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4211:6:25"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_string_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "3972:9:25",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "3983:7:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "3995:6:25",
                      "type": ""
                    }
                  ],
                  "src": "3926:375:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4388:61:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4405:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "4436:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_address_payable",
                                "nodeType": "YulIdentifier",
                                "src": "4410:25:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4410:32:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4398:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4398:45:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4398:45:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4376:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4383:3:25",
                      "type": ""
                    }
                  ],
                  "src": "4307:142:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4520:53:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4537:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "4560:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "4542:17:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4542:24:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4530:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4530:37:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4530:37:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_address_to_t_address_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4508:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4515:3:25",
                      "type": ""
                    }
                  ],
                  "src": "4455:118:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4638:50:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4655:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "4675:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_bool",
                                "nodeType": "YulIdentifier",
                                "src": "4660:14:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4660:21:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4648:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4648:34:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4648:34:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4626:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4633:3:25",
                      "type": ""
                    }
                  ],
                  "src": "4579:109:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4782:89:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4799:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "4858:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "convert_t_enum$_WorkRelationshipState_$759_to_t_uint8",
                                "nodeType": "YulIdentifier",
                                "src": "4804:53:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4804:60:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4792:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4792:73:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4792:73:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_enum$_WorkRelationshipState_$759_to_t_uint8_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4770:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4777:3:25",
                      "type": ""
                    }
                  ],
                  "src": "4694:177:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4959:262:25",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4969:53:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "5016:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "array_length_t_string_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "4983:32:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4983:39:25"
                        },
                        "variables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "4973:6:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5031:68:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5087:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5092:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "array_storeLengthForEncoding_t_string_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "5038:48:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5038:61:25"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5031:3:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "5134:5:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5141:4:25",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5130:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5130:16:25"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5148:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5153:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "copy_memory_to_memory",
                            "nodeType": "YulIdentifier",
                            "src": "5108:21:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5108:52:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5108:52:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5169:46:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5180:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5207:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "round_up_to_mul_of_32",
                                "nodeType": "YulIdentifier",
                                "src": "5185:21:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5185:29:25"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5176:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5176:39:25"
                        },
                        "variableNames": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "5169:3:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4940:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4947:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "4955:3:25",
                      "type": ""
                    }
                  ],
                  "src": "4877:344:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5319:272:25",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5329:53:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "5376:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "array_length_t_string_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "5343:32:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5343:39:25"
                        },
                        "variables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "5333:6:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5391:78:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5457:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5462:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "5398:58:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5398:71:25"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5391:3:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "5504:5:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5511:4:25",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5500:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5500:16:25"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5518:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5523:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "copy_memory_to_memory",
                            "nodeType": "YulIdentifier",
                            "src": "5478:21:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5478:52:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5478:52:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5539:46:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5550:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5577:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "round_up_to_mul_of_32",
                                "nodeType": "YulIdentifier",
                                "src": "5555:21:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5555:29:25"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5546:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5546:39:25"
                        },
                        "variableNames": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "5539:3:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5300:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "5307:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "5315:3:25",
                      "type": ""
                    }
                  ],
                  "src": "5227:364:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5743:224:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5753:74:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5819:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5824:2:25",
                              "type": "",
                              "value": "38"
                            }
                          ],
                          "functionName": {
                            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "5760:58:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5760:67:25"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5753:3:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5848:3:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5853:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5844:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5844:11:25"
                            },
                            {
                              "kind": "string",
                              "nodeType": "YulLiteral",
                              "src": "5857:34:25",
                              "type": "",
                              "value": "Ownable: new owner is the zero a"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5837:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5837:55:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5837:55:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5913:3:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5918:2:25",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5909:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5909:12:25"
                            },
                            {
                              "kind": "string",
                              "nodeType": "YulLiteral",
                              "src": "5923:8:25",
                              "type": "",
                              "value": "ddress"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5902:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5902:30:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5902:30:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5942:19:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5953:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5958:2:25",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5949:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5949:12:25"
                        },
                        "variableNames": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "5942:3:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "5731:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "5739:3:25",
                      "type": ""
                    }
                  ],
                  "src": "5597:370:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6119:184:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6129:74:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6195:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6200:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "6136:58:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6136:67:25"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6129:3:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6224:3:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6229:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6220:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6220:11:25"
                            },
                            {
                              "kind": "string",
                              "nodeType": "YulLiteral",
                              "src": "6233:34:25",
                              "type": "",
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6213:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6213:55:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6213:55:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6278:19:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6289:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6294:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6285:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6285:12:25"
                        },
                        "variableNames": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "6278:3:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "6107:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "6115:3:25",
                      "type": ""
                    }
                  ],
                  "src": "5973:330:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6525:675:25",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "6535:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6551:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6556:4:25",
                              "type": "",
                              "value": "0x60"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6547:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6547:14:25"
                        },
                        "variables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6539:4:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "6571:239:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "6610:43:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "6640:5:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6647:4:25",
                                      "type": "",
                                      "value": "0x00"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6636:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6636:16:25"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6630:5:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6630:23:25"
                            },
                            "variables": [
                              {
                                "name": "memberValue0",
                                "nodeType": "YulTypedName",
                                "src": "6614:12:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "6678:3:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6683:4:25",
                                      "type": "",
                                      "value": "0x00"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6674:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6674:14:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "tail",
                                      "nodeType": "YulIdentifier",
                                      "src": "6694:4:25"
                                    },
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "6700:3:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "6690:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6690:14:25"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6667:6:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6667:38:25"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6667:38:25"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "6718:81:25",
                            "value": {
                              "arguments": [
                                {
                                  "name": "memberValue0",
                                  "nodeType": "YulIdentifier",
                                  "src": "6780:12:25"
                                },
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6794:4:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
                                "nodeType": "YulIdentifier",
                                "src": "6726:53:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6726:73:25"
                            },
                            "variableNames": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "6718:4:25"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "6820:173:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "6864:43:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "6894:5:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6901:4:25",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6890:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6890:16:25"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6884:5:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6884:23:25"
                            },
                            "variables": [
                              {
                                "name": "memberValue0",
                                "nodeType": "YulTypedName",
                                "src": "6868:12:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "memberValue0",
                                  "nodeType": "YulIdentifier",
                                  "src": "6954:12:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "6972:3:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6977:4:25",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6968:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6968:14:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "6920:33:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6920:63:25"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6920:63:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "7003:170:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "7044:43:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "7074:5:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7081:4:25",
                                      "type": "",
                                      "value": "0x40"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7070:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7070:16:25"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7064:5:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7064:23:25"
                            },
                            "variables": [
                              {
                                "name": "memberValue0",
                                "nodeType": "YulTypedName",
                                "src": "7048:12:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "memberValue0",
                                  "nodeType": "YulIdentifier",
                                  "src": "7134:12:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "7152:3:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7157:4:25",
                                      "type": "",
                                      "value": "0x40"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7148:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7148:14:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_encode_t_uint256_to_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "7100:33:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7100:63:25"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7100:63:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7183:11:25",
                        "value": {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7190:4:25"
                        },
                        "variableNames": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "7183:3:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_t_struct$_EvaluationState_$751_memory_ptr_to_t_struct$_EvaluationState_$751_memory_ptr_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6504:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "6511:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "6520:3:25",
                      "type": ""
                    }
                  ],
                  "src": "6387:813:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7261:53:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "7278:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "7301:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "7283:17:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7283:24:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7271:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7271:37:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7271:37:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_uint256_to_t_uint256",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7249:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "7256:3:25",
                      "type": ""
                    }
                  ],
                  "src": "7206:108:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7418:124:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7428:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "7440:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7451:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7436:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7436:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7428:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "7508:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "7521:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7532:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7517:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7517:17:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_address_to_t_address_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "7464:43:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7464:71:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7464:71:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "7390:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "7402:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "7413:4:25",
                      "type": ""
                    }
                  ],
                  "src": "7320:222:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7728:314:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7738:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "7750:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7761:2:25",
                              "type": "",
                              "value": "96"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7746:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7746:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7738:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "7834:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "7847:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7858:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7843:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7843:17:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "7774:59:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7774:87:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7774:87:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "7931:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "7944:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7955:2:25",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7940:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7940:18:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "7871:59:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7871:88:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7871:88:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "8007:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "8020:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8031:2:25",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8016:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8016:18:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_bool_to_t_bool_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "7969:37:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7969:66:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7969:66:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_address_payable_t_address_payable_t_bool__to_t_address_payable_t_address_payable_t_bool__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "7684:9:25",
                      "type": ""
                    },
                    {
                      "name": "value2",
                      "nodeType": "YulTypedName",
                      "src": "7696:6:25",
                      "type": ""
                    },
                    {
                      "name": "value1",
                      "nodeType": "YulTypedName",
                      "src": "7704:6:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "7712:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "7723:4:25",
                      "type": ""
                    }
                  ],
                  "src": "7548:494:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8184:216:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8194:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "8206:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8217:2:25",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8202:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8202:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8194:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "8290:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "8303:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8314:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8299:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8299:17:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "8230:59:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8230:87:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8230:87:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "8365:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "8378:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8389:2:25",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8374:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8374:18:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_bool_to_t_bool_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "8327:37:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8327:66:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8327:66:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_address_payable_t_bool__to_t_address_payable_t_bool__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "8148:9:25",
                      "type": ""
                    },
                    {
                      "name": "value1",
                      "nodeType": "YulTypedName",
                      "src": "8160:6:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "8168:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "8179:4:25",
                      "type": ""
                    }
                  ],
                  "src": "8048:352:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8527:147:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8537:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "8549:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8560:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8545:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8545:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8537:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "8640:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "8653:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8664:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8649:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8649:17:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_enum$_WorkRelationshipState_$759_to_t_uint8_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "8573:66:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8573:94:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8573:94:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_enum$_WorkRelationshipState_$759__to_t_uint8__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "8499:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "8511:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "8522:4:25",
                      "type": ""
                    }
                  ],
                  "src": "8406:268:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8798:195:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8808:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "8820:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8831:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8816:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8816:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8808:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "8855:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8866:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8851:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8851:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8874:4:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "8880:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "8870:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8870:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8844:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8844:47:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8844:47:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8900:86:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "8972:6:25"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "8981:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "8908:63:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8908:78:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8900:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "8770:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "8782:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "8793:4:25",
                      "type": ""
                    }
                  ],
                  "src": "8680:313:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9170:248:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9180:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "9192:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9203:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9188:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9188:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9180:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "9227:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9238:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9223:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9223:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9246:4:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "9252:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "9242:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9242:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9216:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9216:47:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9216:47:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9272:139:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9406:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "9280:124:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9280:131:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9272:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "9150:9:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "9165:4:25",
                      "type": ""
                    }
                  ],
                  "src": "8999:419:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9595:248:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9605:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "9617:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9628:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9613:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9613:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9605:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "9652:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9663:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9648:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9648:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9671:4:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "9677:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "9667:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9667:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9641:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9641:47:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9641:47:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9697:139:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9831:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "9705:124:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9705:131:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9697:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "9575:9:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "9590:4:25",
                      "type": ""
                    }
                  ],
                  "src": "9424:419:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10011:239:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10021:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "10033:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10044:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10029:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10029:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10021:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "10068:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10079:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10064:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10064:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10087:4:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "10093:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "10083:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10083:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10057:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10057:47:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10057:47:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10113:130:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "10229:6:25"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "10238:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_struct$_EvaluationState_$751_memory_ptr_to_t_struct$_EvaluationState_$751_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "10121:107:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10121:122:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10113:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_struct$_EvaluationState_$751_memory_ptr__to_t_struct$_EvaluationState_$751_memory_ptr__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "9983:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "9995:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "10006:4:25",
                      "type": ""
                    }
                  ],
                  "src": "9849:401:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10296:243:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10306:19:25",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10322:2:25",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10316:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10316:9:25"
                        },
                        "variableNames": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10306:6:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10334:35:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "10356:6:25"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "10364:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10352:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10352:17:25"
                        },
                        "variables": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulTypedName",
                            "src": "10338:10:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10480:22:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x41",
                                  "nodeType": "YulIdentifier",
                                  "src": "10482:16:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10482:18:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10482:18:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "10423:10:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10435:18:25",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "10420:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10420:34:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "10459:10:25"
                                },
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "10471:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "10456:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10456:22:25"
                            }
                          ],
                          "functionName": {
                            "name": "or",
                            "nodeType": "YulIdentifier",
                            "src": "10417:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10417:62:25"
                        },
                        "nodeType": "YulIf",
                        "src": "10414:2:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10518:2:25",
                              "type": "",
                              "value": "64"
                            },
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulIdentifier",
                              "src": "10522:10:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10511:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10511:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10511:22:25"
                      }
                    ]
                  },
                  "name": "allocateMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "size",
                      "nodeType": "YulTypedName",
                      "src": "10280:4:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "10289:6:25",
                      "type": ""
                    }
                  ],
                  "src": "10256:283:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10612:265:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10717:22:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x41",
                                  "nodeType": "YulIdentifier",
                                  "src": "10719:16:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10719:18:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10719:18:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "10689:6:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10697:18:25",
                              "type": "",
                              "value": "0xffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "10686:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10686:30:25"
                        },
                        "nodeType": "YulIf",
                        "src": "10683:2:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10769:41:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "10785:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10793:4:25",
                                  "type": "",
                                  "value": "0x1f"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10781:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10781:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10804:4:25",
                                  "type": "",
                                  "value": "0x1f"
                                }
                              ],
                              "functionName": {
                                "name": "not",
                                "nodeType": "YulIdentifier",
                                "src": "10800:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10800:9:25"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "10777:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10777:33:25"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "10769:4:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10847:23:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "10859:4:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10865:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10855:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10855:15:25"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "10847:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_allocation_size_t_string_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10596:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "size",
                      "nodeType": "YulTypedName",
                      "src": "10607:4:25",
                      "type": ""
                    }
                  ],
                  "src": "10545:332:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10942:40:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10953:22:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "10969:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "10963:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10963:12:25"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10953:6:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_length_t_string_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10925:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10935:6:25",
                      "type": ""
                    }
                  ],
                  "src": "10883:99:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11074:73:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "11091:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "11096:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11084:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11084:19:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11084:19:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11112:29:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "11131:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11136:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "11127:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11127:14:25"
                        },
                        "variableNames": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulIdentifier",
                            "src": "11112:11:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_storeLengthForEncoding_t_string_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "11046:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "11051:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulTypedName",
                      "src": "11062:11:25",
                      "type": ""
                    }
                  ],
                  "src": "10988:159:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11249:73:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "11266:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "11271:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11259:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11259:19:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11259:19:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11287:29:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "11306:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11311:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "11302:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11302:14:25"
                        },
                        "variableNames": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulIdentifier",
                            "src": "11287:11:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "11221:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "11226:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulTypedName",
                      "src": "11237:11:25",
                      "type": ""
                    }
                  ],
                  "src": "11153:169:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11373:51:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11383:35:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "11412:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_uint160",
                            "nodeType": "YulIdentifier",
                            "src": "11394:17:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11394:24:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "11383:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "11355:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "11365:7:25",
                      "type": ""
                    }
                  ],
                  "src": "11328:96:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11483:51:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11493:35:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "11522:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_uint160",
                            "nodeType": "YulIdentifier",
                            "src": "11504:17:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11504:24:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "11493:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_address_payable",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "11465:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "11475:7:25",
                      "type": ""
                    }
                  ],
                  "src": "11430:104:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11582:48:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11592:32:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "11617:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "11610:6:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11610:13:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "11603:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11603:21:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "11592:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_bool",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "11564:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "11574:7:25",
                      "type": ""
                    }
                  ],
                  "src": "11540:90:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11706:91:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11716:16:25",
                        "value": {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "11727:5:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "11716:7:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "11785:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_assert_t_enum$_WorkRelationshipState_$759",
                            "nodeType": "YulIdentifier",
                            "src": "11733:51:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11733:58:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11733:58:25"
                      }
                    ]
                  },
                  "name": "cleanup_t_enum$_WorkRelationshipState_$759",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "11688:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "11698:7:25",
                      "type": ""
                    }
                  ],
                  "src": "11636:161:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11848:81:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11858:65:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "11873:5:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11880:42:25",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "11869:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11869:54:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "11858:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_uint160",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "11830:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "11840:7:25",
                      "type": ""
                    }
                  ],
                  "src": "11803:126:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11980:32:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11990:16:25",
                        "value": {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "12001:5:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "11990:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_uint256",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "11962:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "11972:7:25",
                      "type": ""
                    }
                  ],
                  "src": "11935:77:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12101:78:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12111:62:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "12167:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_enum$_WorkRelationshipState_$759",
                            "nodeType": "YulIdentifier",
                            "src": "12124:42:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12124:49:25"
                        },
                        "variableNames": [
                          {
                            "name": "converted",
                            "nodeType": "YulIdentifier",
                            "src": "12111:9:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "convert_t_enum$_WorkRelationshipState_$759_to_t_uint8",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "12081:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "converted",
                      "nodeType": "YulTypedName",
                      "src": "12091:9:25",
                      "type": ""
                    }
                  ],
                  "src": "12018:161:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12236:103:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "12259:3:25"
                            },
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "12264:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "12269:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "12246:12:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12246:30:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12246:30:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "12317:3:25"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "12322:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12313:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12313:16:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12331:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12306:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12306:27:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12306:27:25"
                      }
                    ]
                  },
                  "name": "copy_calldata_to_memory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "12218:3:25",
                      "type": ""
                    },
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "12223:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "12228:6:25",
                      "type": ""
                    }
                  ],
                  "src": "12185:154:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12394:258:25",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "12404:10:25",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "12413:1:25",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "12408:1:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12473:63:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "12498:3:25"
                                      },
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "12503:1:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12494:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12494:11:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "12517:3:25"
                                          },
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "12522:1:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "12513:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12513:11:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "12507:5:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12507:18:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12487:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12487:39:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12487:39:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "12434:1:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "12437:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "12431:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12431:13:25"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "12445:19:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12447:15:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "12456:1:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12459:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12452:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12452:10:25"
                              },
                              "variableNames": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "12447:1:25"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "12427:3:25",
                          "statements": []
                        },
                        "src": "12423:113:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12570:76:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "12620:3:25"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "12625:6:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12616:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12616:16:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12634:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12609:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12609:27:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12609:27:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "12551:1:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "12554:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "12548:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12548:13:25"
                        },
                        "nodeType": "YulIf",
                        "src": "12545:2:25"
                      }
                    ]
                  },
                  "name": "copy_memory_to_memory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "12376:3:25",
                      "type": ""
                    },
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "12381:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "12386:6:25",
                      "type": ""
                    }
                  ],
                  "src": "12345:307:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12709:269:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12719:22:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "12733:4:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12739:1:25",
                              "type": "",
                              "value": "2"
                            }
                          ],
                          "functionName": {
                            "name": "div",
                            "nodeType": "YulIdentifier",
                            "src": "12729:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12729:12:25"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "12719:6:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "12750:38:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "12780:4:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12786:1:25",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "12776:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12776:12:25"
                        },
                        "variables": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulTypedName",
                            "src": "12754:18:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12827:51:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12841:27:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "12855:6:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12863:4:25",
                                    "type": "",
                                    "value": "0x7f"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "12851:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12851:17:25"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "12841:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulIdentifier",
                              "src": "12807:18:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "12800:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12800:26:25"
                        },
                        "nodeType": "YulIf",
                        "src": "12797:2:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12930:42:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x22",
                                  "nodeType": "YulIdentifier",
                                  "src": "12944:16:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12944:18:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12944:18:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulIdentifier",
                              "src": "12894:18:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "12917:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12925:2:25",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "12914:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12914:14:25"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "12891:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12891:38:25"
                        },
                        "nodeType": "YulIf",
                        "src": "12888:2:25"
                      }
                    ]
                  },
                  "name": "extract_byte_array_length",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "data",
                      "nodeType": "YulTypedName",
                      "src": "12693:4:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "12702:6:25",
                      "type": ""
                    }
                  ],
                  "src": "12658:320:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13012:152:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13029:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13032:77:25",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13022:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13022:88:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13022:88:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13126:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13129:4:25",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13119:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13119:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13119:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13150:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13153:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13143:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13143:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13143:15:25"
                      }
                    ]
                  },
                  "name": "panic_error_0x21",
                  "nodeType": "YulFunctionDefinition",
                  "src": "12984:180:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13198:152:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13215:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13218:77:25",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13208:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13208:88:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13208:88:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13312:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13315:4:25",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13305:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13305:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13305:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13336:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13339:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13329:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13329:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13329:15:25"
                      }
                    ]
                  },
                  "name": "panic_error_0x22",
                  "nodeType": "YulFunctionDefinition",
                  "src": "13170:180:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13384:152:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13401:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13404:77:25",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13394:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13394:88:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13394:88:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13498:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13501:4:25",
                              "type": "",
                              "value": "0x41"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "13491:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13491:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13491:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13522:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13525:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13515:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13515:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13515:15:25"
                      }
                    ]
                  },
                  "name": "panic_error_0x41",
                  "nodeType": "YulFunctionDefinition",
                  "src": "13356:180:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13590:54:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13600:38:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "13618:5:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13625:2:25",
                                  "type": "",
                                  "value": "31"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "13614:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13614:14:25"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13634:2:25",
                                  "type": "",
                                  "value": "31"
                                }
                              ],
                              "functionName": {
                                "name": "not",
                                "nodeType": "YulIdentifier",
                                "src": "13630:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13630:7:25"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "13610:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13610:28:25"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "13600:6:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "round_up_to_mul_of_32",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "13573:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "result",
                      "nodeType": "YulTypedName",
                      "src": "13583:6:25",
                      "type": ""
                    }
                  ],
                  "src": "13542:102:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13718:62:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13752:22:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x21",
                                  "nodeType": "YulIdentifier",
                                  "src": "13754:16:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13754:18:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13754:18:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "13741:5:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13748:1:25",
                                  "type": "",
                                  "value": "7"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "13738:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13738:12:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "13731:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13731:20:25"
                        },
                        "nodeType": "YulIf",
                        "src": "13728:2:25"
                      }
                    ]
                  },
                  "name": "validator_assert_t_enum$_WorkRelationshipState_$759",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "13711:5:25",
                      "type": ""
                    }
                  ],
                  "src": "13650:130:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13829:79:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13886:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13895:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13898:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "13888:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13888:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13888:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "13852:5:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "13877:5:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_address",
                                    "nodeType": "YulIdentifier",
                                    "src": "13859:17:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13859:24:25"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "13849:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13849:35:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "13842:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13842:43:25"
                        },
                        "nodeType": "YulIf",
                        "src": "13839:2:25"
                      }
                    ]
                  },
                  "name": "validator_revert_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "13822:5:25",
                      "type": ""
                    }
                  ],
                  "src": "13786:122:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13965:87:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14030:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14039:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14042:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14032:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14032:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14032:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "13988:5:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "14021:5:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_address_payable",
                                    "nodeType": "YulIdentifier",
                                    "src": "13995:25:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13995:32:25"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "13985:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13985:43:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "13978:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13978:51:25"
                        },
                        "nodeType": "YulIf",
                        "src": "13975:2:25"
                      }
                    ]
                  },
                  "name": "validator_revert_t_address_payable",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "13958:5:25",
                      "type": ""
                    }
                  ],
                  "src": "13914:138:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14098:76:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14152:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14161:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14164:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14154:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14154:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14154:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "14121:5:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "14143:5:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_bool",
                                    "nodeType": "YulIdentifier",
                                    "src": "14128:14:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14128:21:25"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "14118:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14118:32:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "14111:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14111:40:25"
                        },
                        "nodeType": "YulIf",
                        "src": "14108:2:25"
                      }
                    ]
                  },
                  "name": "validator_revert_t_bool",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "14091:5:25",
                      "type": ""
                    }
                  ],
                  "src": "14058:116:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14223:79:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14280:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14289:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14292:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14282:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14282:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14282:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "14246:5:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "14271:5:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_uint256",
                                    "nodeType": "YulIdentifier",
                                    "src": "14253:17:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14253:24:25"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "14243:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14243:35:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "14236:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14236:43:25"
                        },
                        "nodeType": "YulIf",
                        "src": "14233:2:25"
                      }
                    ]
                  },
                  "name": "validator_revert_t_uint256",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "14216:5:25",
                      "type": ""
                    }
                  ],
                  "src": "14180:122:25"
                }
              ]
            },
            "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // struct Evaluation.EvaluationState\n    function abi_decode_t_struct$_EvaluationState_$751_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x60) { revert(0, 0) }\n        value := allocateMemory(0x60)\n\n        {\n            // industry\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            mstore(add(value, 0x00), abi_decode_t_string_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // industrylevel\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // reputation\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payablet_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payablet_struct$_EvaluationState_$751_memory_ptrt_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_struct$_EvaluationState_$751_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_enum$_WorkRelationshipState_$759_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_WorkRelationshipState_$759_to_t_uint8(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    // struct Evaluation.EvaluationState -> struct Evaluation.EvaluationState\n    function abi_encode_t_struct$_EvaluationState_$751_memory_ptr_to_t_struct$_EvaluationState_$751_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x60)\n\n        {\n            // industry\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // industrylevel\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // reputation\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_address_payable_t_bool__to_t_address_payable_t_address_payable_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_bool__to_t_address_payable_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_enum$_WorkRelationshipState_$759__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_WorkRelationshipState_$759_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_EvaluationState_$751_memory_ptr__to_t_struct$_EvaluationState_$751_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_EvaluationState_$751_memory_ptr_to_t_struct$_EvaluationState_$751_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_WorkRelationshipState_$759(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_WorkRelationshipState_$759(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_WorkRelationshipState_$759_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_WorkRelationshipState_$759(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_assert_t_enum$_WorkRelationshipState_$759(value) {\n        if iszero(lt(value, 7)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
            "id": 25,
            "language": "Yul",
            "name": "#utility.yul"
          }
        ],
        "sourceMap": "213:2040:6:-:0;;;638:32;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;677:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:17;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;743:8:6;723:17;:28;;;;;;;;;;;;:::i;:::-;;677:81;213:2040;;586:96:20;639:7;665:10;658:17;;586:96;:::o;213:2040:6:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:353:25:-;;121:65;136:49;178:6;136:49;:::i;:::-;121:65;:::i;:::-;112:74;;209:6;202:5;195:21;247:4;240:5;236:16;285:3;276:6;271:3;267:16;264:25;261:2;;;302:1;299;292:12;261:2;315:39;347:6;342:3;337;315:39;:::i;:::-;102:258;;;;;;:::o;380:288::-;;496:3;489:4;481:6;477:17;473:27;463:2;;514:1;511;504:12;463:2;547:6;541:13;572:90;658:3;650:6;643:4;635:6;631:17;572:90;:::i;:::-;563:99;;453:215;;;;;:::o;674:390::-;;803:2;791:9;782:7;778:23;774:32;771:2;;;819:1;816;809:12;771:2;883:1;872:9;868:17;862:24;913:18;905:6;902:30;899:2;;;945:1;942;935:12;899:2;973:74;1039:7;1030:6;1019:9;1015:22;973:74;:::i;:::-;963:84;;833:224;761:303;;;;:::o;1070:283::-;;1136:2;1130:9;1120:19;;1178:4;1170:6;1166:17;1285:6;1273:10;1270:22;1249:18;1237:10;1234:34;1231:62;1228:2;;;1296:18;;:::i;:::-;1228:2;1336:10;1332:2;1325:22;1110:243;;;;:::o;1359:332::-;;1511:18;1503:6;1500:30;1497:2;;;1533:18;;:::i;:::-;1497:2;1618:4;1614:9;1607:4;1599:6;1595:17;1591:33;1583:41;;1679:4;1673;1669:15;1661:23;;1426:265;;;:::o;1697:307::-;1765:1;1775:113;1789:6;1786:1;1783:13;1775:113;;;1874:1;1869:3;1865:11;1859:18;1855:1;1850:3;1846:11;1839:39;1811:2;1808:1;1804:10;1799:15;;1775:113;;;1906:6;1903:1;1900:13;1897:2;;;1986:1;1977:6;1972:3;1968:16;1961:27;1897:2;1746:258;;;;:::o;2010:320::-;;2091:1;2085:4;2081:12;2071:22;;2138:1;2132:4;2128:12;2159:18;2149:2;;2215:4;2207:6;2203:17;2193:27;;2149:2;2277;2269:6;2266:14;2246:18;2243:38;2240:2;;;2296:18;;:::i;:::-;2240:2;2061:269;;;;:::o;2336:180::-;2384:77;2381:1;2374:88;2481:4;2478:1;2471:15;2505:4;2502:1;2495:15;2522:180;2570:77;2567:1;2560:88;2667:4;2664:1;2657:15;2691:4;2688:1;2681:15;213:2040:6;;;;;;;",
        "deployedSourceMap": "213:2040:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1165:267;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;764:395;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2152:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1700:145:17;;;:::i;:::-;;1068:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;572:31:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2016:130;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1720:290;;;:::i;:::-;;470:55;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;531:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1994:240:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1165:267:6;1291:12:17;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1276:25:6::1;1329:7;:5;:7::i;:::-;1339:17;1358:12;1304:67;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1276:95;;1412:12;1381:20;;:44;;;;;;;;;;;;;;;;;;1350:1:17;1165:267:6::0;;:::o;764:395::-;1291:12:17;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;915:21:6::1;939:49;961:9;972:15;939:21;:49::i;:::-;915:73;;1026:4;1006:24;;:16;:24;;;998:33;;;::::0;::::1;;1042:4;:23;;;1066:9;1077:12;1042:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1146:4;1105:47;;1129:7;:5;:7::i;:::-;1105:47;;;;;;;;;;;;1350:1:17;764:395:6::0;;;:::o;2152:99::-;2200:13;2232:12;2225:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2152:99;:::o;1700:145:17:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;1068:85::-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;572:31:6:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2016:130::-;1291:12:17;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2121:18:6::1;2106:12;:33;;;;;;;;;;;;:::i;:::-;;2016:130:::0;:::o;1720:290::-;1291:12:17;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1809:42:6::1;1790:61;;;;;;;;;;;;;;;;:15;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;:126;;;;1874:42;1855:61;;;;;;;;;;;;;;;;:15;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;1790:126;1782:135;;;::::0;::::1;;1971:4;1932:45;;1954:7;:5;:7::i;:::-;1932:45;;;;;;;;;;;;1720:290::o:0;470:55::-;;;;;;;;;;;;;:::o;531:35::-;;;;;;;;;;;;;:::o;1994:240:17:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;586:96:20:-;639:7;665:10;658:17;;586:96;:::o;1438:276:6:-;1569:4;1585:21;1621:22;1609:48;;;1658:15;1609:65;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1585:89;;1691:16;1684:23;;;1438:276;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:344:25:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;357:139::-;;441:6;428:20;419:29;;457:33;484:5;457:33;:::i;:::-;409:87;;;;:::o;502:155::-;;594:6;581:20;572:29;;610:41;645:5;610:41;:::i;:::-;562:95;;;;:::o;663:133::-;;744:6;731:20;722:29;;760:30;784:5;760:30;:::i;:::-;712:84;;;;:::o;802:137::-;;887:6;881:13;872:22;;903:30;927:5;903:30;:::i;:::-;862:77;;;;:::o;959:273::-;;1064:3;1057:4;1049:6;1045:17;1041:27;1031:2;;1082:1;1079;1072:12;1031:2;1122:6;1109:20;1147:79;1222:3;1214:6;1207:4;1199:6;1195:17;1147:79;:::i;:::-;1138:88;;1021:211;;;;;:::o;1279:796::-;;1404:4;1392:9;1387:3;1383:19;1379:30;1376:2;;;1422:1;1419;1412:12;1376:2;1444:20;1459:4;1444:20;:::i;:::-;1435:29;;1555:1;1544:9;1540:17;1527:31;1585:18;1577:6;1574:30;1571:2;;;1617:1;1614;1607:12;1571:2;1660:59;1715:3;1706:6;1695:9;1691:22;1660:59;:::i;:::-;1653:4;1646:5;1642:16;1635:85;1474:257;1799:2;1840:49;1885:3;1876:6;1865:9;1861:22;1840:49;:::i;:::-;1833:4;1826:5;1822:16;1815:75;1741:160;1966:2;2007:49;2052:3;2043:6;2032:9;2028:22;2007:49;:::i;:::-;2000:4;1993:5;1989:16;1982:75;1911:157;1366:709;;;;:::o;2081:139::-;;2165:6;2152:20;2143:29;;2181:33;2208:5;2181:33;:::i;:::-;2133:87;;;;:::o;2226:262::-;;2334:2;2322:9;2313:7;2309:23;2305:32;2302:2;;;2350:1;2347;2340:12;2302:2;2393:1;2418:53;2463:7;2454:6;2443:9;2439:22;2418:53;:::i;:::-;2408:63;;2364:117;2292:196;;;;:::o;2494:417::-;;;2624:2;2612:9;2603:7;2599:23;2595:32;2592:2;;;2640:1;2637;2630:12;2592:2;2683:1;2708:61;2761:7;2752:6;2741:9;2737:22;2708:61;:::i;:::-;2698:71;;2654:125;2818:2;2844:50;2886:7;2877:6;2866:9;2862:22;2844:50;:::i;:::-;2834:60;;2789:115;2582:329;;;;;:::o;2917:719::-;;;;3096:2;3084:9;3075:7;3071:23;3067:32;3064:2;;;3112:1;3109;3102:12;3064:2;3155:1;3180:61;3233:7;3224:6;3213:9;3209:22;3180:61;:::i;:::-;3170:71;;3126:125;3318:2;3307:9;3303:18;3290:32;3349:18;3341:6;3338:30;3335:2;;;3381:1;3378;3371:12;3335:2;3409:85;3486:7;3477:6;3466:9;3462:22;3409:85;:::i;:::-;3399:95;;3261:243;3543:2;3569:50;3611:7;3602:6;3591:9;3587:22;3569:50;:::i;:::-;3559:60;;3514:115;3054:582;;;;;:::o;3642:278::-;;3758:2;3746:9;3737:7;3733:23;3729:32;3726:2;;;3774:1;3771;3764:12;3726:2;3817:1;3842:61;3895:7;3886:6;3875:9;3871:22;3842:61;:::i;:::-;3832:71;;3788:125;3716:204;;;;:::o;3926:375::-;;4044:2;4032:9;4023:7;4019:23;4015:32;4012:2;;;4060:1;4057;4050:12;4012:2;4131:1;4120:9;4116:17;4103:31;4161:18;4153:6;4150:30;4147:2;;;4193:1;4190;4183:12;4147:2;4221:63;4276:7;4267:6;4256:9;4252:22;4221:63;:::i;:::-;4211:73;;4074:220;4002:299;;;;:::o;4307:142::-;4410:32;4436:5;4410:32;:::i;:::-;4405:3;4398:45;4388:61;;:::o;4455:118::-;4542:24;4560:5;4542:24;:::i;:::-;4537:3;4530:37;4520:53;;:::o;4579:109::-;4660:21;4675:5;4660:21;:::i;:::-;4655:3;4648:34;4638:50;;:::o;4694:177::-;4804:60;4858:5;4804:60;:::i;:::-;4799:3;4792:73;4782:89;;:::o;4877:344::-;;4983:39;5016:5;4983:39;:::i;:::-;5038:61;5092:6;5087:3;5038:61;:::i;:::-;5031:68;;5108:52;5153:6;5148:3;5141:4;5134:5;5130:16;5108:52;:::i;:::-;5185:29;5207:6;5185:29;:::i;:::-;5180:3;5176:39;5169:46;;4959:262;;;;;:::o;5227:364::-;;5343:39;5376:5;5343:39;:::i;:::-;5398:71;5462:6;5457:3;5398:71;:::i;:::-;5391:78;;5478:52;5523:6;5518:3;5511:4;5504:5;5500:16;5478:52;:::i;:::-;5555:29;5577:6;5555:29;:::i;:::-;5550:3;5546:39;5539:46;;5319:272;;;;;:::o;5597:370::-;;5760:67;5824:2;5819:3;5760:67;:::i;:::-;5753:74;;5857:34;5853:1;5848:3;5844:11;5837:55;5923:8;5918:2;5913:3;5909:12;5902:30;5958:2;5953:3;5949:12;5942:19;;5743:224;;;:::o;5973:330::-;;6136:67;6200:2;6195:3;6136:67;:::i;:::-;6129:74;;6233:34;6229:1;6224:3;6220:11;6213:55;6294:2;6289:3;6285:12;6278:19;;6119:184;;;:::o;6387:813::-;;6556:4;6551:3;6547:14;6647:4;6640:5;6636:16;6630:23;6700:3;6694:4;6690:14;6683:4;6678:3;6674:14;6667:38;6726:73;6794:4;6780:12;6726:73;:::i;:::-;6718:81;;6571:239;6901:4;6894:5;6890:16;6884:23;6920:63;6977:4;6972:3;6968:14;6954:12;6920:63;:::i;:::-;6820:173;7081:4;7074:5;7070:16;7064:23;7100:63;7157:4;7152:3;7148:14;7134:12;7100:63;:::i;:::-;7003:170;7190:4;7183:11;;6525:675;;;;;:::o;7206:108::-;7283:24;7301:5;7283:24;:::i;:::-;7278:3;7271:37;7261:53;;:::o;7320:222::-;;7451:2;7440:9;7436:18;7428:26;;7464:71;7532:1;7521:9;7517:17;7508:6;7464:71;:::i;:::-;7418:124;;;;:::o;7548:494::-;;7761:2;7750:9;7746:18;7738:26;;7774:87;7858:1;7847:9;7843:17;7834:6;7774:87;:::i;:::-;7871:88;7955:2;7944:9;7940:18;7931:6;7871:88;:::i;:::-;7969:66;8031:2;8020:9;8016:18;8007:6;7969:66;:::i;:::-;7728:314;;;;;;:::o;8048:352::-;;8217:2;8206:9;8202:18;8194:26;;8230:87;8314:1;8303:9;8299:17;8290:6;8230:87;:::i;:::-;8327:66;8389:2;8378:9;8374:18;8365:6;8327:66;:::i;:::-;8184:216;;;;;:::o;8406:268::-;;8560:2;8549:9;8545:18;8537:26;;8573:94;8664:1;8653:9;8649:17;8640:6;8573:94;:::i;:::-;8527:147;;;;:::o;8680:313::-;;8831:2;8820:9;8816:18;8808:26;;8880:9;8874:4;8870:20;8866:1;8855:9;8851:17;8844:47;8908:78;8981:4;8972:6;8908:78;:::i;:::-;8900:86;;8798:195;;;;:::o;8999:419::-;;9203:2;9192:9;9188:18;9180:26;;9252:9;9246:4;9242:20;9238:1;9227:9;9223:17;9216:47;9280:131;9406:4;9280:131;:::i;:::-;9272:139;;9170:248;;;:::o;9424:419::-;;9628:2;9617:9;9613:18;9605:26;;9677:9;9671:4;9667:20;9663:1;9652:9;9648:17;9641:47;9705:131;9831:4;9705:131;:::i;:::-;9697:139;;9595:248;;;:::o;9849:401::-;;10044:2;10033:9;10029:18;10021:26;;10093:9;10087:4;10083:20;10079:1;10068:9;10064:17;10057:47;10121:122;10238:4;10229:6;10121:122;:::i;:::-;10113:130;;10011:239;;;;:::o;10256:283::-;;10322:2;10316:9;10306:19;;10364:4;10356:6;10352:17;10471:6;10459:10;10456:22;10435:18;10423:10;10420:34;10417:62;10414:2;;;10482:18;;:::i;:::-;10414:2;10522:10;10518:2;10511:22;10296:243;;;;:::o;10545:332::-;;10697:18;10689:6;10686:30;10683:2;;;10719:18;;:::i;:::-;10683:2;10804:4;10800:9;10793:4;10785:6;10781:17;10777:33;10769:41;;10865:4;10859;10855:15;10847:23;;10612:265;;;:::o;10883:99::-;;10969:5;10963:12;10953:22;;10942:40;;;:::o;10988:159::-;;11096:6;11091:3;11084:19;11136:4;11131:3;11127:14;11112:29;;11074:73;;;;:::o;11153:169::-;;11271:6;11266:3;11259:19;11311:4;11306:3;11302:14;11287:29;;11249:73;;;;:::o;11328:96::-;;11394:24;11412:5;11394:24;:::i;:::-;11383:35;;11373:51;;;:::o;11430:104::-;;11504:24;11522:5;11504:24;:::i;:::-;11493:35;;11483:51;;;:::o;11540:90::-;;11617:5;11610:13;11603:21;11592:32;;11582:48;;;:::o;11636:161::-;;11727:5;11716:16;;11733:58;11785:5;11733:58;:::i;:::-;11706:91;;;:::o;11803:126::-;;11880:42;11873:5;11869:54;11858:65;;11848:81;;;:::o;11935:77::-;;12001:5;11990:16;;11980:32;;;:::o;12018:161::-;;12124:49;12167:5;12124:49;:::i;:::-;12111:62;;12101:78;;;:::o;12185:154::-;12269:6;12264:3;12259;12246:30;12331:1;12322:6;12317:3;12313:16;12306:27;12236:103;;;:::o;12345:307::-;12413:1;12423:113;12437:6;12434:1;12431:13;12423:113;;;12522:1;12517:3;12513:11;12507:18;12503:1;12498:3;12494:11;12487:39;12459:2;12456:1;12452:10;12447:15;;12423:113;;;12554:6;12551:1;12548:13;12545:2;;;12634:1;12625:6;12620:3;12616:16;12609:27;12545:2;12394:258;;;;:::o;12658:320::-;;12739:1;12733:4;12729:12;12719:22;;12786:1;12780:4;12776:12;12807:18;12797:2;;12863:4;12855:6;12851:17;12841:27;;12797:2;12925;12917:6;12914:14;12894:18;12891:38;12888:2;;;12944:18;;:::i;:::-;12888:2;12709:269;;;;:::o;12984:180::-;13032:77;13029:1;13022:88;13129:4;13126:1;13119:15;13153:4;13150:1;13143:15;13170:180;13218:77;13215:1;13208:88;13315:4;13312:1;13305:15;13339:4;13336:1;13329:15;13356:180;13404:77;13401:1;13394:88;13501:4;13498:1;13491:15;13525:4;13522:1;13515:15;13542:102;;13634:2;13630:7;13625:2;13618:5;13614:14;13610:28;13600:38;;13590:54;;;:::o;13650:130::-;13748:1;13741:5;13738:12;13728:2;;13754:18;;:::i;:::-;13728:2;13718:62;:::o;13786:122::-;13859:24;13877:5;13859:24;:::i;:::-;13852:5;13849:35;13839:2;;13898:1;13895;13888:12;13839:2;13829:79;:::o;13914:138::-;13995:32;14021:5;13995:32;:::i;:::-;13988:5;13985:43;13975:2;;14042:1;14039;14032:12;13975:2;13965:87;:::o;14058:116::-;14128:21;14143:5;14128:21;:::i;:::-;14121:5;14118:32;14108:2;;14164:1;14161;14154:12;14108:2;14098:76;:::o;14180:122::-;14253:24;14271:5;14253:24;:::i;:::-;14246:5;14243:35;14233:2;;14292:1;14289;14282:12;14233:2;14223:79;:::o",
        "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./WorkExchange.sol\";\nimport \"../user/UserSummary.sol\";\nimport \"../libraries/Evaluation.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract WorkRelationship is Ownable {\n    event WorkRelationshipCreated(address indexed _owner, address indexed relationship);\n    event WorkRelationshipEnded(address indexed owner, address indexed relationship);\n\n    // Status of the current contract\n    Evaluation.WorkRelationshipState public _contractStatus;\n    address public _workExchangeAddress;\n    string public _contractTaskName;\n    // Task solution pointer\n    string private _taskPointer = \"\";\n\n    constructor(string memory taskName) {\n        _contractTaskName = taskName;\n    }\n\n    function assignNewWorker(address payable newWorker, Evaluation.EvaluationState memory evaluationState, bool isTimeLocked) external onlyOwner {\n        bool passesEvaluation = checkWorkerEvaluation(newWorker, evaluationState);\n        require(passesEvaluation == true);\n\n        this.createWorkExchange(newWorker, isTimeLocked);\n        emit WorkRelationshipCreated(owner(), address(this));\n    }\n\n    function createWorkExchange(address payable workerBeneficiary, bool isTimeLocked) external onlyOwner {\n        WorkExchange workExchange = new WorkExchange(payable(owner()), workerBeneficiary, isTimeLocked);\n        _workExchangeAddress = address(workExchange);\n    }\n\n    function checkWorkerEvaluation(address workerUniversalAddress, Evaluation.EvaluationState memory evaluationState) internal returns(bool) {\n        bool passesEvaluation = UserSummary(workerUniversalAddress).evaluateUser(evaluationState);\n        return passesEvaluation;\n    }\n\n    function disableWorkRelationship() public onlyOwner {\n        require(_contractStatus == Evaluation.WorkRelationshipState.COMPLETED || _contractStatus == Evaluation.WorkRelationshipState.COMPLETED);\n        emit WorkRelationshipEnded(owner(), address(this));\n        //selfdestruct();\n    }\n\n    function updateTaskPointer(string memory newTaskPointerHash) external onlyOwner {\n        _taskPointer = newTaskPointerHash;\n    }\n\n    function getTaskPointer() view external returns(string memory) {\n        return _taskPointer;\n    }\n}",
        "sourcePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkRelationship.sol",
        "ast": {
          "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkRelationship.sol",
          "exportedSymbols": {
            "Address": [
              2205
            ],
            "ConditionalEscrow": [
              2263
            ],
            "Context": [
              2228
            ],
            "Escrow": [
              2363
            ],
            "Evaluation": [
              760
            ],
            "IUserSummary": [
              1707
            ],
            "MultiPartyOwneable": [
              363
            ],
            "Ownable": [
              1817
            ],
            "RefundEscrow": [
              2542
            ],
            "SafeMath": [
              2854
            ],
            "StringUtils": [
              1010
            ],
            "User": [
              1030
            ],
            "UserSummary": [
              1567
            ],
            "WorkExchange": [
              556
            ],
            "WorkRelationship": [
              742
            ]
          },
          "id": 743,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 558,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:6"
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkExchange.sol",
              "file": "./WorkExchange.sol",
              "id": 559,
              "nodeType": "ImportDirective",
              "scope": 743,
              "sourceUnit": 557,
              "src": "58:28:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/user/UserSummary.sol",
              "file": "../user/UserSummary.sol",
              "id": 560,
              "nodeType": "ImportDirective",
              "scope": 743,
              "sourceUnit": 1568,
              "src": "87:33:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/Evaluation.sol",
              "file": "../libraries/Evaluation.sol",
              "id": 561,
              "nodeType": "ImportDirective",
              "scope": 743,
              "sourceUnit": 761,
              "src": "121:37:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 562,
              "nodeType": "ImportDirective",
              "scope": 743,
              "sourceUnit": 1818,
              "src": "159:52:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 563,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1817,
                    "src": "242:7:6"
                  },
                  "id": 564,
                  "nodeType": "InheritanceSpecifier",
                  "src": "242:7:6"
                }
              ],
              "contractDependencies": [
                556,
                1817,
                2228
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 742,
              "linearizedBaseContracts": [
                742,
                1817,
                2228
              ],
              "name": "WorkRelationship",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 570,
                  "name": "WorkRelationshipCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 569,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 566,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 570,
                        "src": "286:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 565,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "286:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 568,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 570,
                        "src": "310:28:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 567,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "310:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "285:54:6"
                  },
                  "src": "256:84:6"
                },
                {
                  "anonymous": false,
                  "id": 576,
                  "name": "WorkRelationshipEnded",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 575,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 572,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 576,
                        "src": "373:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "373:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 574,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 576,
                        "src": "396:28:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 573,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "396:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "372:53:6"
                  },
                  "src": "345:81:6"
                },
                {
                  "constant": false,
                  "functionSelector": "e6e88593",
                  "id": 579,
                  "mutability": "mutable",
                  "name": "_contractStatus",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "470:55:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_WorkRelationshipState_$759",
                    "typeString": "enum Evaluation.WorkRelationshipState"
                  },
                  "typeName": {
                    "id": 578,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 577,
                      "name": "Evaluation.WorkRelationshipState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 759,
                      "src": "470:32:6"
                    },
                    "referencedDeclaration": 759,
                    "src": "470:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_WorkRelationshipState_$759",
                      "typeString": "enum Evaluation.WorkRelationshipState"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "eebc6e3d",
                  "id": 581,
                  "mutability": "mutable",
                  "name": "_workExchangeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "531:35:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "95cd34e3",
                  "id": 583,
                  "mutability": "mutable",
                  "name": "_contractTaskName",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "572:31:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 586,
                  "mutability": "mutable",
                  "name": "_taskPointer",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "638:32:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "",
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "668:2:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 595,
                    "nodeType": "Block",
                    "src": "713:45:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 591,
                            "name": "_contractTaskName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "723:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 592,
                            "name": "taskName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 588,
                            "src": "743:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "723:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 594,
                        "nodeType": "ExpressionStatement",
                        "src": "723:28:6"
                      }
                    ]
                  },
                  "id": 596,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 589,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 588,
                        "mutability": "mutable",
                        "name": "taskName",
                        "nodeType": "VariableDeclaration",
                        "scope": 596,
                        "src": "689:22:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 587,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "689:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "688:24:6"
                  },
                  "returnParameters": {
                    "id": 590,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "713:0:6"
                  },
                  "scope": 742,
                  "src": "677:81:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 637,
                    "nodeType": "Block",
                    "src": "905:254:6",
                    "statements": [
                      {
                        "assignments": [
                          609
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 609,
                            "mutability": "mutable",
                            "name": "passesEvaluation",
                            "nodeType": "VariableDeclaration",
                            "scope": 637,
                            "src": "915:21:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 608,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "915:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 614,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 611,
                              "name": "newWorker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 598,
                              "src": "961:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 612,
                              "name": "evaluationState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "972:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EvaluationState_$751_memory_ptr",
                                "typeString": "struct Evaluation.EvaluationState memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_struct$_EvaluationState_$751_memory_ptr",
                                "typeString": "struct Evaluation.EvaluationState memory"
                              }
                            ],
                            "id": 610,
                            "name": "checkWorkerEvaluation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 692,
                            "src": "939:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_EvaluationState_$751_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (address,struct Evaluation.EvaluationState memory) returns (bool)"
                            }
                          },
                          "id": 613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "939:49:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "915:73:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 616,
                                "name": "passesEvaluation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 609,
                                "src": "1006:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1026:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "1006:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 615,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "998:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "998:33:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 620,
                        "nodeType": "ExpressionStatement",
                        "src": "998:33:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 624,
                              "name": "newWorker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 598,
                              "src": "1066:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 625,
                              "name": "isTimeLocked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 603,
                              "src": "1077:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 621,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "1042:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WorkRelationship_$742",
                                "typeString": "contract WorkRelationship"
                              }
                            },
                            "id": 623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "createWorkExchange",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 670,
                            "src": "1042:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_bool_$returns$__$",
                              "typeString": "function (address payable,bool) external"
                            }
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1042:48:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 627,
                        "nodeType": "ExpressionStatement",
                        "src": "1042:48:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 629,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1752,
                                "src": "1129:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1129:7:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 633,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1146:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_WorkRelationship_$742",
                                    "typeString": "contract WorkRelationship"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_WorkRelationship_$742",
                                    "typeString": "contract WorkRelationship"
                                  }
                                ],
                                "id": 632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1138:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 631,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1138:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1138:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 628,
                            "name": "WorkRelationshipCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 570,
                            "src": "1105:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1105:47:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 636,
                        "nodeType": "EmitStatement",
                        "src": "1100:52:6"
                      }
                    ]
                  },
                  "functionSelector": "4568a94e",
                  "id": 638,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 606,
                      "modifierName": {
                        "id": 605,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1766,
                        "src": "895:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "895:9:6"
                    }
                  ],
                  "name": "assignNewWorker",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 604,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 598,
                        "mutability": "mutable",
                        "name": "newWorker",
                        "nodeType": "VariableDeclaration",
                        "scope": 638,
                        "src": "789:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 597,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "789:15:6",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 601,
                        "mutability": "mutable",
                        "name": "evaluationState",
                        "nodeType": "VariableDeclaration",
                        "scope": 638,
                        "src": "816:49:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EvaluationState_$751_memory_ptr",
                          "typeString": "struct Evaluation.EvaluationState"
                        },
                        "typeName": {
                          "id": 600,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 599,
                            "name": "Evaluation.EvaluationState",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 751,
                            "src": "816:26:6"
                          },
                          "referencedDeclaration": 751,
                          "src": "816:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EvaluationState_$751_storage_ptr",
                            "typeString": "struct Evaluation.EvaluationState"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 603,
                        "mutability": "mutable",
                        "name": "isTimeLocked",
                        "nodeType": "VariableDeclaration",
                        "scope": 638,
                        "src": "867:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 602,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "867:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "788:97:6"
                  },
                  "returnParameters": {
                    "id": 607,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "905:0:6"
                  },
                  "scope": 742,
                  "src": "764:395:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 669,
                    "nodeType": "Block",
                    "src": "1266:166:6",
                    "statements": [
                      {
                        "assignments": [
                          649
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 649,
                            "mutability": "mutable",
                            "name": "workExchange",
                            "nodeType": "VariableDeclaration",
                            "scope": 669,
                            "src": "1276:25:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WorkExchange_$556",
                              "typeString": "contract WorkExchange"
                            },
                            "typeName": {
                              "id": 648,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 647,
                                "name": "WorkExchange",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 556,
                                "src": "1276:12:6"
                              },
                              "referencedDeclaration": 556,
                              "src": "1276:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WorkExchange_$556",
                                "typeString": "contract WorkExchange"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 661,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 655,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1752,
                                    "src": "1329:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 656,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1329:7:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1321:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 653,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1321:8:6",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1321:16:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 658,
                              "name": "workerBeneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 640,
                              "src": "1339:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 659,
                              "name": "isTimeLocked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "1358:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1304:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_payable_$_t_address_payable_$_t_bool_$returns$_t_contract$_WorkExchange_$556_$",
                              "typeString": "function (address payable,address payable,bool) returns (contract WorkExchange)"
                            },
                            "typeName": {
                              "id": 651,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 650,
                                "name": "WorkExchange",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 556,
                                "src": "1308:12:6"
                              },
                              "referencedDeclaration": 556,
                              "src": "1308:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WorkExchange_$556",
                                "typeString": "contract WorkExchange"
                              }
                            }
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1304:67:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WorkExchange_$556",
                            "typeString": "contract WorkExchange"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1276:95:6"
                      },
                      {
                        "expression": {
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 662,
                            "name": "_workExchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "1381:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 665,
                                "name": "workExchange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 649,
                                "src": "1412:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_WorkExchange_$556",
                                  "typeString": "contract WorkExchange"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_WorkExchange_$556",
                                  "typeString": "contract WorkExchange"
                                }
                              ],
                              "id": 664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1404:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 663,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1404:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1404:21:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1381:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 668,
                        "nodeType": "ExpressionStatement",
                        "src": "1381:44:6"
                      }
                    ]
                  },
                  "functionSelector": "446a02b3",
                  "id": 670,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 645,
                      "modifierName": {
                        "id": 644,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1766,
                        "src": "1256:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1256:9:6"
                    }
                  ],
                  "name": "createWorkExchange",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 643,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 640,
                        "mutability": "mutable",
                        "name": "workerBeneficiary",
                        "nodeType": "VariableDeclaration",
                        "scope": 670,
                        "src": "1193:33:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 639,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1193:15:6",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 642,
                        "mutability": "mutable",
                        "name": "isTimeLocked",
                        "nodeType": "VariableDeclaration",
                        "scope": 670,
                        "src": "1228:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 641,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1228:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1192:54:6"
                  },
                  "returnParameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1266:0:6"
                  },
                  "scope": 742,
                  "src": "1165:267:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 691,
                    "nodeType": "Block",
                    "src": "1575:139:6",
                    "statements": [
                      {
                        "assignments": [
                          681
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 681,
                            "mutability": "mutable",
                            "name": "passesEvaluation",
                            "nodeType": "VariableDeclaration",
                            "scope": 691,
                            "src": "1585:21:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 680,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1585:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 688,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 686,
                              "name": "evaluationState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 675,
                              "src": "1658:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EvaluationState_$751_memory_ptr",
                                "typeString": "struct Evaluation.EvaluationState memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_EvaluationState_$751_memory_ptr",
                                "typeString": "struct Evaluation.EvaluationState memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 683,
                                  "name": "workerUniversalAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 672,
                                  "src": "1621:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 682,
                                "name": "UserSummary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1567,
                                "src": "1609:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_UserSummary_$1567_$",
                                  "typeString": "type(contract UserSummary)"
                                }
                              },
                              "id": 684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1609:35:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UserSummary_$1567",
                                "typeString": "contract UserSummary"
                              }
                            },
                            "id": 685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "evaluateUser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1566,
                            "src": "1609:48:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_struct$_EvaluationState_$751_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (struct Evaluation.EvaluationState memory) external returns (bool)"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1609:65:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1585:89:6"
                      },
                      {
                        "expression": {
                          "id": 689,
                          "name": "passesEvaluation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "1691:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 679,
                        "id": 690,
                        "nodeType": "Return",
                        "src": "1684:23:6"
                      }
                    ]
                  },
                  "id": 692,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkWorkerEvaluation",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 676,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 672,
                        "mutability": "mutable",
                        "name": "workerUniversalAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "1469:30:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 671,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1469:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 675,
                        "mutability": "mutable",
                        "name": "evaluationState",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "1501:49:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EvaluationState_$751_memory_ptr",
                          "typeString": "struct Evaluation.EvaluationState"
                        },
                        "typeName": {
                          "id": 674,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 673,
                            "name": "Evaluation.EvaluationState",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 751,
                            "src": "1501:26:6"
                          },
                          "referencedDeclaration": 751,
                          "src": "1501:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EvaluationState_$751_storage_ptr",
                            "typeString": "struct Evaluation.EvaluationState"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1468:83:6"
                  },
                  "returnParameters": {
                    "id": 679,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 678,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "1569:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 677,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1569:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1568:6:6"
                  },
                  "scope": 742,
                  "src": "1438:276:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 720,
                    "nodeType": "Block",
                    "src": "1772:238:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_WorkRelationshipState_$759",
                                  "typeString": "enum Evaluation.WorkRelationshipState"
                                },
                                "id": 702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 698,
                                  "name": "_contractStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 579,
                                  "src": "1790:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_WorkRelationshipState_$759",
                                    "typeString": "enum Evaluation.WorkRelationshipState"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 699,
                                      "name": "Evaluation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 760,
                                      "src": "1809:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Evaluation_$760_$",
                                        "typeString": "type(library Evaluation)"
                                      }
                                    },
                                    "id": 700,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "WorkRelationshipState",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 759,
                                    "src": "1809:32:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_WorkRelationshipState_$759_$",
                                      "typeString": "type(enum Evaluation.WorkRelationshipState)"
                                    }
                                  },
                                  "id": 701,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "COMPLETED",
                                  "nodeType": "MemberAccess",
                                  "src": "1809:42:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_WorkRelationshipState_$759",
                                    "typeString": "enum Evaluation.WorkRelationshipState"
                                  }
                                },
                                "src": "1790:61:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_WorkRelationshipState_$759",
                                  "typeString": "enum Evaluation.WorkRelationshipState"
                                },
                                "id": 707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 703,
                                  "name": "_contractStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 579,
                                  "src": "1855:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_WorkRelationshipState_$759",
                                    "typeString": "enum Evaluation.WorkRelationshipState"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 704,
                                      "name": "Evaluation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 760,
                                      "src": "1874:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Evaluation_$760_$",
                                        "typeString": "type(library Evaluation)"
                                      }
                                    },
                                    "id": 705,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "WorkRelationshipState",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 759,
                                    "src": "1874:32:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_WorkRelationshipState_$759_$",
                                      "typeString": "type(enum Evaluation.WorkRelationshipState)"
                                    }
                                  },
                                  "id": 706,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "COMPLETED",
                                  "nodeType": "MemberAccess",
                                  "src": "1874:42:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_WorkRelationshipState_$759",
                                    "typeString": "enum Evaluation.WorkRelationshipState"
                                  }
                                },
                                "src": "1855:61:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1790:126:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 697,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1782:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1782:135:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 710,
                        "nodeType": "ExpressionStatement",
                        "src": "1782:135:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 712,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1752,
                                "src": "1954:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1954:7:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 716,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1971:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_WorkRelationship_$742",
                                    "typeString": "contract WorkRelationship"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_WorkRelationship_$742",
                                    "typeString": "contract WorkRelationship"
                                  }
                                ],
                                "id": 715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1963:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 714,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1963:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1963:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 711,
                            "name": "WorkRelationshipEnded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "1932:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1932:45:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 719,
                        "nodeType": "EmitStatement",
                        "src": "1927:50:6"
                      }
                    ]
                  },
                  "functionSelector": "ce079b9a",
                  "id": 721,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 695,
                      "modifierName": {
                        "id": 694,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1766,
                        "src": "1762:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1762:9:6"
                    }
                  ],
                  "name": "disableWorkRelationship",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 693,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1752:2:6"
                  },
                  "returnParameters": {
                    "id": 696,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1772:0:6"
                  },
                  "scope": 742,
                  "src": "1720:290:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 732,
                    "nodeType": "Block",
                    "src": "2096:50:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 728,
                            "name": "_taskPointer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "2106:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 729,
                            "name": "newTaskPointerHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 723,
                            "src": "2121:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2106:33:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 731,
                        "nodeType": "ExpressionStatement",
                        "src": "2106:33:6"
                      }
                    ]
                  },
                  "functionSelector": "c34533a9",
                  "id": 733,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 726,
                      "modifierName": {
                        "id": 725,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1766,
                        "src": "2086:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2086:9:6"
                    }
                  ],
                  "name": "updateTaskPointer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 724,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 723,
                        "mutability": "mutable",
                        "name": "newTaskPointerHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 733,
                        "src": "2043:32:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 722,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2043:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2042:34:6"
                  },
                  "returnParameters": {
                    "id": 727,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2096:0:6"
                  },
                  "scope": 742,
                  "src": "2016:130:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 740,
                    "nodeType": "Block",
                    "src": "2215:36:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 738,
                          "name": "_taskPointer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "2232:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 737,
                        "id": 739,
                        "nodeType": "Return",
                        "src": "2225:19:6"
                      }
                    ]
                  },
                  "functionSelector": "4a67f548",
                  "id": 741,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTaskPointer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 734,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2175:2:6"
                  },
                  "returnParameters": {
                    "id": 737,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 736,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 741,
                        "src": "2200:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 735,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2200:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2199:15:6"
                  },
                  "scope": 742,
                  "src": "2152:99:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 743,
              "src": "213:2040:6"
            }
          ],
          "src": "33:2220:6"
        },
        "legacyAST": {
          "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkRelationship.sol",
          "exportedSymbols": {
            "Address": [
              2205
            ],
            "ConditionalEscrow": [
              2263
            ],
            "Context": [
              2228
            ],
            "Escrow": [
              2363
            ],
            "Evaluation": [
              760
            ],
            "IUserSummary": [
              1707
            ],
            "MultiPartyOwneable": [
              363
            ],
            "Ownable": [
              1817
            ],
            "RefundEscrow": [
              2542
            ],
            "SafeMath": [
              2854
            ],
            "StringUtils": [
              1010
            ],
            "User": [
              1030
            ],
            "UserSummary": [
              1567
            ],
            "WorkExchange": [
              556
            ],
            "WorkRelationship": [
              742
            ]
          },
          "id": 743,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 558,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:6"
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkExchange.sol",
              "file": "./WorkExchange.sol",
              "id": 559,
              "nodeType": "ImportDirective",
              "scope": 743,
              "sourceUnit": 557,
              "src": "58:28:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/user/UserSummary.sol",
              "file": "../user/UserSummary.sol",
              "id": 560,
              "nodeType": "ImportDirective",
              "scope": 743,
              "sourceUnit": 1568,
              "src": "87:33:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/Evaluation.sol",
              "file": "../libraries/Evaluation.sol",
              "id": 561,
              "nodeType": "ImportDirective",
              "scope": 743,
              "sourceUnit": 761,
              "src": "121:37:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 562,
              "nodeType": "ImportDirective",
              "scope": 743,
              "sourceUnit": 1818,
              "src": "159:52:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 563,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1817,
                    "src": "242:7:6"
                  },
                  "id": 564,
                  "nodeType": "InheritanceSpecifier",
                  "src": "242:7:6"
                }
              ],
              "contractDependencies": [
                556,
                1817,
                2228
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 742,
              "linearizedBaseContracts": [
                742,
                1817,
                2228
              ],
              "name": "WorkRelationship",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 570,
                  "name": "WorkRelationshipCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 569,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 566,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 570,
                        "src": "286:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 565,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "286:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 568,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 570,
                        "src": "310:28:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 567,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "310:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "285:54:6"
                  },
                  "src": "256:84:6"
                },
                {
                  "anonymous": false,
                  "id": 576,
                  "name": "WorkRelationshipEnded",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 575,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 572,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 576,
                        "src": "373:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "373:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 574,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "relationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 576,
                        "src": "396:28:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 573,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "396:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "372:53:6"
                  },
                  "src": "345:81:6"
                },
                {
                  "constant": false,
                  "functionSelector": "e6e88593",
                  "id": 579,
                  "mutability": "mutable",
                  "name": "_contractStatus",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "470:55:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_WorkRelationshipState_$759",
                    "typeString": "enum Evaluation.WorkRelationshipState"
                  },
                  "typeName": {
                    "id": 578,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 577,
                      "name": "Evaluation.WorkRelationshipState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 759,
                      "src": "470:32:6"
                    },
                    "referencedDeclaration": 759,
                    "src": "470:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_WorkRelationshipState_$759",
                      "typeString": "enum Evaluation.WorkRelationshipState"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "eebc6e3d",
                  "id": 581,
                  "mutability": "mutable",
                  "name": "_workExchangeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "531:35:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "95cd34e3",
                  "id": 583,
                  "mutability": "mutable",
                  "name": "_contractTaskName",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "572:31:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 586,
                  "mutability": "mutable",
                  "name": "_taskPointer",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "638:32:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "",
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "668:2:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 595,
                    "nodeType": "Block",
                    "src": "713:45:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 591,
                            "name": "_contractTaskName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "723:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 592,
                            "name": "taskName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 588,
                            "src": "743:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "723:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 594,
                        "nodeType": "ExpressionStatement",
                        "src": "723:28:6"
                      }
                    ]
                  },
                  "id": 596,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 589,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 588,
                        "mutability": "mutable",
                        "name": "taskName",
                        "nodeType": "VariableDeclaration",
                        "scope": 596,
                        "src": "689:22:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 587,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "689:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "688:24:6"
                  },
                  "returnParameters": {
                    "id": 590,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "713:0:6"
                  },
                  "scope": 742,
                  "src": "677:81:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 637,
                    "nodeType": "Block",
                    "src": "905:254:6",
                    "statements": [
                      {
                        "assignments": [
                          609
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 609,
                            "mutability": "mutable",
                            "name": "passesEvaluation",
                            "nodeType": "VariableDeclaration",
                            "scope": 637,
                            "src": "915:21:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 608,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "915:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 614,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 611,
                              "name": "newWorker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 598,
                              "src": "961:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 612,
                              "name": "evaluationState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "972:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EvaluationState_$751_memory_ptr",
                                "typeString": "struct Evaluation.EvaluationState memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_struct$_EvaluationState_$751_memory_ptr",
                                "typeString": "struct Evaluation.EvaluationState memory"
                              }
                            ],
                            "id": 610,
                            "name": "checkWorkerEvaluation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 692,
                            "src": "939:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_EvaluationState_$751_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (address,struct Evaluation.EvaluationState memory) returns (bool)"
                            }
                          },
                          "id": 613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "939:49:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "915:73:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 616,
                                "name": "passesEvaluation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 609,
                                "src": "1006:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1026:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "1006:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 615,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "998:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "998:33:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 620,
                        "nodeType": "ExpressionStatement",
                        "src": "998:33:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 624,
                              "name": "newWorker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 598,
                              "src": "1066:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 625,
                              "name": "isTimeLocked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 603,
                              "src": "1077:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 621,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "1042:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WorkRelationship_$742",
                                "typeString": "contract WorkRelationship"
                              }
                            },
                            "id": 623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "createWorkExchange",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 670,
                            "src": "1042:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_bool_$returns$__$",
                              "typeString": "function (address payable,bool) external"
                            }
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1042:48:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 627,
                        "nodeType": "ExpressionStatement",
                        "src": "1042:48:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 629,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1752,
                                "src": "1129:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1129:7:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 633,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1146:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_WorkRelationship_$742",
                                    "typeString": "contract WorkRelationship"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_WorkRelationship_$742",
                                    "typeString": "contract WorkRelationship"
                                  }
                                ],
                                "id": 632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1138:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 631,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1138:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1138:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 628,
                            "name": "WorkRelationshipCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 570,
                            "src": "1105:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1105:47:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 636,
                        "nodeType": "EmitStatement",
                        "src": "1100:52:6"
                      }
                    ]
                  },
                  "functionSelector": "4568a94e",
                  "id": 638,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 606,
                      "modifierName": {
                        "id": 605,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1766,
                        "src": "895:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "895:9:6"
                    }
                  ],
                  "name": "assignNewWorker",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 604,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 598,
                        "mutability": "mutable",
                        "name": "newWorker",
                        "nodeType": "VariableDeclaration",
                        "scope": 638,
                        "src": "789:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 597,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "789:15:6",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 601,
                        "mutability": "mutable",
                        "name": "evaluationState",
                        "nodeType": "VariableDeclaration",
                        "scope": 638,
                        "src": "816:49:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EvaluationState_$751_memory_ptr",
                          "typeString": "struct Evaluation.EvaluationState"
                        },
                        "typeName": {
                          "id": 600,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 599,
                            "name": "Evaluation.EvaluationState",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 751,
                            "src": "816:26:6"
                          },
                          "referencedDeclaration": 751,
                          "src": "816:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EvaluationState_$751_storage_ptr",
                            "typeString": "struct Evaluation.EvaluationState"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 603,
                        "mutability": "mutable",
                        "name": "isTimeLocked",
                        "nodeType": "VariableDeclaration",
                        "scope": 638,
                        "src": "867:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 602,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "867:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "788:97:6"
                  },
                  "returnParameters": {
                    "id": 607,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "905:0:6"
                  },
                  "scope": 742,
                  "src": "764:395:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 669,
                    "nodeType": "Block",
                    "src": "1266:166:6",
                    "statements": [
                      {
                        "assignments": [
                          649
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 649,
                            "mutability": "mutable",
                            "name": "workExchange",
                            "nodeType": "VariableDeclaration",
                            "scope": 669,
                            "src": "1276:25:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WorkExchange_$556",
                              "typeString": "contract WorkExchange"
                            },
                            "typeName": {
                              "id": 648,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 647,
                                "name": "WorkExchange",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 556,
                                "src": "1276:12:6"
                              },
                              "referencedDeclaration": 556,
                              "src": "1276:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WorkExchange_$556",
                                "typeString": "contract WorkExchange"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 661,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 655,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1752,
                                    "src": "1329:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 656,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1329:7:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1321:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 653,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1321:8:6",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1321:16:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 658,
                              "name": "workerBeneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 640,
                              "src": "1339:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 659,
                              "name": "isTimeLocked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "1358:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1304:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_payable_$_t_address_payable_$_t_bool_$returns$_t_contract$_WorkExchange_$556_$",
                              "typeString": "function (address payable,address payable,bool) returns (contract WorkExchange)"
                            },
                            "typeName": {
                              "id": 651,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 650,
                                "name": "WorkExchange",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 556,
                                "src": "1308:12:6"
                              },
                              "referencedDeclaration": 556,
                              "src": "1308:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_WorkExchange_$556",
                                "typeString": "contract WorkExchange"
                              }
                            }
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1304:67:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WorkExchange_$556",
                            "typeString": "contract WorkExchange"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1276:95:6"
                      },
                      {
                        "expression": {
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 662,
                            "name": "_workExchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "1381:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 665,
                                "name": "workExchange",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 649,
                                "src": "1412:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_WorkExchange_$556",
                                  "typeString": "contract WorkExchange"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_WorkExchange_$556",
                                  "typeString": "contract WorkExchange"
                                }
                              ],
                              "id": 664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1404:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 663,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1404:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1404:21:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1381:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 668,
                        "nodeType": "ExpressionStatement",
                        "src": "1381:44:6"
                      }
                    ]
                  },
                  "functionSelector": "446a02b3",
                  "id": 670,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 645,
                      "modifierName": {
                        "id": 644,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1766,
                        "src": "1256:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1256:9:6"
                    }
                  ],
                  "name": "createWorkExchange",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 643,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 640,
                        "mutability": "mutable",
                        "name": "workerBeneficiary",
                        "nodeType": "VariableDeclaration",
                        "scope": 670,
                        "src": "1193:33:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 639,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1193:15:6",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 642,
                        "mutability": "mutable",
                        "name": "isTimeLocked",
                        "nodeType": "VariableDeclaration",
                        "scope": 670,
                        "src": "1228:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 641,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1228:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1192:54:6"
                  },
                  "returnParameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1266:0:6"
                  },
                  "scope": 742,
                  "src": "1165:267:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 691,
                    "nodeType": "Block",
                    "src": "1575:139:6",
                    "statements": [
                      {
                        "assignments": [
                          681
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 681,
                            "mutability": "mutable",
                            "name": "passesEvaluation",
                            "nodeType": "VariableDeclaration",
                            "scope": 691,
                            "src": "1585:21:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 680,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1585:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 688,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 686,
                              "name": "evaluationState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 675,
                              "src": "1658:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EvaluationState_$751_memory_ptr",
                                "typeString": "struct Evaluation.EvaluationState memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_EvaluationState_$751_memory_ptr",
                                "typeString": "struct Evaluation.EvaluationState memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 683,
                                  "name": "workerUniversalAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 672,
                                  "src": "1621:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 682,
                                "name": "UserSummary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1567,
                                "src": "1609:11:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_UserSummary_$1567_$",
                                  "typeString": "type(contract UserSummary)"
                                }
                              },
                              "id": 684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1609:35:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UserSummary_$1567",
                                "typeString": "contract UserSummary"
                              }
                            },
                            "id": 685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "evaluateUser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1566,
                            "src": "1609:48:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_struct$_EvaluationState_$751_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (struct Evaluation.EvaluationState memory) external returns (bool)"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1609:65:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1585:89:6"
                      },
                      {
                        "expression": {
                          "id": 689,
                          "name": "passesEvaluation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "1691:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 679,
                        "id": 690,
                        "nodeType": "Return",
                        "src": "1684:23:6"
                      }
                    ]
                  },
                  "id": 692,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkWorkerEvaluation",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 676,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 672,
                        "mutability": "mutable",
                        "name": "workerUniversalAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "1469:30:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 671,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1469:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 675,
                        "mutability": "mutable",
                        "name": "evaluationState",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "1501:49:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EvaluationState_$751_memory_ptr",
                          "typeString": "struct Evaluation.EvaluationState"
                        },
                        "typeName": {
                          "id": 674,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 673,
                            "name": "Evaluation.EvaluationState",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 751,
                            "src": "1501:26:6"
                          },
                          "referencedDeclaration": 751,
                          "src": "1501:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EvaluationState_$751_storage_ptr",
                            "typeString": "struct Evaluation.EvaluationState"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1468:83:6"
                  },
                  "returnParameters": {
                    "id": 679,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 678,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "1569:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 677,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1569:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1568:6:6"
                  },
                  "scope": 742,
                  "src": "1438:276:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 720,
                    "nodeType": "Block",
                    "src": "1772:238:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_WorkRelationshipState_$759",
                                  "typeString": "enum Evaluation.WorkRelationshipState"
                                },
                                "id": 702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 698,
                                  "name": "_contractStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 579,
                                  "src": "1790:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_WorkRelationshipState_$759",
                                    "typeString": "enum Evaluation.WorkRelationshipState"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 699,
                                      "name": "Evaluation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 760,
                                      "src": "1809:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Evaluation_$760_$",
                                        "typeString": "type(library Evaluation)"
                                      }
                                    },
                                    "id": 700,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "WorkRelationshipState",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 759,
                                    "src": "1809:32:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_WorkRelationshipState_$759_$",
                                      "typeString": "type(enum Evaluation.WorkRelationshipState)"
                                    }
                                  },
                                  "id": 701,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "COMPLETED",
                                  "nodeType": "MemberAccess",
                                  "src": "1809:42:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_WorkRelationshipState_$759",
                                    "typeString": "enum Evaluation.WorkRelationshipState"
                                  }
                                },
                                "src": "1790:61:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_WorkRelationshipState_$759",
                                  "typeString": "enum Evaluation.WorkRelationshipState"
                                },
                                "id": 707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 703,
                                  "name": "_contractStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 579,
                                  "src": "1855:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_WorkRelationshipState_$759",
                                    "typeString": "enum Evaluation.WorkRelationshipState"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 704,
                                      "name": "Evaluation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 760,
                                      "src": "1874:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Evaluation_$760_$",
                                        "typeString": "type(library Evaluation)"
                                      }
                                    },
                                    "id": 705,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "WorkRelationshipState",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 759,
                                    "src": "1874:32:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_WorkRelationshipState_$759_$",
                                      "typeString": "type(enum Evaluation.WorkRelationshipState)"
                                    }
                                  },
                                  "id": 706,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "COMPLETED",
                                  "nodeType": "MemberAccess",
                                  "src": "1874:42:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_WorkRelationshipState_$759",
                                    "typeString": "enum Evaluation.WorkRelationshipState"
                                  }
                                },
                                "src": "1855:61:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1790:126:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 697,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1782:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1782:135:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 710,
                        "nodeType": "ExpressionStatement",
                        "src": "1782:135:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 712,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1752,
                                "src": "1954:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1954:7:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 716,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1971:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_WorkRelationship_$742",
                                    "typeString": "contract WorkRelationship"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_WorkRelationship_$742",
                                    "typeString": "contract WorkRelationship"
                                  }
                                ],
                                "id": 715,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1963:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 714,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1963:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1963:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 711,
                            "name": "WorkRelationshipEnded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "1932:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1932:45:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 719,
                        "nodeType": "EmitStatement",
                        "src": "1927:50:6"
                      }
                    ]
                  },
                  "functionSelector": "ce079b9a",
                  "id": 721,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 695,
                      "modifierName": {
                        "id": 694,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1766,
                        "src": "1762:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1762:9:6"
                    }
                  ],
                  "name": "disableWorkRelationship",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 693,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1752:2:6"
                  },
                  "returnParameters": {
                    "id": 696,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1772:0:6"
                  },
                  "scope": 742,
                  "src": "1720:290:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 732,
                    "nodeType": "Block",
                    "src": "2096:50:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 728,
                            "name": "_taskPointer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "2106:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 729,
                            "name": "newTaskPointerHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 723,
                            "src": "2121:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2106:33:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 731,
                        "nodeType": "ExpressionStatement",
                        "src": "2106:33:6"
                      }
                    ]
                  },
                  "functionSelector": "c34533a9",
                  "id": 733,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 726,
                      "modifierName": {
                        "id": 725,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1766,
                        "src": "2086:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2086:9:6"
                    }
                  ],
                  "name": "updateTaskPointer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 724,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 723,
                        "mutability": "mutable",
                        "name": "newTaskPointerHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 733,
                        "src": "2043:32:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 722,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2043:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2042:34:6"
                  },
                  "returnParameters": {
                    "id": 727,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2096:0:6"
                  },
                  "scope": 742,
                  "src": "2016:130:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 740,
                    "nodeType": "Block",
                    "src": "2215:36:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 738,
                          "name": "_taskPointer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "2232:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 737,
                        "id": 739,
                        "nodeType": "Return",
                        "src": "2225:19:6"
                      }
                    ]
                  },
                  "functionSelector": "4a67f548",
                  "id": 741,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTaskPointer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 734,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2175:2:6"
                  },
                  "returnParameters": {
                    "id": 737,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 736,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 741,
                        "src": "2200:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 735,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2200:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2199:15:6"
                  },
                  "scope": 742,
                  "src": "2152:99:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 743,
              "src": "213:2040:6"
            }
          ],
          "src": "33:2220:6"
        },
        "compiler": {
          "name": "solc",
          "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
        },
        "networks": {},
        "schemaVersion": "3.4.1",
        "updatedAt": "2021-05-18T01:40:24.375Z",
        "devdoc": {
          "kind": "dev",
          "methods": {
            "owner()": {
              "details": "Returns the address of the current owner."
            },
            "renounceOwnership()": {
              "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
            },
            "transferOwnership(address)": {
              "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
            }
          },
          "version": 1
        },
        "userdoc": {
          "kind": "user",
          "methods": {},
          "version": 1
        }
      },
    "MARKET": {
        "contractName": "Market",
        "abi": [
          {
            "inputs": [
              {
                "internalType": "string",
                "name": "marketName",
                "type": "string"
              },
              {
                "internalType": "enum MarketLib.MarketType",
                "name": "marketType",
                "type": "uint8"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "marketAddress",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "string",
                "name": "marketName",
                "type": "string"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "workRelationship",
                "type": "address"
              }
            ],
            "name": "MarketObservingRelationship",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "marketAddress",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "string",
                "name": "marketName",
                "type": "string"
              }
            ],
            "name": "MarketPaused",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "marketAddress",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "string",
                "name": "marketName",
                "type": "string"
              }
            ],
            "name": "MarketResumed",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "marketAddress",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "string",
                "name": "marketName",
                "type": "string"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "workRelationship",
                "type": "address"
              }
            ],
            "name": "MarketUnObservingRelationship",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "Paused",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "Unpaused",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "_marketName",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "_marketStatus",
            "outputs": [
              {
                "internalType": "enum MarketLib.MarketStatus",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "_marketType",
            "outputs": [
              {
                "internalType": "enum MarketLib.MarketType",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "_requiredIndustryWeight",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "_requiredReputation",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "paused",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newRelationship",
                "type": "address"
              }
            ],
            "name": "addRelationship",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "pauseMarket",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "resumeMarket",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getMarketState",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getWorkRelationships",
            "outputs": [
              {
                "internalType": "address[]",
                "name": "",
                "type": "address[]"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketName\",\"type\":\"string\"},{\"internalType\":\"enum MarketLib.MarketType\",\"name\":\"marketType\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"marketName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"workRelationship\",\"type\":\"address\"}],\"name\":\"MarketObservingRelationship\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"marketName\",\"type\":\"string\"}],\"name\":\"MarketPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"marketName\",\"type\":\"string\"}],\"name\":\"MarketResumed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"marketAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"marketName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"workRelationship\",\"type\":\"address\"}],\"name\":\"MarketUnObservingRelationship\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_marketName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_marketStatus\",\"outputs\":[{\"internalType\":\"enum MarketLib.MarketStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_marketType\",\"outputs\":[{\"internalType\":\"enum MarketLib.MarketType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_requiredIndustryWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_requiredReputation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRelationship\",\"type\":\"address\"}],\"name\":\"addRelationship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWorkRelationships\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/elijahhampton/git/opportunity-core/src/contracts/market/Market.sol\":\"Market\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/elijahhampton/git/opportunity-core/src/contracts/control/Controllable.sol\":{\"keccak256\":\"0x2b616e0eae728ab0b2733946afc99c001a24aff86cabee94471ffc958da33b8e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e9f8be8287296be60a9b46589b4b1fbf35fb0af50e6c4d107be19358fe4a93d\",\"dweb:/ipfs/QmVXyxkpJT6JDCZPRWzZ2yzmuBEgMvWqQCrMgV7FazdAde\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/MultiPartyOwneable.sol\":{\"keccak256\":\"0xd1d42422d6ffaeb158c712c1f1efb97880ad716880dba6b704399b48004e0a3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c61237ee05c824381dcb3b4df8c4c0eb8d9b58ad9c75e262233db0f98c94d6d6\",\"dweb:/ipfs/QmYpYUe7tWzg8yZdCV8FwMhJGJJ2iRbZwXPL4nxgD6kbqM\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkExchange.sol\":{\"keccak256\":\"0x42fa5a787763e08f658484517bcaeee46a5bcd0ac64c6da10b4e827d4bef2da0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2732ae081f2d674595c1968d517bab3f281c7b9e9d1de3b778f641903e53cf44\",\"dweb:/ipfs/QmZYgbEnhA5QBVAzqQ7o8fckGhkNFTnNx8rXmQWXc7Jscn\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkRelationship.sol\":{\"keccak256\":\"0x7050dca7e6bfd46461ce14f25784ffae2f2abe3d21dcd3bfbf509f5e4e67ed07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dd162acf34eed7a85660c388f12f41453ad5ee4fd5efdc50c36a00ed9a2c13c\",\"dweb:/ipfs/QmUz4xEBzSst7KVPyu39c3MDK5JbjtA5MvoJHipeELtxVp\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/Evaluation.sol\":{\"keccak256\":\"0xf2825b061136ece59f2f45b05dac7c0d1fd03b3a7bc267440ec78bc212bd36b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebd01f95d61a48dc61d0edec2d17c4106631732059ad7ebd0f88a5b41bd4ab3e\",\"dweb:/ipfs/QmYtiK47cr8duutw5dshpgXp5ETVvUgphpEx7H4RZqhsJC\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/MarketLib.sol\":{\"keccak256\":\"0x353918e0f71cbe7e131a3fd49986393588497e042b8aa0eea26ebea905ece310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be10f8229d7e9184d1831fde2ed369de0232fa19a1f06cb662aa4942f7661918\",\"dweb:/ipfs/QmPbX7YYB3RFn38RxRXETNiuupmvG657TdfN3P2a3hb3yJ\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/StringUtils.sol\":{\"keccak256\":\"0x3fc98303be9aee1317ca29e93af1ec2f88568c1e526ff23899d464544f060ad6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412e266b655dc10c2fa8f874abda2933ed02636c367ca09c16d5cd8a978d8c04\",\"dweb:/ipfs/QmaXjqt1PL8pYNss2VyZiX78L4HJxWGA6T7RXWvodKcyYG\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/User.sol\":{\"keccak256\":\"0xf6f53b1360419296f37489d8c13a44e39d4178ccccfa14622de3445fe7e19879\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c5b2b5863f94d493b767babd8103d215e76423a999ad0ffc7c2432a653c868b\",\"dweb:/ipfs/QmZfU9BLvZWEaeZ8DZ84c3auojacifiYrUhKRchcyTZqy7\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/market/Market.sol\":{\"keccak256\":\"0xbe82267551b12436a444a994897f575b9343c45d1bd97c4e11048d8930b598c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://729c62e777d988e3223f2c1d8064ce451a733d3340ba6c908380922b6f01eda2\",\"dweb:/ipfs/QmfEsHL5QYyGeuCUyEPiz93cSoa1N1rkykXkjULRwJojGA\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/user/UserSummary.sol\":{\"keccak256\":\"0xb3fa76490c1bec2631ad5303be5e1d1469d20124d0079625b02cec8b5fdf8cd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e6f7b8e1e127674d1500ad521be17605fff6a408f6afab7820a59d24dfba6c9\",\"dweb:/ipfs/QmTN7MiedKQrm9c1gQEAHETjbQj1rGPqGSTPZ8x2qJ2knn\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/user/interface/IUserSummary.sol\":{\"keccak256\":\"0x1a9ccc700d2445a01522e75a8892f3479f5ec1019e1a7cc82648735602d6979d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd5568a290b9c71ff0ff74a1d02bc72f02bf9fa4a731baf615beab7717965e1e\",\"dweb:/ipfs/QmQPomdhm1baBVYmvdVqCZ8GJrauZ6c7FD31NUTnrPDnwa\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b651c0571e3ecc124b3af7a598357a19406969b21b8a3fa06eeaf5e5c9150d6c\",\"dweb:/ipfs/QmPfcAhbGVfsSd7VKet77fuST397b7XSFU2myXxLdok79v\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0x0bf0f9c9bfdea4be5d7dc3f1fccf177de0a5e7da51f96bfe5923af8ad1961a39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://475920b50f6082a8d87a140cc5528bfc98c1f3efb8e2c367f93a1e482cea24a6\",\"dweb:/ipfs/QmVEUrKPdy3vgPjjzsikKLETUBFRo6uKbrgn2zeaJt7Mcu\"]},\"@openzeppelin/contracts/utils/escrow/Escrow.sol\":{\"keccak256\":\"0xb2c66acf7d749744db1c038889794253757d471a113290e4bb1a600246166943\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60668976b064a434caef3ede6dce89744f2d18cc8ede8610706579fe4a03fba0\",\"dweb:/ipfs/QmPUnpLdjFgGrNhuMjvBz7Grn2gMrRWisAYPrn8YZVn99k\"]},\"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":{\"keccak256\":\"0xc4f3f7ac87e9debc037109ec57e4a2ca54fce83a76fbc10564a53b9ab1d63858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e451867af8f28ceed99f440f14819a8cf0fdaadb1e438272aff451ec7ce3b8f3\",\"dweb:/ipfs/QmebxoF1a7deWTjzyg82bygFzrQHFMFZnQxenShv2zB6AC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
        "bytecode": "0x60806040523480156200001157600080fd5b506040516200186c3803806200186c8339818101604052810190620000379190620002f6565b600062000049620001b560201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160146101000a81548160ff02191690831515021790555081600290805190602001906200015b929190620001bd565b5080600360006101000a81548160ff02191690836001811115620001a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550505062000492565b600033905090565b828054620001cb90620003ed565b90600052602060002090601f016020900481019282620001ef57600085556200023b565b82601f106200020a57805160ff19168380011785556200023b565b828001600101855582156200023b579182015b828111156200023a5782518255916020019190600101906200021d565b5b5090506200024a91906200024e565b5090565b5b80821115620002695760008160009055506001016200024f565b5090565b6000620002846200027e8462000384565b62000350565b9050828152602081018484840111156200029d57600080fd5b620002aa848285620003b7565b509392505050565b600081519050620002c38162000481565b92915050565b600082601f830112620002db57600080fd5b8151620002ed8482602086016200026d565b91505092915050565b600080604083850312156200030a57600080fd5b600083015167ffffffffffffffff8111156200032557600080fd5b6200033385828601620002c9565b92505060206200034685828601620002b2565b9150509250929050565b6000604051905081810181811067ffffffffffffffff821117156200037a576200037962000452565b5b8060405250919050565b600067ffffffffffffffff821115620003a257620003a162000452565b5b601f19601f8301169050602081019050919050565b60005b83811015620003d7578082015181840152602081019050620003ba565b83811115620003e7576000848401525b50505050565b600060028204905060018216806200040657607f821691505b602082108114156200041d576200041c62000423565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600281106200048f57600080fd5b50565b6113ca80620004a26000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063838069f71161008c578063a03738dc11610066578063a03738dc146101f1578063c143521f146101fb578063d816574314610219578063f2fde38b14610237576100ea565b8063838069f7146101ab5780638da5cb5b146101c95780639319106b146101e7576100ea565b80636039c8d7116100c85780636039c8d714610149578063715018a61461016757806379bda937146101715780637cf63de91461018d576100ea565b80630f091637146100ef57806336e114fc1461010d5780635c975abb1461012b575b600080fd5b6100f7610253565b604051610104919061115f565b60405180910390f35b610115610259565b604051610122919061104a565b60405180910390f35b6101336102e7565b604051610140919061106c565b60405180910390f35b6101516102fe565b60405161015e91906110bd565b60405180910390f35b61016f61038c565b005b61018b60048036038101906101869190610d41565b6104c6565b005b6101956105d7565b6040516101a291906110a2565b60405180910390f35b6101b36105ea565b6040516101c09190611087565b60405180910390f35b6101d16105fd565b6040516101de919061102f565b60405180910390f35b6101ef610626565b005b6101f9610824565b005b610203610a22565b604051610210919061115f565b60405180910390f35b610221610a28565b60405161022e919061106c565b60405180910390f35b610251600480360381019061024c9190610d41565b610a37565b005b60045481565b606060078054806020026020016040519081016040528092919081815260200182805480156102dd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610293575b5050505050905090565b6000600160149054906101000a900460ff16905090565b6002805461030b906112b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610337906112b4565b80156103845780601f1061035957610100808354040283529160200191610384565b820191906000526020600020905b81548152906001019060200180831161036757829003601f168201915b505050505081565b610394610be0565b73ffffffffffffffffffffffffffffffffffffffff166103b26105fd565b73ffffffffffffffffffffffffffffffffffffffff1614610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff9061113f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561050057600080fd5b6007819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660026040516105899190611018565b60405180910390203073ffffffffffffffffffffffffffffffffffffffff167f468383fd00b84717a9b26fdb0dc1c91ee119987255bf19a7b96016f9f3f1ee3660405160405180910390a450565b600360009054906101000a900460ff1681565b600660009054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61062e610be0565b73ffffffffffffffffffffffffffffffffffffffff1661064c6105fd565b73ffffffffffffffffffffffffffffffffffffffff16146106a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106999061113f565b60405180910390fd5b33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106fd57600080fd5b600360009054906101000a900460ff1660006001811115610747577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816001811115610780577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461078a57600080fd5b600660009054906101000a900460ff16600060018111156107d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600181111561080d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461081757600080fd5b61081f610be8565b505050565b61082c610be0565b73ffffffffffffffffffffffffffffffffffffffff1661084a6105fd565b73ffffffffffffffffffffffffffffffffffffffff16146108a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108979061113f565b60405180910390fd5b33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108fb57600080fd5b600360009054906101000a900460ff1660006001811115610945577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600181111561097e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461098857600080fd5b600660009054906101000a900460ff166001808111156109d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816001811115610a0a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610a1557600080fd5b610a1d610c8a565b505050565b60055481565b6000610a326102e7565b905090565b610a3f610be0565b73ffffffffffffffffffffffffffffffffffffffff16610a5d6105fd565b73ffffffffffffffffffffffffffffffffffffffff1614610ab3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aaa9061113f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1a906110ff565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b610bf06102e7565b610c2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c26906110df565b60405180910390fd5b6000600160146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610c73610be0565b604051610c80919061102f565b60405180910390a1565b610c926102e7565b15610cd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc99061111f565b60405180910390fd5b60018060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d15610be0565b604051610d22919061102f565b60405180910390a1565b600081359050610d3b8161137d565b92915050565b600060208284031215610d5357600080fd5b6000610d6184828501610d2c565b91505092915050565b6000610d768383610d82565b60208301905092915050565b610d8b816111ef565b82525050565b610d9a816111ef565b82525050565b6000610dab8261119f565b610db581856111c2565b9350610dc08361117a565b8060005b83811015610df1578151610dd88882610d6a565b9750610de3836111b5565b925050600181019050610dc4565b5085935050505092915050565b610e0781611201565b82525050565b610e168161125d565b82525050565b610e258161126f565b82525050565b6000610e36826111aa565b610e4081856111d3565b9350610e50818560208601611281565b610e5981611344565b840191505092915050565b60008154610e71816112b4565b610e7b81866111e4565b94506001821660008114610e965760018114610ea757610eda565b60ff19831686528186019350610eda565b610eb08561118a565b60005b83811015610ed257815481890152600182019150602081019050610eb3565b838801955050505b50505092915050565b6000610ef06014836111d3565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b6000610f306026836111d3565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f966010836111d3565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b6000610fd66020836111d3565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b61101281611253565b82525050565b60006110248284610e64565b915081905092915050565b60006020820190506110446000830184610d91565b92915050565b600060208201905081810360008301526110648184610da0565b905092915050565b60006020820190506110816000830184610dfe565b92915050565b600060208201905061109c6000830184610e0d565b92915050565b60006020820190506110b76000830184610e1c565b92915050565b600060208201905081810360008301526110d78184610e2b565b905092915050565b600060208201905081810360008301526110f881610ee3565b9050919050565b6000602082019050818103600083015261111881610f23565b9050919050565b6000602082019050818103600083015261113881610f89565b9050919050565b6000602082019050818103600083015261115881610fc9565b9050919050565b60006020820190506111746000830184611009565b92915050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006111fa82611233565b9050919050565b60008115159050919050565b600081905061121b82611355565b919050565b600081905061122e82611369565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006112688261120d565b9050919050565b600061127a82611220565b9050919050565b60005b8381101561129f578082015181840152602081019050611284565b838111156112ae576000848401525b50505050565b600060028204905060018216806112cc57607f821691505b602082108114156112e0576112df611315565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b60028110611366576113656112e6565b5b50565b6002811061137a576113796112e6565b5b50565b611386816111ef565b811461139157600080fd5b5056fea2646970667358221220cd37fb36674d30ccc73c3312ee55cc4ab72fdfe8d54806576d597c7dab6df0d964736f6c63430008000033",
        "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063838069f71161008c578063a03738dc11610066578063a03738dc146101f1578063c143521f146101fb578063d816574314610219578063f2fde38b14610237576100ea565b8063838069f7146101ab5780638da5cb5b146101c95780639319106b146101e7576100ea565b80636039c8d7116100c85780636039c8d714610149578063715018a61461016757806379bda937146101715780637cf63de91461018d576100ea565b80630f091637146100ef57806336e114fc1461010d5780635c975abb1461012b575b600080fd5b6100f7610253565b604051610104919061115f565b60405180910390f35b610115610259565b604051610122919061104a565b60405180910390f35b6101336102e7565b604051610140919061106c565b60405180910390f35b6101516102fe565b60405161015e91906110bd565b60405180910390f35b61016f61038c565b005b61018b60048036038101906101869190610d41565b6104c6565b005b6101956105d7565b6040516101a291906110a2565b60405180910390f35b6101b36105ea565b6040516101c09190611087565b60405180910390f35b6101d16105fd565b6040516101de919061102f565b60405180910390f35b6101ef610626565b005b6101f9610824565b005b610203610a22565b604051610210919061115f565b60405180910390f35b610221610a28565b60405161022e919061106c565b60405180910390f35b610251600480360381019061024c9190610d41565b610a37565b005b60045481565b606060078054806020026020016040519081016040528092919081815260200182805480156102dd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610293575b5050505050905090565b6000600160149054906101000a900460ff16905090565b6002805461030b906112b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610337906112b4565b80156103845780601f1061035957610100808354040283529160200191610384565b820191906000526020600020905b81548152906001019060200180831161036757829003601f168201915b505050505081565b610394610be0565b73ffffffffffffffffffffffffffffffffffffffff166103b26105fd565b73ffffffffffffffffffffffffffffffffffffffff1614610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff9061113f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561050057600080fd5b6007819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660026040516105899190611018565b60405180910390203073ffffffffffffffffffffffffffffffffffffffff167f468383fd00b84717a9b26fdb0dc1c91ee119987255bf19a7b96016f9f3f1ee3660405160405180910390a450565b600360009054906101000a900460ff1681565b600660009054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61062e610be0565b73ffffffffffffffffffffffffffffffffffffffff1661064c6105fd565b73ffffffffffffffffffffffffffffffffffffffff16146106a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106999061113f565b60405180910390fd5b33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106fd57600080fd5b600360009054906101000a900460ff1660006001811115610747577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816001811115610780577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461078a57600080fd5b600660009054906101000a900460ff16600060018111156107d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600181111561080d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461081757600080fd5b61081f610be8565b505050565b61082c610be0565b73ffffffffffffffffffffffffffffffffffffffff1661084a6105fd565b73ffffffffffffffffffffffffffffffffffffffff16146108a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108979061113f565b60405180910390fd5b33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108fb57600080fd5b600360009054906101000a900460ff1660006001811115610945577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600181111561097e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461098857600080fd5b600660009054906101000a900460ff166001808111156109d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816001811115610a0a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610a1557600080fd5b610a1d610c8a565b505050565b60055481565b6000610a326102e7565b905090565b610a3f610be0565b73ffffffffffffffffffffffffffffffffffffffff16610a5d6105fd565b73ffffffffffffffffffffffffffffffffffffffff1614610ab3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aaa9061113f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1a906110ff565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b610bf06102e7565b610c2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c26906110df565b60405180910390fd5b6000600160146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610c73610be0565b604051610c80919061102f565b60405180910390a1565b610c926102e7565b15610cd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc99061111f565b60405180910390fd5b60018060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d15610be0565b604051610d22919061102f565b60405180910390a1565b600081359050610d3b8161137d565b92915050565b600060208284031215610d5357600080fd5b6000610d6184828501610d2c565b91505092915050565b6000610d768383610d82565b60208301905092915050565b610d8b816111ef565b82525050565b610d9a816111ef565b82525050565b6000610dab8261119f565b610db581856111c2565b9350610dc08361117a565b8060005b83811015610df1578151610dd88882610d6a565b9750610de3836111b5565b925050600181019050610dc4565b5085935050505092915050565b610e0781611201565b82525050565b610e168161125d565b82525050565b610e258161126f565b82525050565b6000610e36826111aa565b610e4081856111d3565b9350610e50818560208601611281565b610e5981611344565b840191505092915050565b60008154610e71816112b4565b610e7b81866111e4565b94506001821660008114610e965760018114610ea757610eda565b60ff19831686528186019350610eda565b610eb08561118a565b60005b83811015610ed257815481890152600182019150602081019050610eb3565b838801955050505b50505092915050565b6000610ef06014836111d3565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b6000610f306026836111d3565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f966010836111d3565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b6000610fd66020836111d3565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b61101281611253565b82525050565b60006110248284610e64565b915081905092915050565b60006020820190506110446000830184610d91565b92915050565b600060208201905081810360008301526110648184610da0565b905092915050565b60006020820190506110816000830184610dfe565b92915050565b600060208201905061109c6000830184610e0d565b92915050565b60006020820190506110b76000830184610e1c565b92915050565b600060208201905081810360008301526110d78184610e2b565b905092915050565b600060208201905081810360008301526110f881610ee3565b9050919050565b6000602082019050818103600083015261111881610f23565b9050919050565b6000602082019050818103600083015261113881610f89565b9050919050565b6000602082019050818103600083015261115881610fc9565b9050919050565b60006020820190506111746000830184611009565b92915050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006111fa82611233565b9050919050565b60008115159050919050565b600081905061121b82611355565b919050565b600081905061122e82611369565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006112688261120d565b9050919050565b600061127a82611220565b9050919050565b60005b8381101561129f578082015181840152602081019050611284565b838111156112ae576000848401525b50505050565b600060028204905060018216806112cc57607f821691505b602082108114156112e0576112df611315565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b60028110611366576113656112e6565b5b50565b6002811061137a576113796112e6565b5b50565b611386816111ef565b811461139157600080fd5b5056fea2646970667358221220cd37fb36674d30ccc73c3312ee55cc4ab72fdfe8d54806576d597c7dab6df0d964736f6c63430008000033",
        "immutableReferences": {},
        "generatedSources": [
          {
            "ast": {
              "nodeType": "YulBlock",
              "src": "0:3185:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "102:258:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "112:74:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "178:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "array_allocation_size_t_string_memory_ptr",
                                "nodeType": "YulIdentifier",
                                "src": "136:41:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "136:49:25"
                            }
                          ],
                          "functionName": {
                            "name": "allocateMemory",
                            "nodeType": "YulIdentifier",
                            "src": "121:14:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "121:65:25"
                        },
                        "variableNames": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "112:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "202:5:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "209:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "195:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "195:21:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "195:21:25"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "225:27:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "240:5:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "247:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "236:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "236:16:25"
                        },
                        "variables": [
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "229:3:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "290:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "299:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "302:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "292:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "292:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "292:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "271:3:25"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "276:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "267:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "267:16:25"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "285:3:25"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "264:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "264:25:25"
                        },
                        "nodeType": "YulIf",
                        "src": "261:2:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "337:3:25"
                            },
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "342:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "347:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "copy_memory_to_memory",
                            "nodeType": "YulIdentifier",
                            "src": "315:21:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "315:39:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "315:39:25"
                      }
                    ]
                  },
                  "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "75:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "80:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "88:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "array",
                      "nodeType": "YulTypedName",
                      "src": "96:5:25",
                      "type": ""
                    }
                  ],
                  "src": "7:353:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "443:94:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "453:22:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "468:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "462:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "462:13:25"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "453:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "525:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_enum$_MarketType_$765",
                            "nodeType": "YulIdentifier",
                            "src": "484:40:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "484:47:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "484:47:25"
                      }
                    ]
                  },
                  "name": "abi_decode_t_enum$_MarketType_$765_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "421:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "429:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "437:5:25",
                      "type": ""
                    }
                  ],
                  "src": "366:171:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "630:215:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "679:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "688:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "691:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "681:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "681:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "681:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "658:6:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "666:4:25",
                                      "type": "",
                                      "value": "0x1f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "654:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "654:17:25"
                                },
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "673:3:25"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nodeType": "YulIdentifier",
                                "src": "650:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "650:27:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "643:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "643:35:25"
                        },
                        "nodeType": "YulIf",
                        "src": "640:2:25"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "704:27:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "724:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "718:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "718:13:25"
                        },
                        "variables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "708:6:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "740:99:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "812:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "820:4:25",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "808:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "808:17:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "827:6:25"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "835:3:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                            "nodeType": "YulIdentifier",
                            "src": "749:58:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "749:90:25"
                        },
                        "variableNames": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "740:5:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_t_string_memory_ptr_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "608:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "616:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "array",
                      "nodeType": "YulTypedName",
                      "src": "624:5:25",
                      "type": ""
                    }
                  ],
                  "src": "557:288:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "969:456:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1015:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1024:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1027:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1017:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1017:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1017:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "990:7:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "999:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "986:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "986:23:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1011:2:25",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "982:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "982:32:25"
                        },
                        "nodeType": "YulIf",
                        "src": "979:2:25"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "1041:224:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1056:38:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1080:9:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1091:1:25",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1076:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1076:17:25"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1070:5:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1070:24:25"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "1060:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1141:16:25",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1150:1:25",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1153:1:25",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "1143:6:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1143:12:25"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1143:12:25"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "1113:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1121:18:25",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "1110:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1110:30:25"
                            },
                            "nodeType": "YulIf",
                            "src": "1107:2:25"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1171:84:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1227:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "1238:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1223:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1223:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1247:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_string_memory_ptr_fromMemory",
                                "nodeType": "YulIdentifier",
                                "src": "1181:41:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1181:74:25"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1171:6:25"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "1275:143:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1290:16:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1304:2:25",
                              "type": "",
                              "value": "32"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "1294:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1320:88:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1380:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "1391:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1376:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1376:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1400:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_enum$_MarketType_$765_fromMemory",
                                "nodeType": "YulIdentifier",
                                "src": "1330:45:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1330:78:25"
                            },
                            "variableNames": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "1320:6:25"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_string_memory_ptrt_enum$_MarketType_$765_fromMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "931:9:25",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "942:7:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "954:6:25",
                      "type": ""
                    },
                    {
                      "name": "value1",
                      "nodeType": "YulTypedName",
                      "src": "962:6:25",
                      "type": ""
                    }
                  ],
                  "src": "851:574:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1471:243:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1481:19:25",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1497:2:25",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1491:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1491:9:25"
                        },
                        "variableNames": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1481:6:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1509:35:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1531:6:25"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "1539:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1527:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1527:17:25"
                        },
                        "variables": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulTypedName",
                            "src": "1513:10:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1655:22:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x41",
                                  "nodeType": "YulIdentifier",
                                  "src": "1657:16:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1657:18:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1657:18:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1598:10:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1610:18:25",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "1595:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1595:34:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1634:10:25"
                                },
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1646:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "1631:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1631:22:25"
                            }
                          ],
                          "functionName": {
                            "name": "or",
                            "nodeType": "YulIdentifier",
                            "src": "1592:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1592:62:25"
                        },
                        "nodeType": "YulIf",
                        "src": "1589:2:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1693:2:25",
                              "type": "",
                              "value": "64"
                            },
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulIdentifier",
                              "src": "1697:10:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1686:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1686:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1686:22:25"
                      }
                    ]
                  },
                  "name": "allocateMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "size",
                      "nodeType": "YulTypedName",
                      "src": "1455:4:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1464:6:25",
                      "type": ""
                    }
                  ],
                  "src": "1431:283:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1787:265:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1892:22:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x41",
                                  "nodeType": "YulIdentifier",
                                  "src": "1894:16:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1894:18:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1894:18:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1864:6:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1872:18:25",
                              "type": "",
                              "value": "0xffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "1861:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1861:30:25"
                        },
                        "nodeType": "YulIf",
                        "src": "1858:2:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1944:41:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1960:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1968:4:25",
                                  "type": "",
                                  "value": "0x1f"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1956:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1956:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1979:4:25",
                                  "type": "",
                                  "value": "0x1f"
                                }
                              ],
                              "functionName": {
                                "name": "not",
                                "nodeType": "YulIdentifier",
                                "src": "1975:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1975:9:25"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1952:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1952:33:25"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "1944:4:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2022:23:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "2034:4:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2040:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2030:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2030:15:25"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "2022:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_allocation_size_t_string_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1771:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "size",
                      "nodeType": "YulTypedName",
                      "src": "1782:4:25",
                      "type": ""
                    }
                  ],
                  "src": "1720:332:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2107:258:25",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2117:10:25",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2126:1:25",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "2121:1:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2186:63:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "2211:3:25"
                                      },
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2216:1:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2207:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2207:11:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "2230:3:25"
                                          },
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "2235:1:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2226:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2226:11:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2220:5:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2220:18:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2200:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2200:39:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2200:39:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2147:1:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2150:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "2144:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2144:13:25"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "2158:19:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2160:15:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2169:1:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2172:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2165:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2165:10:25"
                              },
                              "variableNames": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2160:1:25"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "2140:3:25",
                          "statements": []
                        },
                        "src": "2136:113:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2283:76:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "2333:3:25"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "2338:6:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2329:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2329:16:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2347:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2322:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2322:27:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2322:27:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2264:1:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2267:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "2261:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2261:13:25"
                        },
                        "nodeType": "YulIf",
                        "src": "2258:2:25"
                      }
                    ]
                  },
                  "name": "copy_memory_to_memory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "2089:3:25",
                      "type": ""
                    },
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "2094:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2099:6:25",
                      "type": ""
                    }
                  ],
                  "src": "2058:307:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2422:269:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2432:22:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "2446:4:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2452:1:25",
                              "type": "",
                              "value": "2"
                            }
                          ],
                          "functionName": {
                            "name": "div",
                            "nodeType": "YulIdentifier",
                            "src": "2442:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2442:12:25"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2432:6:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2463:38:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "2493:4:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2499:1:25",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2489:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2489:12:25"
                        },
                        "variables": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulTypedName",
                            "src": "2467:18:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2540:51:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2554:27:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2568:6:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2576:4:25",
                                    "type": "",
                                    "value": "0x7f"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2564:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2564:17:25"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2554:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulIdentifier",
                              "src": "2520:18:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "2513:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2513:26:25"
                        },
                        "nodeType": "YulIf",
                        "src": "2510:2:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2643:42:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x22",
                                  "nodeType": "YulIdentifier",
                                  "src": "2657:16:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2657:18:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2657:18:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulIdentifier",
                              "src": "2607:18:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2630:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2638:2:25",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "2627:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2627:14:25"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "2604:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2604:38:25"
                        },
                        "nodeType": "YulIf",
                        "src": "2601:2:25"
                      }
                    ]
                  },
                  "name": "extract_byte_array_length",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "data",
                      "nodeType": "YulTypedName",
                      "src": "2406:4:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2415:6:25",
                      "type": ""
                    }
                  ],
                  "src": "2371:320:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2725:152:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2742:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2745:77:25",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2735:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2735:88:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2735:88:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2839:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2842:4:25",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2832:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2832:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2832:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2863:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2866:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2856:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2856:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2856:15:25"
                      }
                    ]
                  },
                  "name": "panic_error_0x22",
                  "nodeType": "YulFunctionDefinition",
                  "src": "2697:180:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2911:152:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2928:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2931:77:25",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2921:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2921:88:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2921:88:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3025:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3028:4:25",
                              "type": "",
                              "value": "0x41"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3018:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3018:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3018:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3049:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3052:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3042:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3042:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3042:15:25"
                      }
                    ]
                  },
                  "name": "panic_error_0x41",
                  "nodeType": "YulFunctionDefinition",
                  "src": "2883:180:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3126:56:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3160:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3169:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3172:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3162:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3162:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3162:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "3149:5:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3156:1:25",
                                  "type": "",
                                  "value": "2"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "3146:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3146:12:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "3139:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3139:20:25"
                        },
                        "nodeType": "YulIf",
                        "src": "3136:2:25"
                      }
                    ]
                  },
                  "name": "validator_revert_t_enum$_MarketType_$765",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3119:5:25",
                      "type": ""
                    }
                  ],
                  "src": "3069:113:25"
                }
              ]
            },
            "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_enum$_MarketType_$765_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_enum$_MarketType_$765(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_enum$_MarketType_$765_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_MarketType_$765_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_enum$_MarketType_$765(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n}\n",
            "id": 25,
            "language": "Yul",
            "name": "#utility.yul"
          }
        ],
        "deployedGeneratedSources": [
          {
            "ast": {
              "nodeType": "YulBlock",
              "src": "0:12275:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "59:87:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "69:29:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "91:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "78:12:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "78:20:25"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "69:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "134:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "107:26:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "107:33:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "107:33:25"
                      }
                    ]
                  },
                  "name": "abi_decode_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "37:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "45:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "53:5:25",
                      "type": ""
                    }
                  ],
                  "src": "7:139:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "218:196:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "264:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "273:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "276:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "266:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "266:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "266:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "239:7:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "248:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "235:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "235:23:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "260:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "231:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "231:32:25"
                        },
                        "nodeType": "YulIf",
                        "src": "228:2:25"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "290:117:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "305:15:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "319:1:25",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "309:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "334:63:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "369:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "380:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "365:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "365:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "389:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "344:20:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "344:53:25"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "334:6:25"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "188:9:25",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "199:7:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "211:6:25",
                      "type": ""
                    }
                  ],
                  "src": "152:262:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "500:99:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "544:6:25"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "552:3:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_address_to_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "510:33:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "510:46:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "510:46:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "565:28:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "583:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "588:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "579:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "579:14:25"
                        },
                        "variableNames": [
                          {
                            "name": "updatedPos",
                            "nodeType": "YulIdentifier",
                            "src": "565:10:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "473:6:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "481:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulTypedName",
                      "src": "489:10:25",
                      "type": ""
                    }
                  ],
                  "src": "420:179:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "660:53:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "677:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "700:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "682:17:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "682:24:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:37:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:37:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_address_to_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "648:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "655:3:25",
                      "type": ""
                    }
                  ],
                  "src": "605:108:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "784:53:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "801:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "824:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "806:17:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "806:24:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "794:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "794:37:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "794:37:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_address_to_t_address_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "772:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "779:3:25",
                      "type": ""
                    }
                  ],
                  "src": "719:118:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "997:608:25",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1007:68:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1069:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "1021:47:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1021:54:25"
                        },
                        "variables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1011:6:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1084:93:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1165:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1170:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "1091:73:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1091:86:25"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1084:3:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1186:71:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1251:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "1201:49:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1201:56:25"
                        },
                        "variables": [
                          {
                            "name": "baseRef",
                            "nodeType": "YulTypedName",
                            "src": "1190:7:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1266:21:25",
                        "value": {
                          "name": "baseRef",
                          "nodeType": "YulIdentifier",
                          "src": "1280:7:25"
                        },
                        "variables": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulTypedName",
                            "src": "1270:6:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1356:224:25",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1370:34:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "srcPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1397:6:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1391:5:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1391:13:25"
                              },
                              "variables": [
                                {
                                  "name": "elementValue0",
                                  "nodeType": "YulTypedName",
                                  "src": "1374:13:25",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1417:70:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "elementValue0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1468:13:25"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1483:3:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1424:43:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1424:63:25"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1417:3:25"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1500:70:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "srcPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1563:6:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1510:52:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1510:60:25"
                              },
                              "variableNames": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1500:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1318:1:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1321:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "1315:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1315:13:25"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "1329:18:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1331:14:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1340:1:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1343:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1336:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1336:9:25"
                              },
                              "variableNames": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1331:1:25"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "1300:14:25",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1302:10:25",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1311:1:25",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "1306:1:25",
                                  "type": ""
                                }
                              ]
                            }
                          ]
                        },
                        "src": "1296:284:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1589:10:25",
                        "value": {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "1596:3:25"
                        },
                        "variableNames": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1589:3:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "976:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "983:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "992:3:25",
                      "type": ""
                    }
                  ],
                  "src": "873:732:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1670:50:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1687:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1707:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_bool",
                                "nodeType": "YulIdentifier",
                                "src": "1692:14:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1692:21:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1680:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1680:34:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1680:34:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1658:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "1665:3:25",
                      "type": ""
                    }
                  ],
                  "src": "1611:109:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1805:80:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1822:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1872:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "convert_t_enum$_MarketStatus_$768_to_t_uint8",
                                "nodeType": "YulIdentifier",
                                "src": "1827:44:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1827:51:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1815:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1815:64:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1815:64:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_enum$_MarketStatus_$768_to_t_uint8_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1793:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "1800:3:25",
                      "type": ""
                    }
                  ],
                  "src": "1726:159:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1968:78:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1985:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2033:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "convert_t_enum$_MarketType_$765_to_t_uint8",
                                "nodeType": "YulIdentifier",
                                "src": "1990:42:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1990:49:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1978:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1978:62:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1978:62:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_enum$_MarketType_$765_to_t_uint8_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1956:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "1963:3:25",
                      "type": ""
                    }
                  ],
                  "src": "1891:155:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2144:272:25",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2154:53:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2201:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "array_length_t_string_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "2168:32:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2168:39:25"
                        },
                        "variables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2158:6:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2216:78:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2282:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2287:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "2223:58:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2223:71:25"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2216:3:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2329:5:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2336:4:25",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2325:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2325:16:25"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2343:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2348:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "copy_memory_to_memory",
                            "nodeType": "YulIdentifier",
                            "src": "2303:21:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2303:52:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2303:52:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2364:46:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2375:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2402:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "round_up_to_mul_of_32",
                                "nodeType": "YulIdentifier",
                                "src": "2380:21:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2380:29:25"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2371:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2371:39:25"
                        },
                        "variableNames": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2364:3:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2125:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "2132:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "2140:3:25",
                      "type": ""
                    }
                  ],
                  "src": "2052:364:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2553:738:25",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2563:29:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2586:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "2580:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2580:12:25"
                        },
                        "variables": [
                          {
                            "name": "slotValue",
                            "nodeType": "YulTypedName",
                            "src": "2567:9:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2601:50:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "slotValue",
                              "nodeType": "YulIdentifier",
                              "src": "2641:9:25"
                            }
                          ],
                          "functionName": {
                            "name": "extract_byte_array_length",
                            "nodeType": "YulIdentifier",
                            "src": "2615:25:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2615:36:25"
                        },
                        "variables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2605:6:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2660:96:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2744:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2749:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "2667:76:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2667:89:25"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2660:3:25"
                          }
                        ]
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2805:130:25",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "2858:3:25"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "slotValue",
                                            "nodeType": "YulIdentifier",
                                            "src": "2867:9:25"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2882:4:25",
                                                "type": "",
                                                "value": "0xff"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "2878:3:25"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2878:9:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2863:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2863:25:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "2851:6:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2851:38:25"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "2851:38:25"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2902:23:25",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "2913:3:25"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "2918:6:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2909:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2909:16:25"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "ret",
                                      "nodeType": "YulIdentifier",
                                      "src": "2902:3:25"
                                    }
                                  ]
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "2798:137:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2803:1:25",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "2951:334:25",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2996:53:25",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3043:5:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_dataslot_t_string_storage",
                                      "nodeType": "YulIdentifier",
                                      "src": "3011:31:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3011:38:25"
                                  },
                                  "variables": [
                                    {
                                      "name": "dataPos",
                                      "nodeType": "YulTypedName",
                                      "src": "3000:7:25",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3062:10:25",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3071:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulTypedName",
                                      "src": "3066:1:25",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "3129:110:25",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "pos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3158:3:25"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3163:1:25"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "3154:3:25"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3154:11:25"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "dataPos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3173:7:25"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sload",
                                                "nodeType": "YulIdentifier",
                                                "src": "3167:5:25"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3167:14:25"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "3147:6:25"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3147:35:25"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "3147:35:25"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "3199:26:25",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "dataPos",
                                              "nodeType": "YulIdentifier",
                                              "src": "3214:7:25"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3223:1:25",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "3210:3:25"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3210:15:25"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "dataPos",
                                            "nodeType": "YulIdentifier",
                                            "src": "3199:7:25"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "3096:1:25"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3099:6:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3093:2:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3093:13:25"
                                  },
                                  "nodeType": "YulForLoop",
                                  "post": {
                                    "nodeType": "YulBlock",
                                    "src": "3107:21:25",
                                    "statements": [
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "3109:17:25",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "3118:1:25"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3121:4:25",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "3114:3:25"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3114:12:25"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "3109:1:25"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "pre": {
                                    "nodeType": "YulBlock",
                                    "src": "3089:3:25",
                                    "statements": []
                                  },
                                  "src": "3085:154:25"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3252:23:25",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "3263:3:25"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3268:6:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3259:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3259:16:25"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "ret",
                                      "nodeType": "YulIdentifier",
                                      "src": "3252:3:25"
                                    }
                                  ]
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "2944:341:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2949:1:25",
                              "type": "",
                              "value": "1"
                            }
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "name": "slotValue",
                              "nodeType": "YulIdentifier",
                              "src": "2776:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2787:1:25",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2772:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2772:17:25"
                        },
                        "nodeType": "YulSwitch",
                        "src": "2765:520:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2534:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "2541:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "ret",
                      "nodeType": "YulTypedName",
                      "src": "2549:3:25",
                      "type": ""
                    }
                  ],
                  "src": "2446:845:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3443:172:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3453:74:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "3519:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3524:2:25",
                              "type": "",
                              "value": "20"
                            }
                          ],
                          "functionName": {
                            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "3460:58:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3460:67:25"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3453:3:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3548:3:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3553:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3544:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3544:11:25"
                            },
                            {
                              "kind": "string",
                              "nodeType": "YulLiteral",
                              "src": "3557:22:25",
                              "type": "",
                              "value": "Pausable: not paused"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3537:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3537:43:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3537:43:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3590:19:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "3601:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3606:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3597:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3597:12:25"
                        },
                        "variableNames": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "3590:3:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "3431:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "3439:3:25",
                      "type": ""
                    }
                  ],
                  "src": "3297:318:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3767:224:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3777:74:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "3843:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3848:2:25",
                              "type": "",
                              "value": "38"
                            }
                          ],
                          "functionName": {
                            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "3784:58:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3784:67:25"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3777:3:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3872:3:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3877:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3868:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3868:11:25"
                            },
                            {
                              "kind": "string",
                              "nodeType": "YulLiteral",
                              "src": "3881:34:25",
                              "type": "",
                              "value": "Ownable: new owner is the zero a"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3861:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3861:55:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3861:55:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3937:3:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3942:2:25",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3933:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3933:12:25"
                            },
                            {
                              "kind": "string",
                              "nodeType": "YulLiteral",
                              "src": "3947:8:25",
                              "type": "",
                              "value": "ddress"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3926:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3926:30:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3926:30:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3966:19:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "3977:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3982:2:25",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3973:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3973:12:25"
                        },
                        "variableNames": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "3966:3:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "3755:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "3763:3:25",
                      "type": ""
                    }
                  ],
                  "src": "3621:370:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4143:168:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4153:74:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4219:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4224:2:25",
                              "type": "",
                              "value": "16"
                            }
                          ],
                          "functionName": {
                            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "4160:58:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4160:67:25"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4153:3:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4248:3:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4253:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4244:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4244:11:25"
                            },
                            {
                              "kind": "string",
                              "nodeType": "YulLiteral",
                              "src": "4257:18:25",
                              "type": "",
                              "value": "Pausable: paused"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4237:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4237:39:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4237:39:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4286:19:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4297:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4302:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4293:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4293:12:25"
                        },
                        "variableNames": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "4286:3:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4131:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "4139:3:25",
                      "type": ""
                    }
                  ],
                  "src": "3997:314:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4463:184:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4473:74:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4539:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4544:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "4480:58:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4480:67:25"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4473:3:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4568:3:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4573:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4564:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4564:11:25"
                            },
                            {
                              "kind": "string",
                              "nodeType": "YulLiteral",
                              "src": "4577:34:25",
                              "type": "",
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4557:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4557:55:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4557:55:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4622:19:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4633:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4638:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4629:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4629:12:25"
                        },
                        "variableNames": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "4622:3:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4451:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "4459:3:25",
                      "type": ""
                    }
                  ],
                  "src": "4317:330:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4718:53:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4735:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "4758:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "4740:17:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4740:24:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4728:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4728:37:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4728:37:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4706:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4713:3:25",
                      "type": ""
                    }
                  ],
                  "src": "4653:118:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4910:136:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4921:99:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5007:6:25"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5016:3:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "4928:78:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4928:92:25"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4921:3:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5030:10:25",
                        "value": {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "5037:3:25"
                        },
                        "variableNames": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "5030:3:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4889:3:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "4895:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "4906:3:25",
                      "type": ""
                    }
                  ],
                  "src": "4777:269:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5150:124:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5160:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "5172:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5183:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5168:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5168:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5160:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5240:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "5253:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5264:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5249:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5249:17:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_address_to_t_address_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "5196:43:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5196:71:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5196:71:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "5122:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "5134:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "5145:4:25",
                      "type": ""
                    }
                  ],
                  "src": "5052:222:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5428:225:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5438:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "5450:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5461:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5446:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5446:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5438:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "5485:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5496:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5481:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5481:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5504:4:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "5510:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "5500:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5500:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5474:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5474:47:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5474:47:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5530:116:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5632:6:25"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "5641:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "5538:93:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5538:108:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5530:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "5400:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "5412:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "5423:4:25",
                      "type": ""
                    }
                  ],
                  "src": "5280:373:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5751:118:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5761:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "5773:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5784:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5769:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5769:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5761:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5835:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "5848:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5859:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5844:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5844:17:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_bool_to_t_bool_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "5797:37:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5797:65:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5797:65:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "5723:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "5735:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "5746:4:25",
                      "type": ""
                    }
                  ],
                  "src": "5659:210:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5987:138:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5997:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "6009:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6020:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6005:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6005:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5997:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "6091:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "6104:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6115:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6100:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6100:17:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_enum$_MarketStatus_$768_to_t_uint8_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "6033:57:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6033:85:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6033:85:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_enum$_MarketStatus_$768__to_t_uint8__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "5959:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "5971:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "5982:4:25",
                      "type": ""
                    }
                  ],
                  "src": "5875:250:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6241:136:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6251:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "6263:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6274:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6259:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6259:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6251:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "6343:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "6356:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6367:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6352:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6352:17:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_enum$_MarketType_$765_to_t_uint8_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "6287:55:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6287:83:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6287:83:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_enum$_MarketType_$765__to_t_uint8__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "6213:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "6225:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "6236:4:25",
                      "type": ""
                    }
                  ],
                  "src": "6131:246:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6501:195:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6511:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "6523:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6534:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6519:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6519:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6511:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "6558:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6569:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6554:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6554:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6577:4:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "6583:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "6573:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6573:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6547:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6547:47:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6547:47:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6603:86:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "6675:6:25"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "6684:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "6611:63:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6611:78:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6603:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "6473:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "6485:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "6496:4:25",
                      "type": ""
                    }
                  ],
                  "src": "6383:313:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6873:248:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6883:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "6895:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6906:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6891:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6891:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6883:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "6930:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6941:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6926:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6926:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6949:4:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "6955:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "6945:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6945:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6919:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6919:47:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6919:47:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6975:139:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "7109:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "6983:124:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6983:131:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6975:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "6853:9:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "6868:4:25",
                      "type": ""
                    }
                  ],
                  "src": "6702:419:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7298:248:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7308:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "7320:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7331:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7316:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7316:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7308:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "7355:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7366:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7351:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7351:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7374:4:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "7380:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "7370:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7370:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7344:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7344:47:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7344:47:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7400:139:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "7534:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "7408:124:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7408:131:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7400:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "7278:9:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "7293:4:25",
                      "type": ""
                    }
                  ],
                  "src": "7127:419:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7723:248:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7733:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "7745:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7756:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7741:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7741:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7733:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "7780:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7791:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7776:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7776:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7799:4:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "7805:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "7795:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7795:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7769:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7769:47:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7769:47:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "7825:139:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "7959:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "7833:124:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7833:131:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7825:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "7703:9:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "7718:4:25",
                      "type": ""
                    }
                  ],
                  "src": "7552:419:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8148:248:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8158:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "8170:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8181:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8166:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8166:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8158:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "8205:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8216:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8201:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8201:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8224:4:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "8230:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "8220:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8220:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8194:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8194:47:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8194:47:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8250:139:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "8384:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "8258:124:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8258:131:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8250:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "8128:9:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "8143:4:25",
                      "type": ""
                    }
                  ],
                  "src": "7977:419:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8500:124:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8510:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "8522:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8533:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8518:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8518:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8510:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "8590:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "8603:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8614:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "8599:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8599:17:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "8546:43:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8546:71:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8546:71:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "8472:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "8484:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "8495:4:25",
                      "type": ""
                    }
                  ],
                  "src": "8402:222:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8702:60:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8712:11:25",
                        "value": {
                          "name": "ptr",
                          "nodeType": "YulIdentifier",
                          "src": "8720:3:25"
                        },
                        "variableNames": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "8712:4:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8733:22:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8745:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8750:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8741:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8741:14:25"
                        },
                        "variableNames": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "8733:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "ptr",
                      "nodeType": "YulTypedName",
                      "src": "8689:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "data",
                      "nodeType": "YulTypedName",
                      "src": "8697:4:25",
                      "type": ""
                    }
                  ],
                  "src": "8630:132:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8822:87:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8832:11:25",
                        "value": {
                          "name": "ptr",
                          "nodeType": "YulIdentifier",
                          "src": "8840:3:25"
                        },
                        "variableNames": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "8832:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8860:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8863:3:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8853:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8853:14:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8853:14:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8876:26:25",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8894:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8897:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nodeType": "YulIdentifier",
                            "src": "8884:9:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8884:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "8876:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_dataslot_t_string_storage",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "ptr",
                      "nodeType": "YulTypedName",
                      "src": "8809:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "data",
                      "nodeType": "YulTypedName",
                      "src": "8817:4:25",
                      "type": ""
                    }
                  ],
                  "src": "8768:141:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8989:40:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9000:22:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "9016:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "9010:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9010:12:25"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9000:6:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8972:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8982:6:25",
                      "type": ""
                    }
                  ],
                  "src": "8915:114:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9094:40:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9105:22:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "9121:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "9115:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9115:12:25"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9105:6:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_length_t_string_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9077:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9087:6:25",
                      "type": ""
                    }
                  ],
                  "src": "9035:99:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9215:38:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9225:22:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nodeType": "YulIdentifier",
                              "src": "9237:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9242:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9233:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9233:14:25"
                        },
                        "variableNames": [
                          {
                            "name": "next",
                            "nodeType": "YulIdentifier",
                            "src": "9225:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "ptr",
                      "nodeType": "YulTypedName",
                      "src": "9202:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "next",
                      "nodeType": "YulTypedName",
                      "src": "9210:4:25",
                      "type": ""
                    }
                  ],
                  "src": "9140:113:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9370:73:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9387:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "9392:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9380:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9380:19:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9380:19:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9408:29:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9427:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9432:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9423:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9423:14:25"
                        },
                        "variableNames": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulIdentifier",
                            "src": "9408:11:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "9342:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9347:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulTypedName",
                      "src": "9358:11:25",
                      "type": ""
                    }
                  ],
                  "src": "9259:184:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9545:73:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9562:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "9567:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9555:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9555:19:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9555:19:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9583:29:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "9602:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9607:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9598:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9598:14:25"
                        },
                        "variableNames": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulIdentifier",
                            "src": "9583:11:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "9517:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9522:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulTypedName",
                      "src": "9533:11:25",
                      "type": ""
                    }
                  ],
                  "src": "9449:169:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9738:34:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9748:18:25",
                        "value": {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "9763:3:25"
                        },
                        "variableNames": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulIdentifier",
                            "src": "9748:11:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "9710:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9715:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulTypedName",
                      "src": "9726:11:25",
                      "type": ""
                    }
                  ],
                  "src": "9624:148:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9823:51:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9833:35:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "9862:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_uint160",
                            "nodeType": "YulIdentifier",
                            "src": "9844:17:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9844:24:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "9833:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9805:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "9815:7:25",
                      "type": ""
                    }
                  ],
                  "src": "9778:96:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9922:48:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9932:32:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "9957:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "9950:6:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9950:13:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "9943:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9943:21:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "9932:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_bool",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9904:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "9914:7:25",
                      "type": ""
                    }
                  ],
                  "src": "9880:90:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10037:82:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10047:16:25",
                        "value": {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "10058:5:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "10047:7:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "10107:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_assert_t_enum$_MarketStatus_$768",
                            "nodeType": "YulIdentifier",
                            "src": "10064:42:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10064:49:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10064:49:25"
                      }
                    ]
                  },
                  "name": "cleanup_t_enum$_MarketStatus_$768",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10019:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "10029:7:25",
                      "type": ""
                    }
                  ],
                  "src": "9976:143:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10184:80:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10194:16:25",
                        "value": {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "10205:5:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "10194:7:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "10252:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_assert_t_enum$_MarketType_$765",
                            "nodeType": "YulIdentifier",
                            "src": "10211:40:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10211:47:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10211:47:25"
                      }
                    ]
                  },
                  "name": "cleanup_t_enum$_MarketType_$765",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10166:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "10176:7:25",
                      "type": ""
                    }
                  ],
                  "src": "10125:139:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10315:81:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10325:65:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "10340:5:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10347:42:25",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "10336:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10336:54:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "10325:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_uint160",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10297:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "10307:7:25",
                      "type": ""
                    }
                  ],
                  "src": "10270:126:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10447:32:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10457:16:25",
                        "value": {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "10468:5:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "10457:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_uint256",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10429:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "10439:7:25",
                      "type": ""
                    }
                  ],
                  "src": "10402:77:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10559:69:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10569:53:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "10616:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_enum$_MarketStatus_$768",
                            "nodeType": "YulIdentifier",
                            "src": "10582:33:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10582:40:25"
                        },
                        "variableNames": [
                          {
                            "name": "converted",
                            "nodeType": "YulIdentifier",
                            "src": "10569:9:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "convert_t_enum$_MarketStatus_$768_to_t_uint8",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10539:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "converted",
                      "nodeType": "YulTypedName",
                      "src": "10549:9:25",
                      "type": ""
                    }
                  ],
                  "src": "10485:143:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10706:67:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10716:51:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "10761:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_enum$_MarketType_$765",
                            "nodeType": "YulIdentifier",
                            "src": "10729:31:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10729:38:25"
                        },
                        "variableNames": [
                          {
                            "name": "converted",
                            "nodeType": "YulIdentifier",
                            "src": "10716:9:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "convert_t_enum$_MarketType_$765_to_t_uint8",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10686:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "converted",
                      "nodeType": "YulTypedName",
                      "src": "10696:9:25",
                      "type": ""
                    }
                  ],
                  "src": "10634:139:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10828:258:25",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10838:10:25",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10847:1:25",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "10842:1:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10907:63:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "10932:3:25"
                                      },
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "10937:1:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10928:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10928:11:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "10951:3:25"
                                          },
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "10956:1:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10947:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10947:11:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "10941:5:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10941:18:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10921:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10921:39:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10921:39:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "10868:1:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "10871:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "10865:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10865:13:25"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "10879:19:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10881:15:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "10890:1:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10893:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10886:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10886:10:25"
                              },
                              "variableNames": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "10881:1:25"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "10861:3:25",
                          "statements": []
                        },
                        "src": "10857:113:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11004:76:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "11054:3:25"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "11059:6:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11050:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11050:16:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11068:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11043:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11043:27:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11043:27:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "10985:1:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "10988:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "10982:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10982:13:25"
                        },
                        "nodeType": "YulIf",
                        "src": "10979:2:25"
                      }
                    ]
                  },
                  "name": "copy_memory_to_memory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "10810:3:25",
                      "type": ""
                    },
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "10815:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "10820:6:25",
                      "type": ""
                    }
                  ],
                  "src": "10779:307:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11143:269:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11153:22:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "11167:4:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11173:1:25",
                              "type": "",
                              "value": "2"
                            }
                          ],
                          "functionName": {
                            "name": "div",
                            "nodeType": "YulIdentifier",
                            "src": "11163:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11163:12:25"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "11153:6:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "11184:38:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "11214:4:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11220:1:25",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "11210:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11210:12:25"
                        },
                        "variables": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulTypedName",
                            "src": "11188:18:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11261:51:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11275:27:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11289:6:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11297:4:25",
                                    "type": "",
                                    "value": "0x7f"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11285:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11285:17:25"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "11275:6:25"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulIdentifier",
                              "src": "11241:18:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "11234:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11234:26:25"
                        },
                        "nodeType": "YulIf",
                        "src": "11231:2:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11364:42:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x22",
                                  "nodeType": "YulIdentifier",
                                  "src": "11378:16:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11378:18:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11378:18:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulIdentifier",
                              "src": "11328:18:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "11351:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11359:2:25",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "11348:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11348:14:25"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "11325:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11325:38:25"
                        },
                        "nodeType": "YulIf",
                        "src": "11322:2:25"
                      }
                    ]
                  },
                  "name": "extract_byte_array_length",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "data",
                      "nodeType": "YulTypedName",
                      "src": "11127:4:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "11136:6:25",
                      "type": ""
                    }
                  ],
                  "src": "11092:320:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11446:152:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11463:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11466:77:25",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11456:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11456:88:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11456:88:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11560:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11563:4:25",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11553:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11553:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11553:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11584:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11587:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11577:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11577:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11577:15:25"
                      }
                    ]
                  },
                  "name": "panic_error_0x21",
                  "nodeType": "YulFunctionDefinition",
                  "src": "11418:180:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11632:152:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11649:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11652:77:25",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11642:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11642:88:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11642:88:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11746:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11749:4:25",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11739:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11739:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11739:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11770:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11773:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11763:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11763:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11763:15:25"
                      }
                    ]
                  },
                  "name": "panic_error_0x22",
                  "nodeType": "YulFunctionDefinition",
                  "src": "11604:180:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11838:54:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11848:38:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "11866:5:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11873:2:25",
                                  "type": "",
                                  "value": "31"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11862:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11862:14:25"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11882:2:25",
                                  "type": "",
                                  "value": "31"
                                }
                              ],
                              "functionName": {
                                "name": "not",
                                "nodeType": "YulIdentifier",
                                "src": "11878:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11878:7:25"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "11858:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11858:28:25"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "11848:6:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "round_up_to_mul_of_32",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "11821:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "result",
                      "nodeType": "YulTypedName",
                      "src": "11831:6:25",
                      "type": ""
                    }
                  ],
                  "src": "11790:102:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11957:62:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11991:22:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x21",
                                  "nodeType": "YulIdentifier",
                                  "src": "11993:16:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11993:18:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11993:18:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "11980:5:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11987:1:25",
                                  "type": "",
                                  "value": "2"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "11977:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11977:12:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "11970:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11970:20:25"
                        },
                        "nodeType": "YulIf",
                        "src": "11967:2:25"
                      }
                    ]
                  },
                  "name": "validator_assert_t_enum$_MarketStatus_$768",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "11950:5:25",
                      "type": ""
                    }
                  ],
                  "src": "11898:121:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12082:62:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12116:22:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x21",
                                  "nodeType": "YulIdentifier",
                                  "src": "12118:16:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12118:18:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12118:18:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "12105:5:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12112:1:25",
                                  "type": "",
                                  "value": "2"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "12102:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12102:12:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "12095:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12095:20:25"
                        },
                        "nodeType": "YulIf",
                        "src": "12092:2:25"
                      }
                    ]
                  },
                  "name": "validator_assert_t_enum$_MarketType_$765",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "12075:5:25",
                      "type": ""
                    }
                  ],
                  "src": "12025:119:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12193:79:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12250:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12259:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12262:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "12252:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12252:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12252:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "12216:5:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "12241:5:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_address",
                                    "nodeType": "YulIdentifier",
                                    "src": "12223:17:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12223:24:25"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "12213:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12213:35:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "12206:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12206:43:25"
                        },
                        "nodeType": "YulIf",
                        "src": "12203:2:25"
                      }
                    ]
                  },
                  "name": "validator_revert_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "12186:5:25",
                      "type": ""
                    }
                  ],
                  "src": "12150:122:25"
                }
              ]
            },
            "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_enum$_MarketStatus_$768_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_MarketStatus_$768_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_MarketType_$765_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_MarketType_$765_to_t_uint8(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n\n        mstore(add(pos, 0), \"Pausable: not paused\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n\n        mstore(add(pos, 0), \"Pausable: paused\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_enum$_MarketStatus_$768__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_MarketStatus_$768_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_enum$_MarketType_$765__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_MarketType_$765_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_MarketStatus_$768(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_MarketStatus_$768(value)\n    }\n\n    function cleanup_t_enum$_MarketType_$765(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_MarketType_$765(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_MarketStatus_$768_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_MarketStatus_$768(value)\n    }\n\n    function convert_t_enum$_MarketType_$765_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_MarketType_$765(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_assert_t_enum$_MarketStatus_$768(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function validator_assert_t_enum$_MarketType_$765(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
            "id": 25,
            "language": "Yul",
            "name": "#utility.yul"
          }
        ],
        "sourceMap": "324:1743:11:-:0;;;1020:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:17;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;208:10:2;188:17;;:30;;;;;;;;;;;;;;;;;;935:5:18;925:7;;:15;;;;;;;;;;;;;;;;;;1111:10:11;1097:11;:24;;;;;;;;;;;;:::i;:::-;;1141:10;1127:11;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:238;;324:1743;;586:96:20;639:7;665:10;658:17;;586:96;:::o;324:1743:11:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:353:25:-;;121:65;136:49;178:6;136:49;:::i;:::-;121:65;:::i;:::-;112:74;;209:6;202:5;195:21;247:4;240:5;236:16;285:3;276:6;271:3;267:16;264:25;261:2;;;302:1;299;292:12;261:2;315:39;347:6;342:3;337;315:39;:::i;:::-;102:258;;;;;;:::o;366:171::-;;468:6;462:13;453:22;;484:47;525:5;484:47;:::i;:::-;443:94;;;;:::o;557:288::-;;673:3;666:4;658:6;654:17;650:27;640:2;;691:1;688;681:12;640:2;724:6;718:13;749:90;835:3;827:6;820:4;812:6;808:17;749:90;:::i;:::-;740:99;;630:215;;;;;:::o;851:574::-;;;1011:2;999:9;990:7;986:23;982:32;979:2;;;1027:1;1024;1017:12;979:2;1091:1;1080:9;1076:17;1070:24;1121:18;1113:6;1110:30;1107:2;;;1153:1;1150;1143:12;1107:2;1181:74;1247:7;1238:6;1227:9;1223:22;1181:74;:::i;:::-;1171:84;;1041:224;1304:2;1330:78;1400:7;1391:6;1380:9;1376:22;1330:78;:::i;:::-;1320:88;;1275:143;969:456;;;;;:::o;1431:283::-;;1497:2;1491:9;1481:19;;1539:4;1531:6;1527:17;1646:6;1634:10;1631:22;1610:18;1598:10;1595:34;1592:62;1589:2;;;1657:18;;:::i;:::-;1589:2;1697:10;1693:2;1686:22;1471:243;;;;:::o;1720:332::-;;1872:18;1864:6;1861:30;1858:2;;;1894:18;;:::i;:::-;1858:2;1979:4;1975:9;1968:4;1960:6;1956:17;1952:33;1944:41;;2040:4;2034;2030:15;2022:23;;1787:265;;;:::o;2058:307::-;2126:1;2136:113;2150:6;2147:1;2144:13;2136:113;;;2235:1;2230:3;2226:11;2220:18;2216:1;2211:3;2207:11;2200:39;2172:2;2169:1;2165:10;2160:15;;2136:113;;;2267:6;2264:1;2261:13;2258:2;;;2347:1;2338:6;2333:3;2329:16;2322:27;2258:2;2107:258;;;;:::o;2371:320::-;;2452:1;2446:4;2442:12;2432:22;;2499:1;2493:4;2489:12;2520:18;2510:2;;2576:4;2568:6;2564:17;2554:27;;2510:2;2638;2630:6;2627:14;2607:18;2604:38;2601:2;;;2657:18;;:::i;:::-;2601:2;2422:269;;;;:::o;2697:180::-;2745:77;2742:1;2735:88;2842:4;2839:1;2832:15;2866:4;2863:1;2856:15;2883:180;2931:77;2928:1;2921:88;3028:4;3025:1;3018:15;3052:4;3049:1;3042:15;3069:113;3156:1;3149:5;3146:12;3136:2;;3172:1;3169;3162:12;3136:2;3126:56;:::o;324:1743:11:-;;;;;;;",
        "deployedSourceMap": "324:1743:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1891:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1042:84:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;791:25:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1700:145:17;;;:::i;:::-;;1260:235:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;818:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;935:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1068:85:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1657:158:11;;;:::i;:::-;;1497;;;:::i;:::-;;895:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1817:72;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1994:240:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;859:34:11;;;;:::o;1891:102::-;1945:16;1972:18;1965:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:102;:::o;1042:84:18:-;1089:4;1112:7;;;;;;;;;;;1105:14;;1042:84;:::o;791:25:11:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1700:145:17:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;1260:235:11:-;1360:1;1333:29;;:15;:29;;;;1325:38;;;;;;1369:18;1393:15;1369:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1476:15;1420:72;;1463:11;1420:72;;;;;;:::i;:::-;;;;;;;;1456:4;1420:72;;;;;;;;;;;;1260:235;:::o;818:39::-;;;;;;;;;;;;;:::o;935:43::-;;;;;;;;;;;;;:::o;1068:85:17:-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;1657:158:11:-;1291:12:17;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1721:10:11::1;314:17:2;;;;;;;;;;;301:30;;:9;:30;;;293:39;;;::::0;::::1;;1752:11:11::2;;;;;;;;;;;453:28:2;439:42;;;;;;;;;;;;;;;;:10;:42;;;;;;;;;;;;;;;;;431:51;;;::::0;::::2;;1781:13:11::3;;;;;;;;;;;913:29:2;897:45;;;;;;;;;;;;;;;;:12;:45;;;;;;;;;;;;;;;;;889:54;;;::::0;::::3;;1802:10:11::4;:8;:10::i;:::-;492:1:2::3;343::::2;1350::17::1;1657:158:11:o:0;1497:::-;1291:12:17;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1560:10:11::1;314:17:2;;;;;;;;;;;301:30;;:9;:30;;;293:39;;;::::0;::::1;;1591:11:11::2;;;;;;;;;;;453:28:2;439:42;;;;;;;;;;;;;;;;:10;:42;;;;;;;;;;;;;;;;;431:51;;;::::0;::::2;;1623:13:11::3;;;;;;;;;;;758:29:2;742:45:::0;::::3;;;;;;;;;;;;;;;:12;:45;;;;;;;;;;;;;;;;;;734:54;;;::::0;::::3;;1644:8:11::4;:6;:8::i;:::-;492:1:2::3;343::::2;1350::17::1;1497:158:11:o:0;895:38::-;;;;:::o;1817:72::-;1863:4;1878:8;:6;:8::i;:::-;1871:15;;1817:72;:::o;1994:240:17:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;586:96:20:-;639:7;665:10;658:17;;586:96;:::o;2054:117:18:-;1621:8;:6;:8::i;:::-;1613:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2122:5:::1;2112:7;;:15;;;;;;;;;;;;;;;;;;2142:22;2151:12;:10;:12::i;:::-;2142:22;;;;;;:::i;:::-;;;;;;;;2054:117::o:0;1807:115::-;1356:8;:6;:8::i;:::-;1355:9;1347:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1876:4:::1;1866:7:::0;::::1;:14;;;;;;;;;;;;;;;;;;1895:20;1902:12;:10;:12::i;:::-;1895:20;;;;;;:::i;:::-;;;;;;;;1807:115::o:0;7:139:25:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:179::-;;510:46;552:3;544:6;510:46;:::i;:::-;588:4;583:3;579:14;565:28;;500:99;;;;:::o;605:108::-;682:24;700:5;682:24;:::i;:::-;677:3;670:37;660:53;;:::o;719:118::-;806:24;824:5;806:24;:::i;:::-;801:3;794:37;784:53;;:::o;873:732::-;;1021:54;1069:5;1021:54;:::i;:::-;1091:86;1170:6;1165:3;1091:86;:::i;:::-;1084:93;;1201:56;1251:5;1201:56;:::i;:::-;1280:7;1311:1;1296:284;1321:6;1318:1;1315:13;1296:284;;;1397:6;1391:13;1424:63;1483:3;1468:13;1424:63;:::i;:::-;1417:70;;1510:60;1563:6;1510:60;:::i;:::-;1500:70;;1356:224;1343:1;1340;1336:9;1331:14;;1296:284;;;1300:14;1596:3;1589:10;;997:608;;;;;;;:::o;1611:109::-;1692:21;1707:5;1692:21;:::i;:::-;1687:3;1680:34;1670:50;;:::o;1726:159::-;1827:51;1872:5;1827:51;:::i;:::-;1822:3;1815:64;1805:80;;:::o;1891:155::-;1990:49;2033:5;1990:49;:::i;:::-;1985:3;1978:62;1968:78;;:::o;2052:364::-;;2168:39;2201:5;2168:39;:::i;:::-;2223:71;2287:6;2282:3;2223:71;:::i;:::-;2216:78;;2303:52;2348:6;2343:3;2336:4;2329:5;2325:16;2303:52;:::i;:::-;2380:29;2402:6;2380:29;:::i;:::-;2375:3;2371:39;2364:46;;2144:272;;;;;:::o;2446:845::-;;2586:5;2580:12;2615:36;2641:9;2615:36;:::i;:::-;2667:89;2749:6;2744:3;2667:89;:::i;:::-;2660:96;;2787:1;2776:9;2772:17;2803:1;2798:137;;;;2949:1;2944:341;;;;2765:520;;2798:137;2882:4;2878:9;2867;2863:25;2858:3;2851:38;2918:6;2913:3;2909:16;2902:23;;2798:137;;2944:341;3011:38;3043:5;3011:38;:::i;:::-;3071:1;3085:154;3099:6;3096:1;3093:13;3085:154;;;3173:7;3167:14;3163:1;3158:3;3154:11;3147:35;3223:1;3214:7;3210:15;3199:26;;3121:4;3118:1;3114:12;3109:17;;3085:154;;;3268:6;3263:3;3259:16;3252:23;;2951:334;;2765:520;;2553:738;;;;;;:::o;3297:318::-;;3460:67;3524:2;3519:3;3460:67;:::i;:::-;3453:74;;3557:22;3553:1;3548:3;3544:11;3537:43;3606:2;3601:3;3597:12;3590:19;;3443:172;;;:::o;3621:370::-;;3784:67;3848:2;3843:3;3784:67;:::i;:::-;3777:74;;3881:34;3877:1;3872:3;3868:11;3861:55;3947:8;3942:2;3937:3;3933:12;3926:30;3982:2;3977:3;3973:12;3966:19;;3767:224;;;:::o;3997:314::-;;4160:67;4224:2;4219:3;4160:67;:::i;:::-;4153:74;;4257:18;4253:1;4248:3;4244:11;4237:39;4302:2;4297:3;4293:12;4286:19;;4143:168;;;:::o;4317:330::-;;4480:67;4544:2;4539:3;4480:67;:::i;:::-;4473:74;;4577:34;4573:1;4568:3;4564:11;4557:55;4638:2;4633:3;4629:12;4622:19;;4463:184;;;:::o;4653:118::-;4740:24;4758:5;4740:24;:::i;:::-;4735:3;4728:37;4718:53;;:::o;4777:269::-;;4928:92;5016:3;5007:6;4928:92;:::i;:::-;4921:99;;5037:3;5030:10;;4910:136;;;;:::o;5052:222::-;;5183:2;5172:9;5168:18;5160:26;;5196:71;5264:1;5253:9;5249:17;5240:6;5196:71;:::i;:::-;5150:124;;;;:::o;5280:373::-;;5461:2;5450:9;5446:18;5438:26;;5510:9;5504:4;5500:20;5496:1;5485:9;5481:17;5474:47;5538:108;5641:4;5632:6;5538:108;:::i;:::-;5530:116;;5428:225;;;;:::o;5659:210::-;;5784:2;5773:9;5769:18;5761:26;;5797:65;5859:1;5848:9;5844:17;5835:6;5797:65;:::i;:::-;5751:118;;;;:::o;5875:250::-;;6020:2;6009:9;6005:18;5997:26;;6033:85;6115:1;6104:9;6100:17;6091:6;6033:85;:::i;:::-;5987:138;;;;:::o;6131:246::-;;6274:2;6263:9;6259:18;6251:26;;6287:83;6367:1;6356:9;6352:17;6343:6;6287:83;:::i;:::-;6241:136;;;;:::o;6383:313::-;;6534:2;6523:9;6519:18;6511:26;;6583:9;6577:4;6573:20;6569:1;6558:9;6554:17;6547:47;6611:78;6684:4;6675:6;6611:78;:::i;:::-;6603:86;;6501:195;;;;:::o;6702:419::-;;6906:2;6895:9;6891:18;6883:26;;6955:9;6949:4;6945:20;6941:1;6930:9;6926:17;6919:47;6983:131;7109:4;6983:131;:::i;:::-;6975:139;;6873:248;;;:::o;7127:419::-;;7331:2;7320:9;7316:18;7308:26;;7380:9;7374:4;7370:20;7366:1;7355:9;7351:17;7344:47;7408:131;7534:4;7408:131;:::i;:::-;7400:139;;7298:248;;;:::o;7552:419::-;;7756:2;7745:9;7741:18;7733:26;;7805:9;7799:4;7795:20;7791:1;7780:9;7776:17;7769:47;7833:131;7959:4;7833:131;:::i;:::-;7825:139;;7723:248;;;:::o;7977:419::-;;8181:2;8170:9;8166:18;8158:26;;8230:9;8224:4;8220:20;8216:1;8205:9;8201:17;8194:47;8258:131;8384:4;8258:131;:::i;:::-;8250:139;;8148:248;;;:::o;8402:222::-;;8533:2;8522:9;8518:18;8510:26;;8546:71;8614:1;8603:9;8599:17;8590:6;8546:71;:::i;:::-;8500:124;;;;:::o;8630:132::-;;8720:3;8712:11;;8750:4;8745:3;8741:14;8733:22;;8702:60;;;:::o;8768:141::-;;8840:3;8832:11;;8863:3;8860:1;8853:14;8897:4;8894:1;8884:18;8876:26;;8822:87;;;:::o;8915:114::-;;9016:5;9010:12;9000:22;;8989:40;;;:::o;9035:99::-;;9121:5;9115:12;9105:22;;9094:40;;;:::o;9140:113::-;;9242:4;9237:3;9233:14;9225:22;;9215:38;;;:::o;9259:184::-;;9392:6;9387:3;9380:19;9432:4;9427:3;9423:14;9408:29;;9370:73;;;;:::o;9449:169::-;;9567:6;9562:3;9555:19;9607:4;9602:3;9598:14;9583:29;;9545:73;;;;:::o;9624:148::-;;9763:3;9748:18;;9738:34;;;;:::o;9778:96::-;;9844:24;9862:5;9844:24;:::i;:::-;9833:35;;9823:51;;;:::o;9880:90::-;;9957:5;9950:13;9943:21;9932:32;;9922:48;;;:::o;9976:143::-;;10058:5;10047:16;;10064:49;10107:5;10064:49;:::i;:::-;10037:82;;;:::o;10125:139::-;;10205:5;10194:16;;10211:47;10252:5;10211:47;:::i;:::-;10184:80;;;:::o;10270:126::-;;10347:42;10340:5;10336:54;10325:65;;10315:81;;;:::o;10402:77::-;;10468:5;10457:16;;10447:32;;;:::o;10485:143::-;;10582:40;10616:5;10582:40;:::i;:::-;10569:53;;10559:69;;;:::o;10634:139::-;;10729:38;10761:5;10729:38;:::i;:::-;10716:51;;10706:67;;;:::o;10779:307::-;10847:1;10857:113;10871:6;10868:1;10865:13;10857:113;;;10956:1;10951:3;10947:11;10941:18;10937:1;10932:3;10928:11;10921:39;10893:2;10890:1;10886:10;10881:15;;10857:113;;;10988:6;10985:1;10982:13;10979:2;;;11068:1;11059:6;11054:3;11050:16;11043:27;10979:2;10828:258;;;;:::o;11092:320::-;;11173:1;11167:4;11163:12;11153:22;;11220:1;11214:4;11210:12;11241:18;11231:2;;11297:4;11289:6;11285:17;11275:27;;11231:2;11359;11351:6;11348:14;11328:18;11325:38;11322:2;;;11378:18;;:::i;:::-;11322:2;11143:269;;;;:::o;11418:180::-;11466:77;11463:1;11456:88;11563:4;11560:1;11553:15;11587:4;11584:1;11577:15;11604:180;11652:77;11649:1;11642:88;11749:4;11746:1;11739:15;11773:4;11770:1;11763:15;11790:102;;11882:2;11878:7;11873:2;11866:5;11862:14;11858:28;11848:38;;11838:54;;;:::o;11898:121::-;11987:1;11980:5;11977:12;11967:2;;11993:18;;:::i;:::-;11967:2;11957:62;:::o;12025:119::-;12112:1;12105:5;12102:12;12092:2;;12118:18;;:::i;:::-;12092:2;12082:62;:::o;12150:122::-;12223:24;12241:5;12223:24;:::i;:::-;12216:5;12213:35;12203:2;;12262:1;12259;12252:12;12203:2;12193:79;:::o",
        "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"../libraries/Evaluation.sol\";\nimport \"../exchange/WorkRelationship.sol\";\nimport \"../libraries/MarketLib.sol\";\nimport \"../control/Controllable.sol\";\n\ncontract Market is Ownable, Controllable, Pausable {\nevent MarketObservingRelationship(address indexed marketAddress, string indexed marketName, address indexed workRelationship);\nevent MarketUnObservingRelationship(address indexed marketAddress, string indexed marketName, address indexed workRelationship);\nevent MarketPaused(address indexed marketAddress, string indexed marketName);\nevent MarketResumed(address indexed marketAddress, string indexed marketName);\n\nstring public _marketName;\nMarketLib.MarketType public _marketType;\nuint256 public _requiredReputation;\nuint256 public _requiredIndustryWeight;\nMarketLib.MarketStatus public _marketStatus;\n\naddress[] private _workRelationships;\n\nconstructor(string memory marketName, MarketLib.MarketType marketType) {\n    _marketName = marketName;\n    _marketType = marketType;\n   // _requiredReputation = requiredReputation;\n   // _requiredIndustryWeight = requiredIndustryWeight;\n}\n\nfunction addRelationship(address newRelationship) external {\n    require(newRelationship != address(0));\n    _workRelationships.push(newRelationship);\n    emit MarketObservingRelationship(address(this), _marketName, newRelationship);\n}\n\nfunction pauseMarket() external onlyOwner onlyGlobalController(msg.sender) onlyDefaultMarkets(_marketType) onlyNotPausedState(_marketStatus) {\n    _pause();\n}\n\nfunction resumeMarket() external onlyOwner onlyGlobalController(msg.sender) onlyDefaultMarkets(_marketType) onlyPausedState(_marketStatus) {\n    _unpause();\n}\n\nfunction getMarketState() public view returns(bool) { return paused(); }\n\nfunction getWorkRelationships() external view returns(address[] memory) { return _workRelationships; }\n\nfunction destroyMarket() internal onlyOwner {\n    //selfdestruct(); \n}\n}\n",
        "sourcePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/market/Market.sol",
        "ast": {
          "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/market/Market.sol",
          "exportedSymbols": {
            "Address": [
              2205
            ],
            "ConditionalEscrow": [
              2263
            ],
            "Context": [
              2228
            ],
            "Controllable": [
              176
            ],
            "Escrow": [
              2363
            ],
            "Evaluation": [
              760
            ],
            "IUserSummary": [
              1707
            ],
            "Market": [
              1197
            ],
            "MarketLib": [
              769
            ],
            "MultiPartyOwneable": [
              363
            ],
            "Ownable": [
              1817
            ],
            "Pausable": [
              1909
            ],
            "RefundEscrow": [
              2542
            ],
            "SafeMath": [
              2854
            ],
            "StringUtils": [
              1010
            ],
            "User": [
              1030
            ],
            "UserSummary": [
              1567
            ],
            "WorkExchange": [
              556
            ],
            "WorkRelationship": [
              742
            ]
          },
          "id": 1198,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1032,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:11"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1033,
              "nodeType": "ImportDirective",
              "scope": 1198,
              "sourceUnit": 1818,
              "src": "58:52:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
              "file": "@openzeppelin/contracts/security/Pausable.sol",
              "id": 1034,
              "nodeType": "ImportDirective",
              "scope": 1198,
              "sourceUnit": 1910,
              "src": "111:55:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/Evaluation.sol",
              "file": "../libraries/Evaluation.sol",
              "id": 1035,
              "nodeType": "ImportDirective",
              "scope": 1198,
              "sourceUnit": 761,
              "src": "167:37:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkRelationship.sol",
              "file": "../exchange/WorkRelationship.sol",
              "id": 1036,
              "nodeType": "ImportDirective",
              "scope": 1198,
              "sourceUnit": 743,
              "src": "205:42:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/MarketLib.sol",
              "file": "../libraries/MarketLib.sol",
              "id": 1037,
              "nodeType": "ImportDirective",
              "scope": 1198,
              "sourceUnit": 770,
              "src": "248:36:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/control/Controllable.sol",
              "file": "../control/Controllable.sol",
              "id": 1038,
              "nodeType": "ImportDirective",
              "scope": 1198,
              "sourceUnit": 177,
              "src": "285:37:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1039,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1817,
                    "src": "343:7:11"
                  },
                  "id": 1040,
                  "nodeType": "InheritanceSpecifier",
                  "src": "343:7:11"
                },
                {
                  "baseName": {
                    "id": 1041,
                    "name": "Controllable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 176,
                    "src": "352:12:11"
                  },
                  "id": 1042,
                  "nodeType": "InheritanceSpecifier",
                  "src": "352:12:11"
                },
                {
                  "baseName": {
                    "id": 1043,
                    "name": "Pausable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1909,
                    "src": "366:8:11"
                  },
                  "id": 1044,
                  "nodeType": "InheritanceSpecifier",
                  "src": "366:8:11"
                }
              ],
              "contractDependencies": [
                176,
                1817,
                1909,
                2228
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1197,
              "linearizedBaseContracts": [
                1197,
                1909,
                176,
                1817,
                2228
              ],
              "name": "Market",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 1052,
                  "name": "MarketObservingRelationship",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1051,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1046,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "marketAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1052,
                        "src": "411:29:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1045,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "411:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1048,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "marketName",
                        "nodeType": "VariableDeclaration",
                        "scope": 1052,
                        "src": "442:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1047,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "442:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1050,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "workRelationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 1052,
                        "src": "469:32:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1049,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "469:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "410:92:11"
                  },
                  "src": "377:126:11"
                },
                {
                  "anonymous": false,
                  "id": 1060,
                  "name": "MarketUnObservingRelationship",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1059,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1054,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "marketAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "540:29:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1053,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1056,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "marketName",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "571:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1055,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "571:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1058,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "workRelationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "598:32:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1057,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "598:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:92:11"
                  },
                  "src": "504:128:11"
                },
                {
                  "anonymous": false,
                  "id": 1066,
                  "name": "MarketPaused",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1065,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1062,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "marketAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "652:29:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1061,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "652:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1064,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "marketName",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "683:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1063,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "651:58:11"
                  },
                  "src": "633:77:11"
                },
                {
                  "anonymous": false,
                  "id": 1072,
                  "name": "MarketResumed",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1071,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1068,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "marketAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "731:29:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "731:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1070,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "marketName",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "762:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1069,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "762:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "730:58:11"
                  },
                  "src": "711:78:11"
                },
                {
                  "constant": false,
                  "functionSelector": "6039c8d7",
                  "id": 1074,
                  "mutability": "mutable",
                  "name": "_marketName",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "791:25:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7cf63de9",
                  "id": 1077,
                  "mutability": "mutable",
                  "name": "_marketType",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "818:39:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_MarketType_$765",
                    "typeString": "enum MarketLib.MarketType"
                  },
                  "typeName": {
                    "id": 1076,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1075,
                      "name": "MarketLib.MarketType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 765,
                      "src": "818:20:11"
                    },
                    "referencedDeclaration": 765,
                    "src": "818:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MarketType_$765",
                      "typeString": "enum MarketLib.MarketType"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0f091637",
                  "id": 1079,
                  "mutability": "mutable",
                  "name": "_requiredReputation",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "859:34:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c143521f",
                  "id": 1081,
                  "mutability": "mutable",
                  "name": "_requiredIndustryWeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "895:38:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1080,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "895:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "838069f7",
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "_marketStatus",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "935:43:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_MarketStatus_$768",
                    "typeString": "enum MarketLib.MarketStatus"
                  },
                  "typeName": {
                    "id": 1083,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1082,
                      "name": "MarketLib.MarketStatus",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 768,
                      "src": "935:22:11"
                    },
                    "referencedDeclaration": 768,
                    "src": "935:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MarketStatus_$768",
                      "typeString": "enum MarketLib.MarketStatus"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1087,
                  "mutability": "mutable",
                  "name": "_workRelationships",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "981:36:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1085,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "981:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1086,
                    "nodeType": "ArrayTypeName",
                    "src": "981:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1103,
                    "nodeType": "Block",
                    "src": "1091:167:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1095,
                            "name": "_marketName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1074,
                            "src": "1097:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1096,
                            "name": "marketName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1089,
                            "src": "1111:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1097:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1098,
                        "nodeType": "ExpressionStatement",
                        "src": "1097:24:11"
                      },
                      {
                        "expression": {
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1099,
                            "name": "_marketType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1077,
                            "src": "1127:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MarketType_$765",
                              "typeString": "enum MarketLib.MarketType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1100,
                            "name": "marketType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1092,
                            "src": "1141:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MarketType_$765",
                              "typeString": "enum MarketLib.MarketType"
                            }
                          },
                          "src": "1127:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketType_$765",
                            "typeString": "enum MarketLib.MarketType"
                          }
                        },
                        "id": 1102,
                        "nodeType": "ExpressionStatement",
                        "src": "1127:24:11"
                      }
                    ]
                  },
                  "id": 1104,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1093,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1089,
                        "mutability": "mutable",
                        "name": "marketName",
                        "nodeType": "VariableDeclaration",
                        "scope": 1104,
                        "src": "1032:24:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1088,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1032:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1092,
                        "mutability": "mutable",
                        "name": "marketType",
                        "nodeType": "VariableDeclaration",
                        "scope": 1104,
                        "src": "1058:31:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MarketType_$765",
                          "typeString": "enum MarketLib.MarketType"
                        },
                        "typeName": {
                          "id": 1091,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1090,
                            "name": "MarketLib.MarketType",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 765,
                            "src": "1058:20:11"
                          },
                          "referencedDeclaration": 765,
                          "src": "1058:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketType_$765",
                            "typeString": "enum MarketLib.MarketType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1031:59:11"
                  },
                  "returnParameters": {
                    "id": 1094,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1091:0:11"
                  },
                  "scope": 1197,
                  "src": "1020:238:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1133,
                    "nodeType": "Block",
                    "src": "1319:176:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1110,
                                "name": "newRelationship",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1106,
                                "src": "1333:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1113,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1360:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1112,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1352:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1111,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1352:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1352:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1333:29:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1109,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1325:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1325:38:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1117,
                        "nodeType": "ExpressionStatement",
                        "src": "1325:38:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1121,
                              "name": "newRelationship",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1106,
                              "src": "1393:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1118,
                              "name": "_workRelationships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1087,
                              "src": "1369:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1369:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1369:40:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1123,
                        "nodeType": "ExpressionStatement",
                        "src": "1369:40:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1127,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1456:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Market_$1197",
                                    "typeString": "contract Market"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Market_$1197",
                                    "typeString": "contract Market"
                                  }
                                ],
                                "id": 1126,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1448:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1125,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1448:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1448:13:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1129,
                              "name": "_marketName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1074,
                              "src": "1463:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "id": 1130,
                              "name": "newRelationship",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1106,
                              "src": "1476:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1124,
                            "name": "MarketObservingRelationship",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "1420:27:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (address,string memory,address)"
                            }
                          },
                          "id": 1131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1420:72:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1132,
                        "nodeType": "EmitStatement",
                        "src": "1415:77:11"
                      }
                    ]
                  },
                  "functionSelector": "79bda937",
                  "id": 1134,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addRelationship",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1107,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1106,
                        "mutability": "mutable",
                        "name": "newRelationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 1134,
                        "src": "1285:23:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1105,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1285:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1284:25:11"
                  },
                  "returnParameters": {
                    "id": 1108,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1319:0:11"
                  },
                  "scope": 1197,
                  "src": "1260:235:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1152,
                    "nodeType": "Block",
                    "src": "1638:17:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1149,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1892,
                            "src": "1644:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1644:8:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1151,
                        "nodeType": "ExpressionStatement",
                        "src": "1644:8:11"
                      }
                    ]
                  },
                  "functionSelector": "a03738dc",
                  "id": 1153,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1137,
                      "modifierName": {
                        "id": 1136,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1766,
                        "src": "1529:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1529:9:11"
                    },
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1139,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1560:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1560:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1141,
                      "modifierName": {
                        "id": 1138,
                        "name": "onlyGlobalController",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 115,
                        "src": "1539:20:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1539:32:11"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1143,
                          "name": "_marketType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1077,
                          "src": "1591:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketType_$765",
                            "typeString": "enum MarketLib.MarketType"
                          }
                        }
                      ],
                      "id": 1144,
                      "modifierName": {
                        "id": 1142,
                        "name": "onlyDefaultMarkets",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 130,
                        "src": "1572:18:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1572:31:11"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1146,
                          "name": "_marketStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "1623:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketStatus_$768",
                            "typeString": "enum MarketLib.MarketStatus"
                          }
                        }
                      ],
                      "id": 1147,
                      "modifierName": {
                        "id": 1145,
                        "name": "onlyNotPausedState",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 160,
                        "src": "1604:18:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1604:33:11"
                    }
                  ],
                  "name": "pauseMarket",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1135,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1517:2:11"
                  },
                  "returnParameters": {
                    "id": 1148,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:11"
                  },
                  "scope": 1197,
                  "src": "1497:158:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1171,
                    "nodeType": "Block",
                    "src": "1796:19:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1168,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1908,
                            "src": "1802:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1802:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1170,
                        "nodeType": "ExpressionStatement",
                        "src": "1802:10:11"
                      }
                    ]
                  },
                  "functionSelector": "9319106b",
                  "id": 1172,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1156,
                      "modifierName": {
                        "id": 1155,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1766,
                        "src": "1690:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1690:9:11"
                    },
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1158,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1721:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1721:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1160,
                      "modifierName": {
                        "id": 1157,
                        "name": "onlyGlobalController",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 115,
                        "src": "1700:20:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1700:32:11"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1162,
                          "name": "_marketType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1077,
                          "src": "1752:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketType_$765",
                            "typeString": "enum MarketLib.MarketType"
                          }
                        }
                      ],
                      "id": 1163,
                      "modifierName": {
                        "id": 1161,
                        "name": "onlyDefaultMarkets",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 130,
                        "src": "1733:18:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1733:31:11"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1165,
                          "name": "_marketStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "1781:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketStatus_$768",
                            "typeString": "enum MarketLib.MarketStatus"
                          }
                        }
                      ],
                      "id": 1166,
                      "modifierName": {
                        "id": 1164,
                        "name": "onlyPausedState",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 175,
                        "src": "1765:15:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1765:30:11"
                    }
                  ],
                  "name": "resumeMarket",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1154,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1678:2:11"
                  },
                  "returnParameters": {
                    "id": 1167,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1796:0:11"
                  },
                  "scope": 1197,
                  "src": "1657:158:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1180,
                    "nodeType": "Block",
                    "src": "1869:20:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1177,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1853,
                            "src": "1878:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1878:8:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1176,
                        "id": 1179,
                        "nodeType": "Return",
                        "src": "1871:15:11"
                      }
                    ]
                  },
                  "functionSelector": "d8165743",
                  "id": 1181,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getMarketState",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1173,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1840:2:11"
                  },
                  "returnParameters": {
                    "id": 1176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1175,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1181,
                        "src": "1863:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1174,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1863:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1862:6:11"
                  },
                  "scope": 1197,
                  "src": "1817:72:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1189,
                    "nodeType": "Block",
                    "src": "1963:30:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1187,
                          "name": "_workRelationships",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1087,
                          "src": "1972:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1186,
                        "id": 1188,
                        "nodeType": "Return",
                        "src": "1965:25:11"
                      }
                    ]
                  },
                  "functionSelector": "36e114fc",
                  "id": 1190,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getWorkRelationships",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1182,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1920:2:11"
                  },
                  "returnParameters": {
                    "id": 1186,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1185,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1190,
                        "src": "1945:16:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1183,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1945:7:11",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1184,
                          "nodeType": "ArrayTypeName",
                          "src": "1945:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1944:18:11"
                  },
                  "scope": 1197,
                  "src": "1891:102:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1195,
                    "nodeType": "Block",
                    "src": "2039:26:11",
                    "statements": []
                  },
                  "id": 1196,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1193,
                      "modifierName": {
                        "id": 1192,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1766,
                        "src": "2029:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2029:9:11"
                    }
                  ],
                  "name": "destroyMarket",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1191,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2017:2:11"
                  },
                  "returnParameters": {
                    "id": 1194,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2039:0:11"
                  },
                  "scope": 1197,
                  "src": "1995:70:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1198,
              "src": "324:1743:11"
            }
          ],
          "src": "33:2035:11"
        },
        "legacyAST": {
          "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/market/Market.sol",
          "exportedSymbols": {
            "Address": [
              2205
            ],
            "ConditionalEscrow": [
              2263
            ],
            "Context": [
              2228
            ],
            "Controllable": [
              176
            ],
            "Escrow": [
              2363
            ],
            "Evaluation": [
              760
            ],
            "IUserSummary": [
              1707
            ],
            "Market": [
              1197
            ],
            "MarketLib": [
              769
            ],
            "MultiPartyOwneable": [
              363
            ],
            "Ownable": [
              1817
            ],
            "Pausable": [
              1909
            ],
            "RefundEscrow": [
              2542
            ],
            "SafeMath": [
              2854
            ],
            "StringUtils": [
              1010
            ],
            "User": [
              1030
            ],
            "UserSummary": [
              1567
            ],
            "WorkExchange": [
              556
            ],
            "WorkRelationship": [
              742
            ]
          },
          "id": 1198,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1032,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:11"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1033,
              "nodeType": "ImportDirective",
              "scope": 1198,
              "sourceUnit": 1818,
              "src": "58:52:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
              "file": "@openzeppelin/contracts/security/Pausable.sol",
              "id": 1034,
              "nodeType": "ImportDirective",
              "scope": 1198,
              "sourceUnit": 1910,
              "src": "111:55:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/Evaluation.sol",
              "file": "../libraries/Evaluation.sol",
              "id": 1035,
              "nodeType": "ImportDirective",
              "scope": 1198,
              "sourceUnit": 761,
              "src": "167:37:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkRelationship.sol",
              "file": "../exchange/WorkRelationship.sol",
              "id": 1036,
              "nodeType": "ImportDirective",
              "scope": 1198,
              "sourceUnit": 743,
              "src": "205:42:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/MarketLib.sol",
              "file": "../libraries/MarketLib.sol",
              "id": 1037,
              "nodeType": "ImportDirective",
              "scope": 1198,
              "sourceUnit": 770,
              "src": "248:36:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/control/Controllable.sol",
              "file": "../control/Controllable.sol",
              "id": 1038,
              "nodeType": "ImportDirective",
              "scope": 1198,
              "sourceUnit": 177,
              "src": "285:37:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1039,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1817,
                    "src": "343:7:11"
                  },
                  "id": 1040,
                  "nodeType": "InheritanceSpecifier",
                  "src": "343:7:11"
                },
                {
                  "baseName": {
                    "id": 1041,
                    "name": "Controllable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 176,
                    "src": "352:12:11"
                  },
                  "id": 1042,
                  "nodeType": "InheritanceSpecifier",
                  "src": "352:12:11"
                },
                {
                  "baseName": {
                    "id": 1043,
                    "name": "Pausable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1909,
                    "src": "366:8:11"
                  },
                  "id": 1044,
                  "nodeType": "InheritanceSpecifier",
                  "src": "366:8:11"
                }
              ],
              "contractDependencies": [
                176,
                1817,
                1909,
                2228
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1197,
              "linearizedBaseContracts": [
                1197,
                1909,
                176,
                1817,
                2228
              ],
              "name": "Market",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 1052,
                  "name": "MarketObservingRelationship",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1051,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1046,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "marketAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1052,
                        "src": "411:29:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1045,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "411:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1048,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "marketName",
                        "nodeType": "VariableDeclaration",
                        "scope": 1052,
                        "src": "442:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1047,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "442:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1050,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "workRelationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 1052,
                        "src": "469:32:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1049,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "469:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "410:92:11"
                  },
                  "src": "377:126:11"
                },
                {
                  "anonymous": false,
                  "id": 1060,
                  "name": "MarketUnObservingRelationship",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1059,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1054,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "marketAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "540:29:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1053,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1056,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "marketName",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "571:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1055,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "571:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1058,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "workRelationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "598:32:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1057,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "598:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:92:11"
                  },
                  "src": "504:128:11"
                },
                {
                  "anonymous": false,
                  "id": 1066,
                  "name": "MarketPaused",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1065,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1062,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "marketAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "652:29:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1061,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "652:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1064,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "marketName",
                        "nodeType": "VariableDeclaration",
                        "scope": 1066,
                        "src": "683:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1063,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "651:58:11"
                  },
                  "src": "633:77:11"
                },
                {
                  "anonymous": false,
                  "id": 1072,
                  "name": "MarketResumed",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1071,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1068,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "marketAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "731:29:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "731:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1070,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "marketName",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "762:25:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1069,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "762:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "730:58:11"
                  },
                  "src": "711:78:11"
                },
                {
                  "constant": false,
                  "functionSelector": "6039c8d7",
                  "id": 1074,
                  "mutability": "mutable",
                  "name": "_marketName",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "791:25:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7cf63de9",
                  "id": 1077,
                  "mutability": "mutable",
                  "name": "_marketType",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "818:39:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_MarketType_$765",
                    "typeString": "enum MarketLib.MarketType"
                  },
                  "typeName": {
                    "id": 1076,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1075,
                      "name": "MarketLib.MarketType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 765,
                      "src": "818:20:11"
                    },
                    "referencedDeclaration": 765,
                    "src": "818:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MarketType_$765",
                      "typeString": "enum MarketLib.MarketType"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0f091637",
                  "id": 1079,
                  "mutability": "mutable",
                  "name": "_requiredReputation",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "859:34:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c143521f",
                  "id": 1081,
                  "mutability": "mutable",
                  "name": "_requiredIndustryWeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "895:38:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1080,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "895:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "838069f7",
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "_marketStatus",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "935:43:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_MarketStatus_$768",
                    "typeString": "enum MarketLib.MarketStatus"
                  },
                  "typeName": {
                    "id": 1083,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1082,
                      "name": "MarketLib.MarketStatus",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 768,
                      "src": "935:22:11"
                    },
                    "referencedDeclaration": 768,
                    "src": "935:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_MarketStatus_$768",
                      "typeString": "enum MarketLib.MarketStatus"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1087,
                  "mutability": "mutable",
                  "name": "_workRelationships",
                  "nodeType": "VariableDeclaration",
                  "scope": 1197,
                  "src": "981:36:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1085,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "981:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1086,
                    "nodeType": "ArrayTypeName",
                    "src": "981:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1103,
                    "nodeType": "Block",
                    "src": "1091:167:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1095,
                            "name": "_marketName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1074,
                            "src": "1097:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1096,
                            "name": "marketName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1089,
                            "src": "1111:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1097:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1098,
                        "nodeType": "ExpressionStatement",
                        "src": "1097:24:11"
                      },
                      {
                        "expression": {
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1099,
                            "name": "_marketType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1077,
                            "src": "1127:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MarketType_$765",
                              "typeString": "enum MarketLib.MarketType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1100,
                            "name": "marketType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1092,
                            "src": "1141:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_MarketType_$765",
                              "typeString": "enum MarketLib.MarketType"
                            }
                          },
                          "src": "1127:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketType_$765",
                            "typeString": "enum MarketLib.MarketType"
                          }
                        },
                        "id": 1102,
                        "nodeType": "ExpressionStatement",
                        "src": "1127:24:11"
                      }
                    ]
                  },
                  "id": 1104,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1093,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1089,
                        "mutability": "mutable",
                        "name": "marketName",
                        "nodeType": "VariableDeclaration",
                        "scope": 1104,
                        "src": "1032:24:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1088,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1032:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1092,
                        "mutability": "mutable",
                        "name": "marketType",
                        "nodeType": "VariableDeclaration",
                        "scope": 1104,
                        "src": "1058:31:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MarketType_$765",
                          "typeString": "enum MarketLib.MarketType"
                        },
                        "typeName": {
                          "id": 1091,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1090,
                            "name": "MarketLib.MarketType",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 765,
                            "src": "1058:20:11"
                          },
                          "referencedDeclaration": 765,
                          "src": "1058:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketType_$765",
                            "typeString": "enum MarketLib.MarketType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1031:59:11"
                  },
                  "returnParameters": {
                    "id": 1094,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1091:0:11"
                  },
                  "scope": 1197,
                  "src": "1020:238:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1133,
                    "nodeType": "Block",
                    "src": "1319:176:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1110,
                                "name": "newRelationship",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1106,
                                "src": "1333:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1113,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1360:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1112,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1352:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1111,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1352:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1352:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1333:29:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1109,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1325:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1325:38:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1117,
                        "nodeType": "ExpressionStatement",
                        "src": "1325:38:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1121,
                              "name": "newRelationship",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1106,
                              "src": "1393:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1118,
                              "name": "_workRelationships",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1087,
                              "src": "1369:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1369:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1369:40:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1123,
                        "nodeType": "ExpressionStatement",
                        "src": "1369:40:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1127,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1456:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Market_$1197",
                                    "typeString": "contract Market"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Market_$1197",
                                    "typeString": "contract Market"
                                  }
                                ],
                                "id": 1126,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1448:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1125,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1448:7:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1448:13:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1129,
                              "name": "_marketName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1074,
                              "src": "1463:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "id": 1130,
                              "name": "newRelationship",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1106,
                              "src": "1476:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1124,
                            "name": "MarketObservingRelationship",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "1420:27:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (address,string memory,address)"
                            }
                          },
                          "id": 1131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1420:72:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1132,
                        "nodeType": "EmitStatement",
                        "src": "1415:77:11"
                      }
                    ]
                  },
                  "functionSelector": "79bda937",
                  "id": 1134,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addRelationship",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1107,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1106,
                        "mutability": "mutable",
                        "name": "newRelationship",
                        "nodeType": "VariableDeclaration",
                        "scope": 1134,
                        "src": "1285:23:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1105,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1285:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1284:25:11"
                  },
                  "returnParameters": {
                    "id": 1108,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1319:0:11"
                  },
                  "scope": 1197,
                  "src": "1260:235:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1152,
                    "nodeType": "Block",
                    "src": "1638:17:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1149,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1892,
                            "src": "1644:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1644:8:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1151,
                        "nodeType": "ExpressionStatement",
                        "src": "1644:8:11"
                      }
                    ]
                  },
                  "functionSelector": "a03738dc",
                  "id": 1153,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1137,
                      "modifierName": {
                        "id": 1136,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1766,
                        "src": "1529:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1529:9:11"
                    },
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1139,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1560:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1560:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1141,
                      "modifierName": {
                        "id": 1138,
                        "name": "onlyGlobalController",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 115,
                        "src": "1539:20:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1539:32:11"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1143,
                          "name": "_marketType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1077,
                          "src": "1591:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketType_$765",
                            "typeString": "enum MarketLib.MarketType"
                          }
                        }
                      ],
                      "id": 1144,
                      "modifierName": {
                        "id": 1142,
                        "name": "onlyDefaultMarkets",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 130,
                        "src": "1572:18:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1572:31:11"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1146,
                          "name": "_marketStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "1623:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketStatus_$768",
                            "typeString": "enum MarketLib.MarketStatus"
                          }
                        }
                      ],
                      "id": 1147,
                      "modifierName": {
                        "id": 1145,
                        "name": "onlyNotPausedState",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 160,
                        "src": "1604:18:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1604:33:11"
                    }
                  ],
                  "name": "pauseMarket",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1135,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1517:2:11"
                  },
                  "returnParameters": {
                    "id": 1148,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:11"
                  },
                  "scope": 1197,
                  "src": "1497:158:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1171,
                    "nodeType": "Block",
                    "src": "1796:19:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1168,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1908,
                            "src": "1802:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1802:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1170,
                        "nodeType": "ExpressionStatement",
                        "src": "1802:10:11"
                      }
                    ]
                  },
                  "functionSelector": "9319106b",
                  "id": 1172,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1156,
                      "modifierName": {
                        "id": 1155,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1766,
                        "src": "1690:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1690:9:11"
                    },
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1158,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1721:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1721:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1160,
                      "modifierName": {
                        "id": 1157,
                        "name": "onlyGlobalController",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 115,
                        "src": "1700:20:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1700:32:11"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1162,
                          "name": "_marketType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1077,
                          "src": "1752:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketType_$765",
                            "typeString": "enum MarketLib.MarketType"
                          }
                        }
                      ],
                      "id": 1163,
                      "modifierName": {
                        "id": 1161,
                        "name": "onlyDefaultMarkets",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 130,
                        "src": "1733:18:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1733:31:11"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1165,
                          "name": "_marketStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1084,
                          "src": "1781:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketStatus_$768",
                            "typeString": "enum MarketLib.MarketStatus"
                          }
                        }
                      ],
                      "id": 1166,
                      "modifierName": {
                        "id": 1164,
                        "name": "onlyPausedState",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 175,
                        "src": "1765:15:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1765:30:11"
                    }
                  ],
                  "name": "resumeMarket",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1154,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1678:2:11"
                  },
                  "returnParameters": {
                    "id": 1167,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1796:0:11"
                  },
                  "scope": 1197,
                  "src": "1657:158:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1180,
                    "nodeType": "Block",
                    "src": "1869:20:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1177,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1853,
                            "src": "1878:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1878:8:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1176,
                        "id": 1179,
                        "nodeType": "Return",
                        "src": "1871:15:11"
                      }
                    ]
                  },
                  "functionSelector": "d8165743",
                  "id": 1181,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getMarketState",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1173,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1840:2:11"
                  },
                  "returnParameters": {
                    "id": 1176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1175,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1181,
                        "src": "1863:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1174,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1863:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1862:6:11"
                  },
                  "scope": 1197,
                  "src": "1817:72:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1189,
                    "nodeType": "Block",
                    "src": "1963:30:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1187,
                          "name": "_workRelationships",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1087,
                          "src": "1972:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "functionReturnParameters": 1186,
                        "id": 1188,
                        "nodeType": "Return",
                        "src": "1965:25:11"
                      }
                    ]
                  },
                  "functionSelector": "36e114fc",
                  "id": 1190,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getWorkRelationships",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1182,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1920:2:11"
                  },
                  "returnParameters": {
                    "id": 1186,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1185,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1190,
                        "src": "1945:16:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1183,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1945:7:11",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1184,
                          "nodeType": "ArrayTypeName",
                          "src": "1945:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1944:18:11"
                  },
                  "scope": 1197,
                  "src": "1891:102:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1195,
                    "nodeType": "Block",
                    "src": "2039:26:11",
                    "statements": []
                  },
                  "id": 1196,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1193,
                      "modifierName": {
                        "id": 1192,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1766,
                        "src": "2029:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2029:9:11"
                    }
                  ],
                  "name": "destroyMarket",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1191,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2017:2:11"
                  },
                  "returnParameters": {
                    "id": 1194,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2039:0:11"
                  },
                  "scope": 1197,
                  "src": "1995:70:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1198,
              "src": "324:1743:11"
            }
          ],
          "src": "33:2035:11"
        },
        "compiler": {
          "name": "solc",
          "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
        },
        "networks": {},
        "schemaVersion": "3.4.1",
        "updatedAt": "2021-05-18T01:40:24.385Z",
        "devdoc": {
          "kind": "dev",
          "methods": {
            "owner()": {
              "details": "Returns the address of the current owner."
            },
            "paused()": {
              "details": "Returns true if the contract is paused, and false otherwise."
            },
            "renounceOwnership()": {
              "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
            },
            "transferOwnership(address)": {
              "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
            }
          },
          "version": 1
        },
        "userdoc": {
          "kind": "user",
          "methods": {},
          "version": 1
        }
      },
    "MARKET_FACTORY": {
        "contractName": "MarketFactory",
        "abi": [
          {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "contract Market",
                "name": "_market",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "index",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "_marketAddress",
                "type": "address"
              }
            ],
            "name": "MarketCreated",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "_marketAddress",
                "type": "address"
              }
            ],
            "name": "MarketDestroyed",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "string",
                "name": "marketName",
                "type": "string"
              },
              {
                "internalType": "enum MarketLib.MarketType",
                "name": "marketType",
                "type": "uint8"
              }
            ],
            "name": "createMarket",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "marketAddress",
                "type": "address"
              }
            ],
            "name": "destroyMarket",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getNumMarkets",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "constant": true
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Market\",\"name\":\"_market\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_marketAddress\",\"type\":\"address\"}],\"name\":\"MarketCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_marketAddress\",\"type\":\"address\"}],\"name\":\"MarketDestroyed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"marketName\",\"type\":\"string\"},{\"internalType\":\"enum MarketLib.MarketType\",\"name\":\"marketType\",\"type\":\"uint8\"}],\"name\":\"createMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"marketAddress\",\"type\":\"address\"}],\"name\":\"destroyMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumMarkets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createMarket(string,uint8)\":{\"notice\":\"Creates a user summary contract for each user based on their civic ID.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/elijahhampton/git/opportunity-core/src/contracts/market/MarketFactory.sol\":\"MarketFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/elijahhampton/git/opportunity-core/src/contracts/control/Controllable.sol\":{\"keccak256\":\"0x2b616e0eae728ab0b2733946afc99c001a24aff86cabee94471ffc958da33b8e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e9f8be8287296be60a9b46589b4b1fbf35fb0af50e6c4d107be19358fe4a93d\",\"dweb:/ipfs/QmVXyxkpJT6JDCZPRWzZ2yzmuBEgMvWqQCrMgV7FazdAde\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/MultiPartyOwneable.sol\":{\"keccak256\":\"0xd1d42422d6ffaeb158c712c1f1efb97880ad716880dba6b704399b48004e0a3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c61237ee05c824381dcb3b4df8c4c0eb8d9b58ad9c75e262233db0f98c94d6d6\",\"dweb:/ipfs/QmYpYUe7tWzg8yZdCV8FwMhJGJJ2iRbZwXPL4nxgD6kbqM\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkExchange.sol\":{\"keccak256\":\"0x42fa5a787763e08f658484517bcaeee46a5bcd0ac64c6da10b4e827d4bef2da0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2732ae081f2d674595c1968d517bab3f281c7b9e9d1de3b778f641903e53cf44\",\"dweb:/ipfs/QmZYgbEnhA5QBVAzqQ7o8fckGhkNFTnNx8rXmQWXc7Jscn\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/exchange/WorkRelationship.sol\":{\"keccak256\":\"0x7050dca7e6bfd46461ce14f25784ffae2f2abe3d21dcd3bfbf509f5e4e67ed07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dd162acf34eed7a85660c388f12f41453ad5ee4fd5efdc50c36a00ed9a2c13c\",\"dweb:/ipfs/QmUz4xEBzSst7KVPyu39c3MDK5JbjtA5MvoJHipeELtxVp\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/Evaluation.sol\":{\"keccak256\":\"0xf2825b061136ece59f2f45b05dac7c0d1fd03b3a7bc267440ec78bc212bd36b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebd01f95d61a48dc61d0edec2d17c4106631732059ad7ebd0f88a5b41bd4ab3e\",\"dweb:/ipfs/QmYtiK47cr8duutw5dshpgXp5ETVvUgphpEx7H4RZqhsJC\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/MarketLib.sol\":{\"keccak256\":\"0x353918e0f71cbe7e131a3fd49986393588497e042b8aa0eea26ebea905ece310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be10f8229d7e9184d1831fde2ed369de0232fa19a1f06cb662aa4942f7661918\",\"dweb:/ipfs/QmPbX7YYB3RFn38RxRXETNiuupmvG657TdfN3P2a3hb3yJ\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/StringUtils.sol\":{\"keccak256\":\"0x3fc98303be9aee1317ca29e93af1ec2f88568c1e526ff23899d464544f060ad6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://412e266b655dc10c2fa8f874abda2933ed02636c367ca09c16d5cd8a978d8c04\",\"dweb:/ipfs/QmaXjqt1PL8pYNss2VyZiX78L4HJxWGA6T7RXWvodKcyYG\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/User.sol\":{\"keccak256\":\"0xf6f53b1360419296f37489d8c13a44e39d4178ccccfa14622de3445fe7e19879\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c5b2b5863f94d493b767babd8103d215e76423a999ad0ffc7c2432a653c868b\",\"dweb:/ipfs/QmZfU9BLvZWEaeZ8DZ84c3auojacifiYrUhKRchcyTZqy7\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/market/Market.sol\":{\"keccak256\":\"0xbe82267551b12436a444a994897f575b9343c45d1bd97c4e11048d8930b598c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://729c62e777d988e3223f2c1d8064ce451a733d3340ba6c908380922b6f01eda2\",\"dweb:/ipfs/QmfEsHL5QYyGeuCUyEPiz93cSoa1N1rkykXkjULRwJojGA\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/market/MarketFactory.sol\":{\"keccak256\":\"0x0e176da2ef0e07307228754d08ced9d2d31d086954b2121c5edcc9cdaf023470\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64b8a120e6af967252a3c33c6290f3cb024e3da8e6086983510d027cdd343dcb\",\"dweb:/ipfs/QmeYmWpWsPW2EgzLQuj4X97M7PQypkchRQA9eNQDaReyaQ\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/user/UserSummary.sol\":{\"keccak256\":\"0xb3fa76490c1bec2631ad5303be5e1d1469d20124d0079625b02cec8b5fdf8cd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e6f7b8e1e127674d1500ad521be17605fff6a408f6afab7820a59d24dfba6c9\",\"dweb:/ipfs/QmTN7MiedKQrm9c1gQEAHETjbQj1rGPqGSTPZ8x2qJ2knn\"]},\"/Users/elijahhampton/git/opportunity-core/src/contracts/user/interface/IUserSummary.sol\":{\"keccak256\":\"0x1a9ccc700d2445a01522e75a8892f3479f5ec1019e1a7cc82648735602d6979d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd5568a290b9c71ff0ff74a1d02bc72f02bf9fa4a731baf615beab7717965e1e\",\"dweb:/ipfs/QmQPomdhm1baBVYmvdVqCZ8GJrauZ6c7FD31NUTnrPDnwa\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b651c0571e3ecc124b3af7a598357a19406969b21b8a3fa06eeaf5e5c9150d6c\",\"dweb:/ipfs/QmPfcAhbGVfsSd7VKet77fuST397b7XSFU2myXxLdok79v\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0x0bf0f9c9bfdea4be5d7dc3f1fccf177de0a5e7da51f96bfe5923af8ad1961a39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://475920b50f6082a8d87a140cc5528bfc98c1f3efb8e2c367f93a1e482cea24a6\",\"dweb:/ipfs/QmVEUrKPdy3vgPjjzsikKLETUBFRo6uKbrgn2zeaJt7Mcu\"]},\"@openzeppelin/contracts/utils/escrow/Escrow.sol\":{\"keccak256\":\"0xb2c66acf7d749744db1c038889794253757d471a113290e4bb1a600246166943\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60668976b064a434caef3ede6dce89744f2d18cc8ede8610706579fe4a03fba0\",\"dweb:/ipfs/QmPUnpLdjFgGrNhuMjvBz7Grn2gMrRWisAYPrn8YZVn99k\"]},\"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":{\"keccak256\":\"0xc4f3f7ac87e9debc037109ec57e4a2ca54fce83a76fbc10564a53b9ab1d63858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e451867af8f28ceed99f440f14819a8cf0fdaadb1e438272aff451ec7ce3b8f3\",\"dweb:/ipfs/QmebxoF1a7deWTjzyg82bygFzrQHFMFZnQxenShv2zB6AC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
        "bytecode": "0x608060405234801561001057600080fd5b50611e51806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000465760003560e01c8063295c39a5146200004b5780634f506195146200006d578063c2ca748b146200008d575b600080fd5b62000055620000ad565b604051620000649190620003b2565b60405180910390f35b6200008b600480360381019062000085919062000267565b620000b9565b005b620000ab6004803603810190620000a5919062000293565b620000bc565b005b60008080549050905090565b50565b60008282604051620000ce90620001b9565b620000db9291906200037e565b604051809103906000f080158015620000f8573d6000803e3d6000fd5b5090506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000805490508173ffffffffffffffffffffffffffffffffffffffff167f8263f983d31825e2fcfa4ff69822ca37ec7846c9c6a84da9b59ae29d8e43ddab30604051620001ac919062000361565b60405180910390a3505050565b61186c80620005b083390190565b6000620001de620001d88462000403565b620003cf565b905082815260208101848484011115620001f757600080fd5b62000204848285620004b9565b509392505050565b6000813590506200021d8162000584565b92915050565b60008135905062000234816200059e565b92915050565b600082601f8301126200024c57600080fd5b81356200025e848260208601620001c7565b91505092915050565b6000602082840312156200027a57600080fd5b60006200028a848285016200020c565b91505092915050565b60008060408385031215620002a757600080fd5b600083013567ffffffffffffffff811115620002c257600080fd5b620002d0858286016200023a565b9250506020620002e38582860162000223565b9150509250929050565b620002f88162000452565b82525050565b6200030981620004a5565b82525050565b60006200031c8262000436565b62000328818562000441565b93506200033a818560208601620004c8565b62000345816200055c565b840191505092915050565b6200035b816200049b565b82525050565b6000602082019050620003786000830184620002ed565b92915050565b600060408201905081810360008301526200039a81856200030f565b9050620003ab6020830184620002fe565b9392505050565b6000602082019050620003c9600083018462000350565b92915050565b6000604051905081810181811067ffffffffffffffff82111715620003f957620003f86200052d565b5b8060405250919050565b600067ffffffffffffffff8211156200042157620004206200052d565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006200045f826200047b565b9050919050565b600081905062000476826200056d565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620004b28262000466565b9050919050565b82818337600083830152505050565b60005b83811015620004e8578082015181840152602081019050620004cb565b83811115620004f8576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60028110620005815762000580620004fe565b5b50565b6200058f8162000452565b81146200059b57600080fd5b50565b60028110620005ac57600080fd5b5056fe60806040523480156200001157600080fd5b506040516200186c3803806200186c8339818101604052810190620000379190620002f6565b600062000049620001b560201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160146101000a81548160ff02191690831515021790555081600290805190602001906200015b929190620001bd565b5080600360006101000a81548160ff02191690836001811115620001a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550505062000492565b600033905090565b828054620001cb90620003ed565b90600052602060002090601f016020900481019282620001ef57600085556200023b565b82601f106200020a57805160ff19168380011785556200023b565b828001600101855582156200023b579182015b828111156200023a5782518255916020019190600101906200021d565b5b5090506200024a91906200024e565b5090565b5b80821115620002695760008160009055506001016200024f565b5090565b6000620002846200027e8462000384565b62000350565b9050828152602081018484840111156200029d57600080fd5b620002aa848285620003b7565b509392505050565b600081519050620002c38162000481565b92915050565b600082601f830112620002db57600080fd5b8151620002ed8482602086016200026d565b91505092915050565b600080604083850312156200030a57600080fd5b600083015167ffffffffffffffff8111156200032557600080fd5b6200033385828601620002c9565b92505060206200034685828601620002b2565b9150509250929050565b6000604051905081810181811067ffffffffffffffff821117156200037a576200037962000452565b5b8060405250919050565b600067ffffffffffffffff821115620003a257620003a162000452565b5b601f19601f8301169050602081019050919050565b60005b83811015620003d7578082015181840152602081019050620003ba565b83811115620003e7576000848401525b50505050565b600060028204905060018216806200040657607f821691505b602082108114156200041d576200041c62000423565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600281106200048f57600080fd5b50565b6113ca80620004a26000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063838069f71161008c578063a03738dc11610066578063a03738dc146101f1578063c143521f146101fb578063d816574314610219578063f2fde38b14610237576100ea565b8063838069f7146101ab5780638da5cb5b146101c95780639319106b146101e7576100ea565b80636039c8d7116100c85780636039c8d714610149578063715018a61461016757806379bda937146101715780637cf63de91461018d576100ea565b80630f091637146100ef57806336e114fc1461010d5780635c975abb1461012b575b600080fd5b6100f7610253565b604051610104919061115f565b60405180910390f35b610115610259565b604051610122919061104a565b60405180910390f35b6101336102e7565b604051610140919061106c565b60405180910390f35b6101516102fe565b60405161015e91906110bd565b60405180910390f35b61016f61038c565b005b61018b60048036038101906101869190610d41565b6104c6565b005b6101956105d7565b6040516101a291906110a2565b60405180910390f35b6101b36105ea565b6040516101c09190611087565b60405180910390f35b6101d16105fd565b6040516101de919061102f565b60405180910390f35b6101ef610626565b005b6101f9610824565b005b610203610a22565b604051610210919061115f565b60405180910390f35b610221610a28565b60405161022e919061106c565b60405180910390f35b610251600480360381019061024c9190610d41565b610a37565b005b60045481565b606060078054806020026020016040519081016040528092919081815260200182805480156102dd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610293575b5050505050905090565b6000600160149054906101000a900460ff16905090565b6002805461030b906112b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610337906112b4565b80156103845780601f1061035957610100808354040283529160200191610384565b820191906000526020600020905b81548152906001019060200180831161036757829003601f168201915b505050505081565b610394610be0565b73ffffffffffffffffffffffffffffffffffffffff166103b26105fd565b73ffffffffffffffffffffffffffffffffffffffff1614610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff9061113f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561050057600080fd5b6007819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660026040516105899190611018565b60405180910390203073ffffffffffffffffffffffffffffffffffffffff167f468383fd00b84717a9b26fdb0dc1c91ee119987255bf19a7b96016f9f3f1ee3660405160405180910390a450565b600360009054906101000a900460ff1681565b600660009054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61062e610be0565b73ffffffffffffffffffffffffffffffffffffffff1661064c6105fd565b73ffffffffffffffffffffffffffffffffffffffff16146106a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106999061113f565b60405180910390fd5b33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106fd57600080fd5b600360009054906101000a900460ff1660006001811115610747577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816001811115610780577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461078a57600080fd5b600660009054906101000a900460ff16600060018111156107d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600181111561080d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461081757600080fd5b61081f610be8565b505050565b61082c610be0565b73ffffffffffffffffffffffffffffffffffffffff1661084a6105fd565b73ffffffffffffffffffffffffffffffffffffffff16146108a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108979061113f565b60405180910390fd5b33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108fb57600080fd5b600360009054906101000a900460ff1660006001811115610945577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600181111561097e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461098857600080fd5b600660009054906101000a900460ff166001808111156109d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816001811115610a0a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610a1557600080fd5b610a1d610c8a565b505050565b60055481565b6000610a326102e7565b905090565b610a3f610be0565b73ffffffffffffffffffffffffffffffffffffffff16610a5d6105fd565b73ffffffffffffffffffffffffffffffffffffffff1614610ab3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aaa9061113f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1a906110ff565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b610bf06102e7565b610c2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c26906110df565b60405180910390fd5b6000600160146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610c73610be0565b604051610c80919061102f565b60405180910390a1565b610c926102e7565b15610cd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc99061111f565b60405180910390fd5b60018060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d15610be0565b604051610d22919061102f565b60405180910390a1565b600081359050610d3b8161137d565b92915050565b600060208284031215610d5357600080fd5b6000610d6184828501610d2c565b91505092915050565b6000610d768383610d82565b60208301905092915050565b610d8b816111ef565b82525050565b610d9a816111ef565b82525050565b6000610dab8261119f565b610db581856111c2565b9350610dc08361117a565b8060005b83811015610df1578151610dd88882610d6a565b9750610de3836111b5565b925050600181019050610dc4565b5085935050505092915050565b610e0781611201565b82525050565b610e168161125d565b82525050565b610e258161126f565b82525050565b6000610e36826111aa565b610e4081856111d3565b9350610e50818560208601611281565b610e5981611344565b840191505092915050565b60008154610e71816112b4565b610e7b81866111e4565b94506001821660008114610e965760018114610ea757610eda565b60ff19831686528186019350610eda565b610eb08561118a565b60005b83811015610ed257815481890152600182019150602081019050610eb3565b838801955050505b50505092915050565b6000610ef06014836111d3565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b6000610f306026836111d3565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f966010836111d3565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b6000610fd66020836111d3565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b61101281611253565b82525050565b60006110248284610e64565b915081905092915050565b60006020820190506110446000830184610d91565b92915050565b600060208201905081810360008301526110648184610da0565b905092915050565b60006020820190506110816000830184610dfe565b92915050565b600060208201905061109c6000830184610e0d565b92915050565b60006020820190506110b76000830184610e1c565b92915050565b600060208201905081810360008301526110d78184610e2b565b905092915050565b600060208201905081810360008301526110f881610ee3565b9050919050565b6000602082019050818103600083015261111881610f23565b9050919050565b6000602082019050818103600083015261113881610f89565b9050919050565b6000602082019050818103600083015261115881610fc9565b9050919050565b60006020820190506111746000830184611009565b92915050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006111fa82611233565b9050919050565b60008115159050919050565b600081905061121b82611355565b919050565b600081905061122e82611369565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006112688261120d565b9050919050565b600061127a82611220565b9050919050565b60005b8381101561129f578082015181840152602081019050611284565b838111156112ae576000848401525b50505050565b600060028204905060018216806112cc57607f821691505b602082108114156112e0576112df611315565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b60028110611366576113656112e6565b5b50565b6002811061137a576113796112e6565b5b50565b611386816111ef565b811461139157600080fd5b5056fea2646970667358221220cd37fb36674d30ccc73c3312ee55cc4ab72fdfe8d54806576d597c7dab6df0d964736f6c63430008000033a2646970667358221220f7854b47279e67ce8aacd8c13c8a0cdfd60f338e326fcbd6c914bc5fa0073e3564736f6c63430008000033",
        "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000465760003560e01c8063295c39a5146200004b5780634f506195146200006d578063c2ca748b146200008d575b600080fd5b62000055620000ad565b604051620000649190620003b2565b60405180910390f35b6200008b600480360381019062000085919062000267565b620000b9565b005b620000ab6004803603810190620000a5919062000293565b620000bc565b005b60008080549050905090565b50565b60008282604051620000ce90620001b9565b620000db9291906200037e565b604051809103906000f080158015620000f8573d6000803e3d6000fd5b5090506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000805490508173ffffffffffffffffffffffffffffffffffffffff167f8263f983d31825e2fcfa4ff69822ca37ec7846c9c6a84da9b59ae29d8e43ddab30604051620001ac919062000361565b60405180910390a3505050565b61186c80620005b083390190565b6000620001de620001d88462000403565b620003cf565b905082815260208101848484011115620001f757600080fd5b62000204848285620004b9565b509392505050565b6000813590506200021d8162000584565b92915050565b60008135905062000234816200059e565b92915050565b600082601f8301126200024c57600080fd5b81356200025e848260208601620001c7565b91505092915050565b6000602082840312156200027a57600080fd5b60006200028a848285016200020c565b91505092915050565b60008060408385031215620002a757600080fd5b600083013567ffffffffffffffff811115620002c257600080fd5b620002d0858286016200023a565b9250506020620002e38582860162000223565b9150509250929050565b620002f88162000452565b82525050565b6200030981620004a5565b82525050565b60006200031c8262000436565b62000328818562000441565b93506200033a818560208601620004c8565b62000345816200055c565b840191505092915050565b6200035b816200049b565b82525050565b6000602082019050620003786000830184620002ed565b92915050565b600060408201905081810360008301526200039a81856200030f565b9050620003ab6020830184620002fe565b9392505050565b6000602082019050620003c9600083018462000350565b92915050565b6000604051905081810181811067ffffffffffffffff82111715620003f957620003f86200052d565b5b8060405250919050565b600067ffffffffffffffff8211156200042157620004206200052d565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006200045f826200047b565b9050919050565b600081905062000476826200056d565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620004b28262000466565b9050919050565b82818337600083830152505050565b60005b83811015620004e8578082015181840152602081019050620004cb565b83811115620004f8576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60028110620005815762000580620004fe565b5b50565b6200058f8162000452565b81146200059b57600080fd5b50565b60028110620005ac57600080fd5b5056fe60806040523480156200001157600080fd5b506040516200186c3803806200186c8339818101604052810190620000379190620002f6565b600062000049620001b560201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160146101000a81548160ff02191690831515021790555081600290805190602001906200015b929190620001bd565b5080600360006101000a81548160ff02191690836001811115620001a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550505062000492565b600033905090565b828054620001cb90620003ed565b90600052602060002090601f016020900481019282620001ef57600085556200023b565b82601f106200020a57805160ff19168380011785556200023b565b828001600101855582156200023b579182015b828111156200023a5782518255916020019190600101906200021d565b5b5090506200024a91906200024e565b5090565b5b80821115620002695760008160009055506001016200024f565b5090565b6000620002846200027e8462000384565b62000350565b9050828152602081018484840111156200029d57600080fd5b620002aa848285620003b7565b509392505050565b600081519050620002c38162000481565b92915050565b600082601f830112620002db57600080fd5b8151620002ed8482602086016200026d565b91505092915050565b600080604083850312156200030a57600080fd5b600083015167ffffffffffffffff8111156200032557600080fd5b6200033385828601620002c9565b92505060206200034685828601620002b2565b9150509250929050565b6000604051905081810181811067ffffffffffffffff821117156200037a576200037962000452565b5b8060405250919050565b600067ffffffffffffffff821115620003a257620003a162000452565b5b601f19601f8301169050602081019050919050565b60005b83811015620003d7578082015181840152602081019050620003ba565b83811115620003e7576000848401525b50505050565b600060028204905060018216806200040657607f821691505b602082108114156200041d576200041c62000423565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600281106200048f57600080fd5b50565b6113ca80620004a26000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063838069f71161008c578063a03738dc11610066578063a03738dc146101f1578063c143521f146101fb578063d816574314610219578063f2fde38b14610237576100ea565b8063838069f7146101ab5780638da5cb5b146101c95780639319106b146101e7576100ea565b80636039c8d7116100c85780636039c8d714610149578063715018a61461016757806379bda937146101715780637cf63de91461018d576100ea565b80630f091637146100ef57806336e114fc1461010d5780635c975abb1461012b575b600080fd5b6100f7610253565b604051610104919061115f565b60405180910390f35b610115610259565b604051610122919061104a565b60405180910390f35b6101336102e7565b604051610140919061106c565b60405180910390f35b6101516102fe565b60405161015e91906110bd565b60405180910390f35b61016f61038c565b005b61018b60048036038101906101869190610d41565b6104c6565b005b6101956105d7565b6040516101a291906110a2565b60405180910390f35b6101b36105ea565b6040516101c09190611087565b60405180910390f35b6101d16105fd565b6040516101de919061102f565b60405180910390f35b6101ef610626565b005b6101f9610824565b005b610203610a22565b604051610210919061115f565b60405180910390f35b610221610a28565b60405161022e919061106c565b60405180910390f35b610251600480360381019061024c9190610d41565b610a37565b005b60045481565b606060078054806020026020016040519081016040528092919081815260200182805480156102dd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610293575b5050505050905090565b6000600160149054906101000a900460ff16905090565b6002805461030b906112b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610337906112b4565b80156103845780601f1061035957610100808354040283529160200191610384565b820191906000526020600020905b81548152906001019060200180831161036757829003601f168201915b505050505081565b610394610be0565b73ffffffffffffffffffffffffffffffffffffffff166103b26105fd565b73ffffffffffffffffffffffffffffffffffffffff1614610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff9061113f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561050057600080fd5b6007819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660026040516105899190611018565b60405180910390203073ffffffffffffffffffffffffffffffffffffffff167f468383fd00b84717a9b26fdb0dc1c91ee119987255bf19a7b96016f9f3f1ee3660405160405180910390a450565b600360009054906101000a900460ff1681565b600660009054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61062e610be0565b73ffffffffffffffffffffffffffffffffffffffff1661064c6105fd565b73ffffffffffffffffffffffffffffffffffffffff16146106a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106999061113f565b60405180910390fd5b33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106fd57600080fd5b600360009054906101000a900460ff1660006001811115610747577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816001811115610780577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461078a57600080fd5b600660009054906101000a900460ff16600060018111156107d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600181111561080d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461081757600080fd5b61081f610be8565b505050565b61082c610be0565b73ffffffffffffffffffffffffffffffffffffffff1661084a6105fd565b73ffffffffffffffffffffffffffffffffffffffff16146108a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108979061113f565b60405180910390fd5b33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146108fb57600080fd5b600360009054906101000a900460ff1660006001811115610945577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600181111561097e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461098857600080fd5b600660009054906101000a900460ff166001808111156109d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816001811115610a0a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415610a1557600080fd5b610a1d610c8a565b505050565b60055481565b6000610a326102e7565b905090565b610a3f610be0565b73ffffffffffffffffffffffffffffffffffffffff16610a5d6105fd565b73ffffffffffffffffffffffffffffffffffffffff1614610ab3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aaa9061113f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1a906110ff565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b610bf06102e7565b610c2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c26906110df565b60405180910390fd5b6000600160146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610c73610be0565b604051610c80919061102f565b60405180910390a1565b610c926102e7565b15610cd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc99061111f565b60405180910390fd5b60018060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d15610be0565b604051610d22919061102f565b60405180910390a1565b600081359050610d3b8161137d565b92915050565b600060208284031215610d5357600080fd5b6000610d6184828501610d2c565b91505092915050565b6000610d768383610d82565b60208301905092915050565b610d8b816111ef565b82525050565b610d9a816111ef565b82525050565b6000610dab8261119f565b610db581856111c2565b9350610dc08361117a565b8060005b83811015610df1578151610dd88882610d6a565b9750610de3836111b5565b925050600181019050610dc4565b5085935050505092915050565b610e0781611201565b82525050565b610e168161125d565b82525050565b610e258161126f565b82525050565b6000610e36826111aa565b610e4081856111d3565b9350610e50818560208601611281565b610e5981611344565b840191505092915050565b60008154610e71816112b4565b610e7b81866111e4565b94506001821660008114610e965760018114610ea757610eda565b60ff19831686528186019350610eda565b610eb08561118a565b60005b83811015610ed257815481890152600182019150602081019050610eb3565b838801955050505b50505092915050565b6000610ef06014836111d3565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b6000610f306026836111d3565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f966010836111d3565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b6000610fd66020836111d3565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b61101281611253565b82525050565b60006110248284610e64565b915081905092915050565b60006020820190506110446000830184610d91565b92915050565b600060208201905081810360008301526110648184610da0565b905092915050565b60006020820190506110816000830184610dfe565b92915050565b600060208201905061109c6000830184610e0d565b92915050565b60006020820190506110b76000830184610e1c565b92915050565b600060208201905081810360008301526110d78184610e2b565b905092915050565b600060208201905081810360008301526110f881610ee3565b9050919050565b6000602082019050818103600083015261111881610f23565b9050919050565b6000602082019050818103600083015261113881610f89565b9050919050565b6000602082019050818103600083015261115881610fc9565b9050919050565b60006020820190506111746000830184611009565b92915050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006111fa82611233565b9050919050565b60008115159050919050565b600081905061121b82611355565b919050565b600081905061122e82611369565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006112688261120d565b9050919050565b600061127a82611220565b9050919050565b60005b8381101561129f578082015181840152602081019050611284565b838111156112ae576000848401525b50505050565b600060028204905060018216806112cc57607f821691505b602082108114156112e0576112df611315565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b60028110611366576113656112e6565b5b50565b6002811061137a576113796112e6565b5b50565b611386816111ef565b811461139157600080fd5b5056fea2646970667358221220cd37fb36674d30ccc73c3312ee55cc4ab72fdfe8d54806576d597c7dab6df0d964736f6c63430008000033a2646970667358221220f7854b47279e67ce8aacd8c13c8a0cdfd60f338e326fcbd6c914bc5fa0073e3564736f6c63430008000033",
        "immutableReferences": {},
        "generatedSources": [],
        "deployedGeneratedSources": [
          {
            "ast": {
              "nodeType": "YulBlock",
              "src": "0:6314:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "91:260:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "101:74:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "167:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "array_allocation_size_t_string_memory_ptr",
                                "nodeType": "YulIdentifier",
                                "src": "125:41:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "125:49:25"
                            }
                          ],
                          "functionName": {
                            "name": "allocateMemory",
                            "nodeType": "YulIdentifier",
                            "src": "110:14:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "110:65:25"
                        },
                        "variableNames": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "101:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "191:5:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "198:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "184:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "184:21:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "184:21:25"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "214:27:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "229:5:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "236:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "225:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "225:16:25"
                        },
                        "variables": [
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "218:3:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "279:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "288:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "291:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "281:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "281:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "281:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "260:3:25"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "265:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "256:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "256:16:25"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "274:3:25"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "253:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "253:25:25"
                        },
                        "nodeType": "YulIf",
                        "src": "250:2:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "328:3:25"
                            },
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "333:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "338:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "copy_calldata_to_memory",
                            "nodeType": "YulIdentifier",
                            "src": "304:23:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "304:41:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "304:41:25"
                      }
                    ]
                  },
                  "name": "abi_decode_available_length_t_string_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "64:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "69:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "77:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "array",
                      "nodeType": "YulTypedName",
                      "src": "85:5:25",
                      "type": ""
                    }
                  ],
                  "src": "7:344:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "409:87:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "419:29:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "441:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "428:12:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "428:20:25"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "419:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "484:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "457:26:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "457:33:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "457:33:25"
                      }
                    ]
                  },
                  "name": "abi_decode_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "387:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "395:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "403:5:25",
                      "type": ""
                    }
                  ],
                  "src": "357:139:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "568:101:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "578:29:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "600:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "587:12:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "587:20:25"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "578:5:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "657:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_t_enum$_MarketType_$765",
                            "nodeType": "YulIdentifier",
                            "src": "616:40:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "616:47:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "616:47:25"
                      }
                    ]
                  },
                  "name": "abi_decode_t_enum$_MarketType_$765",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "546:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "554:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "562:5:25",
                      "type": ""
                    }
                  ],
                  "src": "502:167:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "751:211:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "800:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "809:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "812:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "802:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "802:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "802:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "779:6:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "787:4:25",
                                      "type": "",
                                      "value": "0x1f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "775:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "775:17:25"
                                },
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "794:3:25"
                                }
                              ],
                              "functionName": {
                                "name": "slt",
                                "nodeType": "YulIdentifier",
                                "src": "771:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "771:27:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "764:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "764:35:25"
                        },
                        "nodeType": "YulIf",
                        "src": "761:2:25"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "825:34:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "852:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "839:12:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "839:20:25"
                        },
                        "variables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "829:6:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "868:88:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "929:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "937:4:25",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "925:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "925:17:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "944:6:25"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "952:3:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_decode_available_length_t_string_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "877:47:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "877:79:25"
                        },
                        "variableNames": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "868:5:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_t_string_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "729:6:25",
                      "type": ""
                    },
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "737:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "array",
                      "nodeType": "YulTypedName",
                      "src": "745:5:25",
                      "type": ""
                    }
                  ],
                  "src": "689:273:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1034:196:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1080:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1089:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1092:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1082:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1082:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1082:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1055:7:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1064:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "1051:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1051:23:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1076:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "1047:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1047:32:25"
                        },
                        "nodeType": "YulIf",
                        "src": "1044:2:25"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "1106:117:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1121:15:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1135:1:25",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "1125:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1150:63:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1185:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "1196:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1181:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1181:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1205:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "1160:20:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1160:53:25"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1150:6:25"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "1004:9:25",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "1015:7:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "1027:6:25",
                      "type": ""
                    }
                  ],
                  "src": "968:262:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1343:441:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1389:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1398:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1401:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1391:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1391:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1391:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1364:7:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1373:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "1360:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1360:23:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1385:2:25",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "slt",
                            "nodeType": "YulIdentifier",
                            "src": "1356:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1356:32:25"
                        },
                        "nodeType": "YulIf",
                        "src": "1353:2:25"
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "1415:220:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1430:45:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1461:9:25"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1472:1:25",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1457:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1457:17:25"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1444:12:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1444:31:25"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "1434:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1522:16:25",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1531:1:25",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1534:1:25",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "1524:6:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1524:12:25"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1524:12:25"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "1494:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1502:18:25",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "1491:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1491:30:25"
                            },
                            "nodeType": "YulIf",
                            "src": "1488:2:25"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1552:73:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1597:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "1608:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1593:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1593:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1617:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_string_memory_ptr",
                                "nodeType": "YulIdentifier",
                                "src": "1562:30:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1562:63:25"
                            },
                            "variableNames": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1552:6:25"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "nodeType": "YulBlock",
                        "src": "1645:132:25",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1660:16:25",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1674:2:25",
                              "type": "",
                              "value": "32"
                            },
                            "variables": [
                              {
                                "name": "offset",
                                "nodeType": "YulTypedName",
                                "src": "1664:6:25",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1690:77:25",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1739:9:25"
                                    },
                                    {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "1750:6:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1735:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1735:22:25"
                                },
                                {
                                  "name": "dataEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "1759:7:25"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_enum$_MarketType_$765",
                                "nodeType": "YulIdentifier",
                                "src": "1700:34:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1700:67:25"
                            },
                            "variableNames": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "1690:6:25"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_decode_tuple_t_string_memory_ptrt_enum$_MarketType_$765",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "1305:9:25",
                      "type": ""
                    },
                    {
                      "name": "dataEnd",
                      "nodeType": "YulTypedName",
                      "src": "1316:7:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "1328:6:25",
                      "type": ""
                    },
                    {
                      "name": "value1",
                      "nodeType": "YulTypedName",
                      "src": "1336:6:25",
                      "type": ""
                    }
                  ],
                  "src": "1236:548:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1855:53:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "1872:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1895:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "1877:17:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1877:24:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1865:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1865:37:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1865:37:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_address_to_t_address_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1843:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "1850:3:25",
                      "type": ""
                    }
                  ],
                  "src": "1790:118:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1991:78:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2008:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2056:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "convert_t_enum$_MarketType_$765_to_t_uint8",
                                "nodeType": "YulIdentifier",
                                "src": "2013:42:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2013:49:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2001:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2001:62:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2001:62:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_enum$_MarketType_$765_to_t_uint8_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1979:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "1986:3:25",
                      "type": ""
                    }
                  ],
                  "src": "1914:155:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2167:272:25",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2177:53:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2224:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "array_length_t_string_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "2191:32:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2191:39:25"
                        },
                        "variables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2181:6:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2239:78:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2305:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2310:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "2246:58:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2246:71:25"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2239:3:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2352:5:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2359:4:25",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2348:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2348:16:25"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2366:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2371:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "copy_memory_to_memory",
                            "nodeType": "YulIdentifier",
                            "src": "2326:21:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2326:52:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2326:52:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2387:46:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2398:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2425:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "round_up_to_mul_of_32",
                                "nodeType": "YulIdentifier",
                                "src": "2403:21:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2403:29:25"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2394:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2394:39:25"
                        },
                        "variableNames": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2387:3:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2148:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "2155:3:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "end",
                      "nodeType": "YulTypedName",
                      "src": "2163:3:25",
                      "type": ""
                    }
                  ],
                  "src": "2075:364:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2510:53:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2527:3:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2550:5:25"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "2532:17:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2532:24:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2520:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2520:37:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2520:37:25"
                      }
                    ]
                  },
                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2498:5:25",
                      "type": ""
                    },
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "2505:3:25",
                      "type": ""
                    }
                  ],
                  "src": "2445:118:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2667:124:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2677:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2689:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2700:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2685:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2685:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2677:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2757:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "2770:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2781:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2766:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2766:17:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_address_to_t_address_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "2713:43:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2713:71:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2713:71:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "2639:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "2651:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "2662:4:25",
                      "type": ""
                    }
                  ],
                  "src": "2569:222:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2955:289:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2965:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2977:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2988:2:25",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2973:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2973:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2965:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3012:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3023:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3008:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3008:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3031:4:25"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3037:9:25"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "3027:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3027:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3001:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3001:47:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3001:47:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3057:86:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3129:6:25"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "3138:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "3065:63:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3065:78:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3057:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "3209:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3222:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3233:2:25",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3218:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3218:18:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_enum$_MarketType_$765_to_t_uint8_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "3153:55:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3153:84:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3153:84:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_string_memory_ptr_t_enum$_MarketType_$765__to_t_string_memory_ptr_t_uint8__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "2919:9:25",
                      "type": ""
                    },
                    {
                      "name": "value1",
                      "nodeType": "YulTypedName",
                      "src": "2931:6:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "2939:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "2950:4:25",
                      "type": ""
                    }
                  ],
                  "src": "2797:447:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3348:124:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3358:26:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3370:9:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3381:2:25",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3366:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3366:18:25"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3358:4:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3438:6:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "3451:9:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3462:1:25",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3447:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3447:17:25"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                            "nodeType": "YulIdentifier",
                            "src": "3394:43:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3394:71:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3394:71:25"
                      }
                    ]
                  },
                  "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "3320:9:25",
                      "type": ""
                    },
                    {
                      "name": "value0",
                      "nodeType": "YulTypedName",
                      "src": "3332:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "3343:4:25",
                      "type": ""
                    }
                  ],
                  "src": "3250:222:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3518:243:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3528:19:25",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3544:2:25",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3538:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3538:9:25"
                        },
                        "variableNames": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3528:6:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3556:35:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3578:6:25"
                            },
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "3586:4:25"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3574:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3574:17:25"
                        },
                        "variables": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulTypedName",
                            "src": "3560:10:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3702:22:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x41",
                                  "nodeType": "YulIdentifier",
                                  "src": "3704:16:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3704:18:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3704:18:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3645:10:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3657:18:25",
                                  "type": "",
                                  "value": "0xffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "3642:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3642:34:25"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3681:10:25"
                                },
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3693:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "3678:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3678:22:25"
                            }
                          ],
                          "functionName": {
                            "name": "or",
                            "nodeType": "YulIdentifier",
                            "src": "3639:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3639:62:25"
                        },
                        "nodeType": "YulIf",
                        "src": "3636:2:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3740:2:25",
                              "type": "",
                              "value": "64"
                            },
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulIdentifier",
                              "src": "3744:10:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3733:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3733:22:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3733:22:25"
                      }
                    ]
                  },
                  "name": "allocateMemory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "size",
                      "nodeType": "YulTypedName",
                      "src": "3502:4:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "3511:6:25",
                      "type": ""
                    }
                  ],
                  "src": "3478:283:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3834:265:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3939:22:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x41",
                                  "nodeType": "YulIdentifier",
                                  "src": "3941:16:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3941:18:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3941:18:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "3911:6:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3919:18:25",
                              "type": "",
                              "value": "0xffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "3908:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3908:30:25"
                        },
                        "nodeType": "YulIf",
                        "src": "3905:2:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3991:41:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "4007:6:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4015:4:25",
                                  "type": "",
                                  "value": "0x1f"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4003:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4003:17:25"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4026:4:25",
                                  "type": "",
                                  "value": "0x1f"
                                }
                              ],
                              "functionName": {
                                "name": "not",
                                "nodeType": "YulIdentifier",
                                "src": "4022:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4022:9:25"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "3999:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3999:33:25"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "3991:4:25"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4069:23:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "4081:4:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4087:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4077:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4077:15:25"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "4069:4:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_allocation_size_t_string_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3818:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "size",
                      "nodeType": "YulTypedName",
                      "src": "3829:4:25",
                      "type": ""
                    }
                  ],
                  "src": "3767:332:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4164:40:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4175:22:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "4191:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4185:5:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4185:12:25"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4175:6:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_length_t_string_memory_ptr",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4147:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4157:6:25",
                      "type": ""
                    }
                  ],
                  "src": "4105:99:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4306:73:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4323:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "4328:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4316:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4316:19:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4316:19:25"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4344:29:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4363:3:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4368:4:25",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4359:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4359:14:25"
                        },
                        "variableNames": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulIdentifier",
                            "src": "4344:11:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4278:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4283:6:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulTypedName",
                      "src": "4294:11:25",
                      "type": ""
                    }
                  ],
                  "src": "4210:169:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4430:51:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4440:35:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "4469:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_uint160",
                            "nodeType": "YulIdentifier",
                            "src": "4451:17:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4451:24:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "4440:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4412:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "4422:7:25",
                      "type": ""
                    }
                  ],
                  "src": "4385:96:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4546:80:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4556:16:25",
                        "value": {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "4567:5:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "4556:7:25"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "4614:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "validator_assert_t_enum$_MarketType_$765",
                            "nodeType": "YulIdentifier",
                            "src": "4573:40:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4573:47:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4573:47:25"
                      }
                    ]
                  },
                  "name": "cleanup_t_enum$_MarketType_$765",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4528:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "4538:7:25",
                      "type": ""
                    }
                  ],
                  "src": "4487:139:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4677:81:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4687:65:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "4702:5:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4709:42:25",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "4698:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4698:54:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "4687:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_uint160",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4659:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "4669:7:25",
                      "type": ""
                    }
                  ],
                  "src": "4632:126:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4809:32:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4819:16:25",
                        "value": {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "4830:5:25"
                        },
                        "variableNames": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulIdentifier",
                            "src": "4819:7:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "cleanup_t_uint256",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4791:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulTypedName",
                      "src": "4801:7:25",
                      "type": ""
                    }
                  ],
                  "src": "4764:77:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4919:67:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4929:51:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "4974:5:25"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_enum$_MarketType_$765",
                            "nodeType": "YulIdentifier",
                            "src": "4942:31:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4942:38:25"
                        },
                        "variableNames": [
                          {
                            "name": "converted",
                            "nodeType": "YulIdentifier",
                            "src": "4929:9:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "convert_t_enum$_MarketType_$765_to_t_uint8",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4899:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "converted",
                      "nodeType": "YulTypedName",
                      "src": "4909:9:25",
                      "type": ""
                    }
                  ],
                  "src": "4847:139:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5043:103:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "5066:3:25"
                            },
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "5071:3:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5076:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "5053:12:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5053:30:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5053:30:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5124:3:25"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5129:6:25"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5120:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5120:16:25"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5138:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5113:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5113:27:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5113:27:25"
                      }
                    ]
                  },
                  "name": "copy_calldata_to_memory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "5025:3:25",
                      "type": ""
                    },
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "5030:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5035:6:25",
                      "type": ""
                    }
                  ],
                  "src": "4992:154:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5201:258:25",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5211:10:25",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5220:1:25",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "5215:1:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5280:63:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "5305:3:25"
                                      },
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "5310:1:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5301:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5301:11:25"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "5324:3:25"
                                          },
                                          {
                                            "name": "i",
                                            "nodeType": "YulIdentifier",
                                            "src": "5329:1:25"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5320:3:25"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5320:11:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "5314:5:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5314:18:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5294:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5294:39:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5294:39:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5241:1:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5244:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "5238:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5238:13:25"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "5252:19:25",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5254:15:25",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "5263:1:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5266:2:25",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5259:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5259:10:25"
                              },
                              "variableNames": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "5254:1:25"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "5234:3:25",
                          "statements": []
                        },
                        "src": "5230:113:25"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5377:76:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "5427:3:25"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "5432:6:25"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5423:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5423:16:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5441:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5416:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5416:27:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5416:27:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5358:1:25"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "5361:6:25"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "5355:2:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5355:13:25"
                        },
                        "nodeType": "YulIf",
                        "src": "5352:2:25"
                      }
                    ]
                  },
                  "name": "copy_memory_to_memory",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "5183:3:25",
                      "type": ""
                    },
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "5188:3:25",
                      "type": ""
                    },
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5193:6:25",
                      "type": ""
                    }
                  ],
                  "src": "5152:307:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5493:152:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5510:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5513:77:25",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5503:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5503:88:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5503:88:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5607:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5610:4:25",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5600:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5600:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5600:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5631:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5634:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5624:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5624:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5624:15:25"
                      }
                    ]
                  },
                  "name": "panic_error_0x21",
                  "nodeType": "YulFunctionDefinition",
                  "src": "5465:180:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5679:152:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5696:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5699:77:25",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5689:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5689:88:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5689:88:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5793:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5796:4:25",
                              "type": "",
                              "value": "0x41"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5786:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5786:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5786:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5817:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5820:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5810:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5810:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5810:15:25"
                      }
                    ]
                  },
                  "name": "panic_error_0x41",
                  "nodeType": "YulFunctionDefinition",
                  "src": "5651:180:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5885:54:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5895:38:25",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "5913:5:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5920:2:25",
                                  "type": "",
                                  "value": "31"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5909:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5909:14:25"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5929:2:25",
                                  "type": "",
                                  "value": "31"
                                }
                              ],
                              "functionName": {
                                "name": "not",
                                "nodeType": "YulIdentifier",
                                "src": "5925:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5925:7:25"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "5905:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5905:28:25"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "5895:6:25"
                          }
                        ]
                      }
                    ]
                  },
                  "name": "round_up_to_mul_of_32",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5868:5:25",
                      "type": ""
                    }
                  ],
                  "returnVariables": [
                    {
                      "name": "result",
                      "nodeType": "YulTypedName",
                      "src": "5878:6:25",
                      "type": ""
                    }
                  ],
                  "src": "5837:102:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6002:62:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6036:22:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x21",
                                  "nodeType": "YulIdentifier",
                                  "src": "6038:16:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6038:18:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6038:18:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "6025:5:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6032:1:25",
                                  "type": "",
                                  "value": "2"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "6022:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6022:12:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "6015:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6015:20:25"
                        },
                        "nodeType": "YulIf",
                        "src": "6012:2:25"
                      }
                    ]
                  },
                  "name": "validator_assert_t_enum$_MarketType_$765",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5995:5:25",
                      "type": ""
                    }
                  ],
                  "src": "5945:119:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6113:79:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6170:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6179:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6182:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "6172:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6172:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6172:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "6136:5:25"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "6161:5:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "cleanup_t_address",
                                    "nodeType": "YulIdentifier",
                                    "src": "6143:17:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6143:24:25"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "6133:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6133:35:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "6126:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6126:43:25"
                        },
                        "nodeType": "YulIf",
                        "src": "6123:2:25"
                      }
                    ]
                  },
                  "name": "validator_revert_t_address",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6106:5:25",
                      "type": ""
                    }
                  ],
                  "src": "6070:122:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6255:56:25",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6289:16:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6298:1:25",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6301:1:25",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "6291:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6291:12:25"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6291:12:25"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "6278:5:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6285:1:25",
                                  "type": "",
                                  "value": "2"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "6275:2:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6275:12:25"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "6268:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6268:20:25"
                        },
                        "nodeType": "YulIf",
                        "src": "6265:2:25"
                      }
                    ]
                  },
                  "name": "validator_revert_t_enum$_MarketType_$765",
                  "nodeType": "YulFunctionDefinition",
                  "parameters": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6248:5:25",
                      "type": ""
                    }
                  ],
                  "src": "6198:113:25"
                }
              ]
            },
            "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_enum$_MarketType_$765(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_MarketType_$765(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_enum$_MarketType_$765(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_MarketType_$765(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_enum$_MarketType_$765_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_MarketType_$765_to_t_uint8(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_enum$_MarketType_$765__to_t_string_memory_ptr_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_enum$_MarketType_$765_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_enum$_MarketType_$765(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_MarketType_$765(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_MarketType_$765_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_MarketType_$765(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_assert_t_enum$_MarketType_$765(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_MarketType_$765(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n}\n",
            "id": 25,
            "language": "Yul",
            "name": "#utility.yul"
          }
        ],
        "sourceMap": "119:843:12:-:0;;;342:16;;;;;;;;;;119:843;;;;;;",
        "deployedSourceMap": "119:843:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;857:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;756:71;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;459:291;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;857:103;903:7;930:15;:22;;;;923:29;;857:103;:::o;756:71::-;;:::o;459:291::-;559:20;593:10;605;582:34;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;559:57;;626:15;647:13;626:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;705:15;:22;;;;690:13;676:67;;;737:4;676:67;;;;;;:::i;:::-;;;;;;;;459:291;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:344:25:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;357:139::-;;441:6;428:20;419:29;;457:33;484:5;457:33;:::i;:::-;409:87;;;;:::o;502:167::-;;600:6;587:20;578:29;;616:47;657:5;616:47;:::i;:::-;568:101;;;;:::o;689:273::-;;794:3;787:4;779:6;775:17;771:27;761:2;;812:1;809;802:12;761:2;852:6;839:20;877:79;952:3;944:6;937:4;929:6;925:17;877:79;:::i;:::-;868:88;;751:211;;;;;:::o;968:262::-;;1076:2;1064:9;1055:7;1051:23;1047:32;1044:2;;;1092:1;1089;1082:12;1044:2;1135:1;1160:53;1205:7;1196:6;1185:9;1181:22;1160:53;:::i;:::-;1150:63;;1106:117;1034:196;;;;:::o;1236:548::-;;;1385:2;1373:9;1364:7;1360:23;1356:32;1353:2;;;1401:1;1398;1391:12;1353:2;1472:1;1461:9;1457:17;1444:31;1502:18;1494:6;1491:30;1488:2;;;1534:1;1531;1524:12;1488:2;1562:63;1617:7;1608:6;1597:9;1593:22;1562:63;:::i;:::-;1552:73;;1415:220;1674:2;1700:67;1759:7;1750:6;1739:9;1735:22;1700:67;:::i;:::-;1690:77;;1645:132;1343:441;;;;;:::o;1790:118::-;1877:24;1895:5;1877:24;:::i;:::-;1872:3;1865:37;1855:53;;:::o;1914:155::-;2013:49;2056:5;2013:49;:::i;:::-;2008:3;2001:62;1991:78;;:::o;2075:364::-;;2191:39;2224:5;2191:39;:::i;:::-;2246:71;2310:6;2305:3;2246:71;:::i;:::-;2239:78;;2326:52;2371:6;2366:3;2359:4;2352:5;2348:16;2326:52;:::i;:::-;2403:29;2425:6;2403:29;:::i;:::-;2398:3;2394:39;2387:46;;2167:272;;;;;:::o;2445:118::-;2532:24;2550:5;2532:24;:::i;:::-;2527:3;2520:37;2510:53;;:::o;2569:222::-;;2700:2;2689:9;2685:18;2677:26;;2713:71;2781:1;2770:9;2766:17;2757:6;2713:71;:::i;:::-;2667:124;;;;:::o;2797:447::-;;2988:2;2977:9;2973:18;2965:26;;3037:9;3031:4;3027:20;3023:1;3012:9;3008:17;3001:47;3065:78;3138:4;3129:6;3065:78;:::i;:::-;3057:86;;3153:84;3233:2;3222:9;3218:18;3209:6;3153:84;:::i;:::-;2955:289;;;;;:::o;3250:222::-;;3381:2;3370:9;3366:18;3358:26;;3394:71;3462:1;3451:9;3447:17;3438:6;3394:71;:::i;:::-;3348:124;;;;:::o;3478:283::-;;3544:2;3538:9;3528:19;;3586:4;3578:6;3574:17;3693:6;3681:10;3678:22;3657:18;3645:10;3642:34;3639:62;3636:2;;;3704:18;;:::i;:::-;3636:2;3744:10;3740:2;3733:22;3518:243;;;;:::o;3767:332::-;;3919:18;3911:6;3908:30;3905:2;;;3941:18;;:::i;:::-;3905:2;4026:4;4022:9;4015:4;4007:6;4003:17;3999:33;3991:41;;4087:4;4081;4077:15;4069:23;;3834:265;;;:::o;4105:99::-;;4191:5;4185:12;4175:22;;4164:40;;;:::o;4210:169::-;;4328:6;4323:3;4316:19;4368:4;4363:3;4359:14;4344:29;;4306:73;;;;:::o;4385:96::-;;4451:24;4469:5;4451:24;:::i;:::-;4440:35;;4430:51;;;:::o;4487:139::-;;4567:5;4556:16;;4573:47;4614:5;4573:47;:::i;:::-;4546:80;;;:::o;4632:126::-;;4709:42;4702:5;4698:54;4687:65;;4677:81;;;:::o;4764:77::-;;4830:5;4819:16;;4809:32;;;:::o;4847:139::-;;4942:38;4974:5;4942:38;:::i;:::-;4929:51;;4919:67;;;:::o;4992:154::-;5076:6;5071:3;5066;5053:30;5138:1;5129:6;5124:3;5120:16;5113:27;5043:103;;;:::o;5152:307::-;5220:1;5230:113;5244:6;5241:1;5238:13;5230:113;;;5329:1;5324:3;5320:11;5314:18;5310:1;5305:3;5301:11;5294:39;5266:2;5263:1;5259:10;5254:15;;5230:113;;;5361:6;5358:1;5355:13;5352:2;;;5441:1;5432:6;5427:3;5423:16;5416:27;5352:2;5201:258;;;;:::o;5465:180::-;5513:77;5510:1;5503:88;5610:4;5607:1;5600:15;5634:4;5631:1;5624:15;5651:180;5699:77;5696:1;5689:88;5796:4;5793:1;5786:15;5820:4;5817:1;5810:15;5837:102;;5929:2;5925:7;5920:2;5913:5;5909:14;5905:28;5895:38;;5885:54;;;:::o;5945:119::-;6032:1;6025:5;6022:12;6012:2;;6038:18;;:::i;:::-;6012:2;6002:62;:::o;6070:122::-;6143:24;6161:5;6143:24;:::i;:::-;6136:5;6133:35;6123:2;;6182:1;6179;6172:12;6123:2;6113:79;:::o;6198:113::-;6285:1;6278:5;6275:12;6265:2;;6301:1;6298;6291:12;6265:2;6255:56;:::o",
        "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./Market.sol\";\nimport \"../libraries/MarketLib.sol\";\n\ncontract MarketFactory {\n    event MarketCreated(Market indexed _market, uint256 indexed index, address _marketAddress);\n    event MarketDestroyed(address indexed _marketAddress);\n    Market[] private _createdMarkets;\n\n    constructor() {}\n\n    /**\n     * Creates a user summary contract for each user based on their civic ID.\n     */\n     function createMarket(string memory marketName, MarketLib.MarketType marketType) external {\n        Market createdMarket = new Market(marketName, marketType);\n        _createdMarkets.push(createdMarket);\n        emit MarketCreated(createdMarket, _createdMarkets.length, address(this));\n    }\n\n    function destroyMarket(address marketAddress) external {\n        \n    }\n\n    /**\n     *\n     */\n     function getNumMarkets() public view returns (uint256) {\n         return _createdMarkets.length;\n     }\n}\n",
        "sourcePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/market/MarketFactory.sol",
        "ast": {
          "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/market/MarketFactory.sol",
          "exportedSymbols": {
            "Address": [
              2205
            ],
            "ConditionalEscrow": [
              2263
            ],
            "Context": [
              2228
            ],
            "Controllable": [
              176
            ],
            "Escrow": [
              2363
            ],
            "Evaluation": [
              760
            ],
            "IUserSummary": [
              1707
            ],
            "Market": [
              1197
            ],
            "MarketFactory": [
              1274
            ],
            "MarketLib": [
              769
            ],
            "MultiPartyOwneable": [
              363
            ],
            "Ownable": [
              1817
            ],
            "Pausable": [
              1909
            ],
            "RefundEscrow": [
              2542
            ],
            "SafeMath": [
              2854
            ],
            "StringUtils": [
              1010
            ],
            "User": [
              1030
            ],
            "UserSummary": [
              1567
            ],
            "WorkExchange": [
              556
            ],
            "WorkRelationship": [
              742
            ]
          },
          "id": 1275,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1199,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:12"
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/market/Market.sol",
              "file": "./Market.sol",
              "id": 1200,
              "nodeType": "ImportDirective",
              "scope": 1275,
              "sourceUnit": 1198,
              "src": "58:22:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/MarketLib.sol",
              "file": "../libraries/MarketLib.sol",
              "id": 1201,
              "nodeType": "ImportDirective",
              "scope": 1275,
              "sourceUnit": 770,
              "src": "81:36:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [
                1197
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1274,
              "linearizedBaseContracts": [
                1274
              ],
              "name": "MarketFactory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 1210,
                  "name": "MarketCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1209,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1204,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_market",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "168:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Market_$1197",
                          "typeString": "contract Market"
                        },
                        "typeName": {
                          "id": 1203,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1202,
                            "name": "Market",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1197,
                            "src": "168:6:12"
                          },
                          "referencedDeclaration": 1197,
                          "src": "168:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Market_$1197",
                            "typeString": "contract Market"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1206,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "192:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1205,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "192:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1208,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_marketAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "215:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1207,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "215:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "167:71:12"
                  },
                  "src": "148:91:12"
                },
                {
                  "anonymous": false,
                  "id": 1214,
                  "name": "MarketDestroyed",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1212,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_marketAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1214,
                        "src": "266:30:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1211,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "266:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "265:32:12"
                  },
                  "src": "244:54:12"
                },
                {
                  "constant": false,
                  "id": 1218,
                  "mutability": "mutable",
                  "name": "_createdMarkets",
                  "nodeType": "VariableDeclaration",
                  "scope": 1274,
                  "src": "303:32:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Market_$1197_$dyn_storage",
                    "typeString": "contract Market[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1216,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1215,
                        "name": "Market",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1197,
                        "src": "303:6:12"
                      },
                      "referencedDeclaration": 1197,
                      "src": "303:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Market_$1197",
                        "typeString": "contract Market"
                      }
                    },
                    "id": 1217,
                    "nodeType": "ArrayTypeName",
                    "src": "303:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Market_$1197_$dyn_storage_ptr",
                      "typeString": "contract Market[]"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1221,
                    "nodeType": "Block",
                    "src": "356:2:12",
                    "statements": []
                  },
                  "id": 1222,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1219,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "353:2:12"
                  },
                  "returnParameters": {
                    "id": 1220,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "356:0:12"
                  },
                  "scope": 1274,
                  "src": "342:16:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1257,
                    "nodeType": "Block",
                    "src": "549:201:12",
                    "statements": [
                      {
                        "assignments": [
                          1233
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1233,
                            "mutability": "mutable",
                            "name": "createdMarket",
                            "nodeType": "VariableDeclaration",
                            "scope": 1257,
                            "src": "559:20:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Market_$1197",
                              "typeString": "contract Market"
                            },
                            "typeName": {
                              "id": 1232,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1231,
                                "name": "Market",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1197,
                                "src": "559:6:12"
                              },
                              "referencedDeclaration": 1197,
                              "src": "559:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Market_$1197",
                                "typeString": "contract Market"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1240,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1237,
                              "name": "marketName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1225,
                              "src": "593:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 1238,
                              "name": "marketType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1228,
                              "src": "605:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MarketType_$765",
                                "typeString": "enum MarketLib.MarketType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_enum$_MarketType_$765",
                                "typeString": "enum MarketLib.MarketType"
                              }
                            ],
                            "id": 1236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "582:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_enum$_MarketType_$765_$returns$_t_contract$_Market_$1197_$",
                              "typeString": "function (string memory,enum MarketLib.MarketType) returns (contract Market)"
                            },
                            "typeName": {
                              "id": 1235,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1234,
                                "name": "Market",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1197,
                                "src": "586:6:12"
                              },
                              "referencedDeclaration": 1197,
                              "src": "586:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Market_$1197",
                                "typeString": "contract Market"
                              }
                            }
                          },
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "582:34:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Market_$1197",
                            "typeString": "contract Market"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "559:57:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1244,
                              "name": "createdMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1233,
                              "src": "647:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Market_$1197",
                                "typeString": "contract Market"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Market_$1197",
                                "typeString": "contract Market"
                              }
                            ],
                            "expression": {
                              "id": 1241,
                              "name": "_createdMarkets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1218,
                              "src": "626:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Market_$1197_$dyn_storage",
                                "typeString": "contract Market[] storage ref"
                              }
                            },
                            "id": 1243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "626:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Market_$1197_$returns$__$",
                              "typeString": "function (contract Market)"
                            }
                          },
                          "id": 1245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "626:35:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1246,
                        "nodeType": "ExpressionStatement",
                        "src": "626:35:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1248,
                              "name": "createdMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1233,
                              "src": "690:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Market_$1197",
                                "typeString": "contract Market"
                              }
                            },
                            {
                              "expression": {
                                "id": 1249,
                                "name": "_createdMarkets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1218,
                                "src": "705:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_Market_$1197_$dyn_storage",
                                  "typeString": "contract Market[] storage ref"
                                }
                              },
                              "id": 1250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "705:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1253,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "737:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MarketFactory_$1274",
                                    "typeString": "contract MarketFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MarketFactory_$1274",
                                    "typeString": "contract MarketFactory"
                                  }
                                ],
                                "id": 1252,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "729:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1251,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "729:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "729:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Market_$1197",
                                "typeString": "contract Market"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1247,
                            "name": "MarketCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1210,
                            "src": "676:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Market_$1197_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (contract Market,uint256,address)"
                            }
                          },
                          "id": 1255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "676:67:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1256,
                        "nodeType": "EmitStatement",
                        "src": "671:72:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1223,
                    "nodeType": "StructuredDocumentation",
                    "src": "364:89:12",
                    "text": " Creates a user summary contract for each user based on their civic ID."
                  },
                  "functionSelector": "c2ca748b",
                  "id": 1258,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createMarket",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1225,
                        "mutability": "mutable",
                        "name": "marketName",
                        "nodeType": "VariableDeclaration",
                        "scope": 1258,
                        "src": "481:24:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1224,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "481:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1228,
                        "mutability": "mutable",
                        "name": "marketType",
                        "nodeType": "VariableDeclaration",
                        "scope": 1258,
                        "src": "507:31:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MarketType_$765",
                          "typeString": "enum MarketLib.MarketType"
                        },
                        "typeName": {
                          "id": 1227,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1226,
                            "name": "MarketLib.MarketType",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 765,
                            "src": "507:20:12"
                          },
                          "referencedDeclaration": 765,
                          "src": "507:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketType_$765",
                            "typeString": "enum MarketLib.MarketType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "480:59:12"
                  },
                  "returnParameters": {
                    "id": 1230,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "549:0:12"
                  },
                  "scope": 1274,
                  "src": "459:291:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1263,
                    "nodeType": "Block",
                    "src": "811:16:12",
                    "statements": []
                  },
                  "functionSelector": "4f506195",
                  "id": 1264,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "destroyMarket",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1261,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1260,
                        "mutability": "mutable",
                        "name": "marketAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1264,
                        "src": "779:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1259,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "779:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "778:23:12"
                  },
                  "returnParameters": {
                    "id": 1262,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "811:0:12"
                  },
                  "scope": 1274,
                  "src": "756:71:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1272,
                    "nodeType": "Block",
                    "src": "912:48:12",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1269,
                            "name": "_createdMarkets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1218,
                            "src": "930:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_Market_$1197_$dyn_storage",
                              "typeString": "contract Market[] storage ref"
                            }
                          },
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "930:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1268,
                        "id": 1271,
                        "nodeType": "Return",
                        "src": "923:29:12"
                      }
                    ]
                  },
                  "functionSelector": "295c39a5",
                  "id": 1273,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNumMarkets",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1265,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "879:2:12"
                  },
                  "returnParameters": {
                    "id": 1268,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1267,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1273,
                        "src": "903:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1266,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "903:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "902:9:12"
                  },
                  "scope": 1274,
                  "src": "857:103:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1275,
              "src": "119:843:12"
            }
          ],
          "src": "33:930:12"
        },
        "legacyAST": {
          "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/market/MarketFactory.sol",
          "exportedSymbols": {
            "Address": [
              2205
            ],
            "ConditionalEscrow": [
              2263
            ],
            "Context": [
              2228
            ],
            "Controllable": [
              176
            ],
            "Escrow": [
              2363
            ],
            "Evaluation": [
              760
            ],
            "IUserSummary": [
              1707
            ],
            "Market": [
              1197
            ],
            "MarketFactory": [
              1274
            ],
            "MarketLib": [
              769
            ],
            "MultiPartyOwneable": [
              363
            ],
            "Ownable": [
              1817
            ],
            "Pausable": [
              1909
            ],
            "RefundEscrow": [
              2542
            ],
            "SafeMath": [
              2854
            ],
            "StringUtils": [
              1010
            ],
            "User": [
              1030
            ],
            "UserSummary": [
              1567
            ],
            "WorkExchange": [
              556
            ],
            "WorkRelationship": [
              742
            ]
          },
          "id": 1275,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1199,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:12"
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/market/Market.sol",
              "file": "./Market.sol",
              "id": 1200,
              "nodeType": "ImportDirective",
              "scope": 1275,
              "sourceUnit": 1198,
              "src": "58:22:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "/Users/elijahhampton/git/opportunity-core/src/contracts/libraries/MarketLib.sol",
              "file": "../libraries/MarketLib.sol",
              "id": 1201,
              "nodeType": "ImportDirective",
              "scope": 1275,
              "sourceUnit": 770,
              "src": "81:36:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [
                1197
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1274,
              "linearizedBaseContracts": [
                1274
              ],
              "name": "MarketFactory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 1210,
                  "name": "MarketCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1209,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1204,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_market",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "168:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Market_$1197",
                          "typeString": "contract Market"
                        },
                        "typeName": {
                          "id": 1203,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1202,
                            "name": "Market",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1197,
                            "src": "168:6:12"
                          },
                          "referencedDeclaration": 1197,
                          "src": "168:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Market_$1197",
                            "typeString": "contract Market"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1206,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "192:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1205,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "192:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1208,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_marketAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "215:22:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1207,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "215:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "167:71:12"
                  },
                  "src": "148:91:12"
                },
                {
                  "anonymous": false,
                  "id": 1214,
                  "name": "MarketDestroyed",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1212,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "_marketAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1214,
                        "src": "266:30:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1211,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "266:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "265:32:12"
                  },
                  "src": "244:54:12"
                },
                {
                  "constant": false,
                  "id": 1218,
                  "mutability": "mutable",
                  "name": "_createdMarkets",
                  "nodeType": "VariableDeclaration",
                  "scope": 1274,
                  "src": "303:32:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Market_$1197_$dyn_storage",
                    "typeString": "contract Market[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1216,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1215,
                        "name": "Market",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1197,
                        "src": "303:6:12"
                      },
                      "referencedDeclaration": 1197,
                      "src": "303:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Market_$1197",
                        "typeString": "contract Market"
                      }
                    },
                    "id": 1217,
                    "nodeType": "ArrayTypeName",
                    "src": "303:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Market_$1197_$dyn_storage_ptr",
                      "typeString": "contract Market[]"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1221,
                    "nodeType": "Block",
                    "src": "356:2:12",
                    "statements": []
                  },
                  "id": 1222,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1219,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "353:2:12"
                  },
                  "returnParameters": {
                    "id": 1220,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "356:0:12"
                  },
                  "scope": 1274,
                  "src": "342:16:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1257,
                    "nodeType": "Block",
                    "src": "549:201:12",
                    "statements": [
                      {
                        "assignments": [
                          1233
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1233,
                            "mutability": "mutable",
                            "name": "createdMarket",
                            "nodeType": "VariableDeclaration",
                            "scope": 1257,
                            "src": "559:20:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Market_$1197",
                              "typeString": "contract Market"
                            },
                            "typeName": {
                              "id": 1232,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1231,
                                "name": "Market",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1197,
                                "src": "559:6:12"
                              },
                              "referencedDeclaration": 1197,
                              "src": "559:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Market_$1197",
                                "typeString": "contract Market"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1240,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1237,
                              "name": "marketName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1225,
                              "src": "593:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 1238,
                              "name": "marketType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1228,
                              "src": "605:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MarketType_$765",
                                "typeString": "enum MarketLib.MarketType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_enum$_MarketType_$765",
                                "typeString": "enum MarketLib.MarketType"
                              }
                            ],
                            "id": 1236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "582:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_enum$_MarketType_$765_$returns$_t_contract$_Market_$1197_$",
                              "typeString": "function (string memory,enum MarketLib.MarketType) returns (contract Market)"
                            },
                            "typeName": {
                              "id": 1235,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1234,
                                "name": "Market",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1197,
                                "src": "586:6:12"
                              },
                              "referencedDeclaration": 1197,
                              "src": "586:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Market_$1197",
                                "typeString": "contract Market"
                              }
                            }
                          },
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "582:34:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Market_$1197",
                            "typeString": "contract Market"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "559:57:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1244,
                              "name": "createdMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1233,
                              "src": "647:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Market_$1197",
                                "typeString": "contract Market"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Market_$1197",
                                "typeString": "contract Market"
                              }
                            ],
                            "expression": {
                              "id": 1241,
                              "name": "_createdMarkets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1218,
                              "src": "626:15:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_Market_$1197_$dyn_storage",
                                "typeString": "contract Market[] storage ref"
                              }
                            },
                            "id": 1243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "626:20:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Market_$1197_$returns$__$",
                              "typeString": "function (contract Market)"
                            }
                          },
                          "id": 1245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "626:35:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1246,
                        "nodeType": "ExpressionStatement",
                        "src": "626:35:12"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1248,
                              "name": "createdMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1233,
                              "src": "690:13:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Market_$1197",
                                "typeString": "contract Market"
                              }
                            },
                            {
                              "expression": {
                                "id": 1249,
                                "name": "_createdMarkets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1218,
                                "src": "705:15:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_Market_$1197_$dyn_storage",
                                  "typeString": "contract Market[] storage ref"
                                }
                              },
                              "id": 1250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "705:22:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1253,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "737:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MarketFactory_$1274",
                                    "typeString": "contract MarketFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MarketFactory_$1274",
                                    "typeString": "contract MarketFactory"
                                  }
                                ],
                                "id": 1252,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "729:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1251,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "729:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "729:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Market_$1197",
                                "typeString": "contract Market"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1247,
                            "name": "MarketCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1210,
                            "src": "676:13:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Market_$1197_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (contract Market,uint256,address)"
                            }
                          },
                          "id": 1255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "676:67:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1256,
                        "nodeType": "EmitStatement",
                        "src": "671:72:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1223,
                    "nodeType": "StructuredDocumentation",
                    "src": "364:89:12",
                    "text": " Creates a user summary contract for each user based on their civic ID."
                  },
                  "functionSelector": "c2ca748b",
                  "id": 1258,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createMarket",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1225,
                        "mutability": "mutable",
                        "name": "marketName",
                        "nodeType": "VariableDeclaration",
                        "scope": 1258,
                        "src": "481:24:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1224,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "481:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1228,
                        "mutability": "mutable",
                        "name": "marketType",
                        "nodeType": "VariableDeclaration",
                        "scope": 1258,
                        "src": "507:31:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MarketType_$765",
                          "typeString": "enum MarketLib.MarketType"
                        },
                        "typeName": {
                          "id": 1227,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1226,
                            "name": "MarketLib.MarketType",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 765,
                            "src": "507:20:12"
                          },
                          "referencedDeclaration": 765,
                          "src": "507:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MarketType_$765",
                            "typeString": "enum MarketLib.MarketType"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "480:59:12"
                  },
                  "returnParameters": {
                    "id": 1230,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "549:0:12"
                  },
                  "scope": 1274,
                  "src": "459:291:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1263,
                    "nodeType": "Block",
                    "src": "811:16:12",
                    "statements": []
                  },
                  "functionSelector": "4f506195",
                  "id": 1264,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "destroyMarket",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1261,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1260,
                        "mutability": "mutable",
                        "name": "marketAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1264,
                        "src": "779:21:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1259,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "779:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "778:23:12"
                  },
                  "returnParameters": {
                    "id": 1262,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "811:0:12"
                  },
                  "scope": 1274,
                  "src": "756:71:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1272,
                    "nodeType": "Block",
                    "src": "912:48:12",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1269,
                            "name": "_createdMarkets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1218,
                            "src": "930:15:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_Market_$1197_$dyn_storage",
                              "typeString": "contract Market[] storage ref"
                            }
                          },
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "930:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1268,
                        "id": 1271,
                        "nodeType": "Return",
                        "src": "923:29:12"
                      }
                    ]
                  },
                  "functionSelector": "295c39a5",
                  "id": 1273,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNumMarkets",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1265,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "879:2:12"
                  },
                  "returnParameters": {
                    "id": 1268,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1267,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1273,
                        "src": "903:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1266,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "903:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "902:9:12"
                  },
                  "scope": 1274,
                  "src": "857:103:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1275,
              "src": "119:843:12"
            }
          ],
          "src": "33:930:12"
        },
        "compiler": {
          "name": "solc",
          "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
        },
        "networks": {
          "5777": {
            "events": {},
            "links": {},
            "address": "0xd420465B55f33dDd5429b7cb1d2B2d9Dd1C5C55a",
            "transactionHash": "0x0f5d5060967ab35baf2ae005b95cbf2bc13e3498a5eeb802f621494099441f57"
          }
        },
        "schemaVersion": "3.4.1",
        "updatedAt": "2021-05-18T01:40:26.865Z",
        "networkType": "ethereum",
        "devdoc": {
          "kind": "dev",
          "methods": {},
          "version": 1
        },
        "userdoc": {
          "kind": "user",
          "methods": {
            "createMarket(string,uint8)": {
              "notice": "Creates a user summary contract for each user based on their civic ID."
            }
          },
          "version": 1
        }
      },
}